<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>JiFu&#39;s Wiki</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.jifu.io/"/>
  <updated>2020-08-11T05:17:21.000Z</updated>
  <id>http://www.jifu.io/</id>
  
  <author>
    <name>Ji Fu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>命令行信息截图工具 - ScreenFetch</title>
    <link href="http://www.jifu.io/posts/3895039994/"/>
    <id>http://www.jifu.io/posts/3895039994/</id>
    <published>2020-08-11T05:17:21.000Z</published>
    <updated>2020-08-11T05:17:21.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://www.jifu.io/images/2/20190427135657.jpg" alt=""></p><h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>screenFetch 是一个“命令行信息截图工具”。它可以在终端上显示系统信息，并进行桌面截图。它能生成漂亮的文本的系统信息和ASCII艺术的发行版LOGO，然后显示在截屏图片中。</p><p>它会自动检测你的发行版并显示其ASCII版本的LOGO，在其右侧显示系统信息。可以通过选项来指定是否显示LOGO、指定颜色，进行截图，甚至可以自定义截图的命令。screenFectch非常容易添加和扩展。</p><h1 id="screenFetch将显示以下系统信息"><a href="#screenFetch将显示以下系统信息" class="headerlink" title="screenFetch将显示以下系统信息"></a>screenFetch将显示以下系统信息</h1><ul><li>当前登录用户</li><li>操作系统版本</li><li>内核版本</li><li>总计运行时间</li><li>已安装包数量</li><li>当前shell详情</li><li>当前屏幕分辨率</li><li>当前桌面环境</li><li>当前窗口管理器（文件管理器）</li><li>总计及空闲磁盘使用百分比</li><li>CPU详情，如处理器速度、类型</li><li>总计及当前内存使用量</li></ul><h1 id="在Linux上安装screenFectch"><a href="#在Linux上安装screenFectch" class="headerlink" title="在Linux上安装screenFectch"></a>在Linux上安装screenFectch</h1><p>您可以通过直接从项目页下载源码包的方式安装，或者从<code>screenFetch git</code>库克隆。</p><a id="more"></a><h2 id="源码安装"><a href="#源码安装" class="headerlink" title="源码安装"></a>源码安装</h2><p>下载 最新版. 我下载并安装在<code>/home/sk/Downloads</code>目录.</p><p>用命令解压：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token variable">$unzip</span> Downloads/screenfetch-3.1.0.zip<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>进入screenFectch目录，并设置执行权限.</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token variable">$cd</span> screenfetch-3.1.0/<span class="token variable">$chmod</span> +x screenfetch-dev<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>在命令行运行：</p><pre class="line-numbers language-bash"><code class="language-bash">$./screenfetch-dev<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>输出示例：</p><p><img src="https://www.jifu.io/images/2/20190427135043.png" alt=""></p><h2 id="通过git库安装"><a href="#通过git库安装" class="headerlink" title="通过git库安装"></a>通过git库安装</h2><p>首先确认你是否安装了git.</p><p>如果没有安装，基于RHEL系统的用户用以下命令安装：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># yum install git</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>基于Debian系统的用户用以下命令安装:</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># apt-get install git</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>使用命令克隆screenFectch库:</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># git clone git://github.com/KittyKatt/screenFetch.git screenfetch</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>复制文件到/usr/bin/目录，并设置执行权限:</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># cp screenfetch/screenfetch-dev /usr/bin/screenfetch</span><span class="token comment" spellcheck="true"># chmod +x /usr/bin/screenfetch</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>运行screenFectch:</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># screenfetch</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>您将会看到如上面截图所示的结果.</p><p><img src="https://www.jifu.io/images/2/20190427135043.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://www.jifu.io/images/2/20190427135657.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h1&gt;&lt;p&gt;screenFetch 是一个“命令行信息截图工具”。它可以在终端上显示系统信息，并进行桌面截图。它能生成漂亮的文本的系统信息和ASCII艺术的发行版LOGO，然后显示在截屏图片中。&lt;/p&gt;
&lt;p&gt;它会自动检测你的发行版并显示其ASCII版本的LOGO，在其右侧显示系统信息。可以通过选项来指定是否显示LOGO、指定颜色，进行截图，甚至可以自定义截图的命令。screenFectch非常容易添加和扩展。&lt;/p&gt;
&lt;h1 id=&quot;screenFetch将显示以下系统信息&quot;&gt;&lt;a href=&quot;#screenFetch将显示以下系统信息&quot; class=&quot;headerlink&quot; title=&quot;screenFetch将显示以下系统信息&quot;&gt;&lt;/a&gt;screenFetch将显示以下系统信息&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;当前登录用户&lt;/li&gt;
&lt;li&gt;操作系统版本&lt;/li&gt;
&lt;li&gt;内核版本&lt;/li&gt;
&lt;li&gt;总计运行时间&lt;/li&gt;
&lt;li&gt;已安装包数量&lt;/li&gt;
&lt;li&gt;当前shell详情&lt;/li&gt;
&lt;li&gt;当前屏幕分辨率&lt;/li&gt;
&lt;li&gt;当前桌面环境&lt;/li&gt;
&lt;li&gt;当前窗口管理器（文件管理器）&lt;/li&gt;
&lt;li&gt;总计及空闲磁盘使用百分比&lt;/li&gt;
&lt;li&gt;CPU详情，如处理器速度、类型&lt;/li&gt;
&lt;li&gt;总计及当前内存使用量&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;在Linux上安装screenFectch&quot;&gt;&lt;a href=&quot;#在Linux上安装screenFectch&quot; class=&quot;headerlink&quot; title=&quot;在Linux上安装screenFectch&quot;&gt;&lt;/a&gt;在Linux上安装screenFectch&lt;/h1&gt;&lt;p&gt;您可以通过直接从项目页下载源码包的方式安装，或者从&lt;code&gt;screenFetch git&lt;/code&gt;库克隆。&lt;/p&gt;
    
    </summary>
    
      <category term="OPS" scheme="http://www.jifu.io/categories/OPS/"/>
    
      <category term="Others" scheme="http://www.jifu.io/categories/OPS/Others/"/>
    
    
      <category term="command" scheme="http://www.jifu.io/tags/command/"/>
    
      <category term="screenfetch" scheme="http://www.jifu.io/tags/screenfetch/"/>
    
      <category term="系统信息" scheme="http://www.jifu.io/tags/%E7%B3%BB%E7%BB%9F%E4%BF%A1%E6%81%AF/"/>
    
  </entry>
  
  <entry>
    <title>用好这些隐藏「小开关」，让 Chrome 浏览器更好用</title>
    <link href="http://www.jifu.io/posts/1413974522/"/>
    <id>http://www.jifu.io/posts/1413974522/</id>
    <published>2019-12-17T13:14:30.000Z</published>
    <updated>2020-08-11T05:17:21.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://www.jifu.io/images/posts/1413974522/223592376156316015.jpg" alt=""></p><p>相比移动端的 Chrome 浏览器，功能性能更强更全面的桌面端 Chrome 可能是你我每天使用频次最多的桌面软件。多端数据同步、实用的扩展插件都让其成为电脑上的「超级应用」。近乎无限制的桌面平台也让其可以在第一时间运用起新的功能和技术，这也是限制重重的移动端 Chrome 所无法比拟的。</p><p>当然因为桌面端 Chrome 的广泛使用性，新功能的推出和运用反而会更为谨慎。如果想要尝鲜新功能一样是通过 Feature flags —— 当然比起移动端，桌面端的新功能主要针对的键鼠操作，和移动端有相当大的区别。</p><h1 id="尝鲜新功能，善用-Chrome-flags"><a href="#尝鲜新功能，善用-Chrome-flags" class="headerlink" title="尝鲜新功能，善用 Chrome flags"></a>尝鲜新功能，善用 Chrome flags</h1><p>Chrome 之所以被认为是「超级应用」，很大程度上在于起功能增添和更新上像极了操作系统，新功能会首先出现在 Dev 版、然后经过 Beta 测试后，最后推送到稳定通道中。而新开发的功能则被隐藏在 Chrome flags —— 作为新功能的试验田，通过开启特定的 flags 来在稳定版中尝鲜新功能，即可以尝鲜也避免了可能的不稳定风险，下面我们挑选了一些稳定性尚可且比较实用的 flags， 通过开启对应的开关来让 电脑版的 Chrome 变得更好用。</p><p><img src="https://www.jifu.io/images/posts/1413974522/62091785b5a850e5581.png" alt=""></p><blockquote><p>注：本文 Chrome 版本为稳定通道 v78，电脑系统为 Windows 10 v1909</p></blockquote><h1 id="开启并行下载功能"><a href="#开启并行下载功能" class="headerlink" title="开启并行下载功能"></a>开启并行下载功能</h1><p>移动端 Chrome 考虑到带宽和设备性能问题，只允许单进程下载其实并无不妥，而桌面端至今依旧默认单进程下载似乎就有点说不过去了，所以相比移动端，在桌面端开启并行下载功能要更为迫切一些。</p><a id="more"></a><p><img src="https://www.jifu.io/images/posts/1413974522/3fcda253bfa14e0f814b.png" alt=""></p><p>开启方法和移动端一样， 在 Chrome flags 上搜索「Parallel downloading」来开启 Chrome 的并行下载功能，你可以尝试下大个文件以及多个文件，你会发现速度会提高那么一些。当然如果有条件的话，选择第三方下载工具进行资源下载反而更为合适。</p><h2 id="开启方法"><a href="#开启方法" class="headerlink" title="开启方法"></a>开启方法</h2><p><code>chrome://flags/#enable-parallel-downloading</code></p><h1 id="给标签页进行分组"><a href="#给标签页进行分组" class="headerlink" title="给标签页进行分组"></a>给标签页进行分组</h1><p>多标签页浏览器有时也会给我们带来烦恼——我们会不自觉的打开 n 多标签页，时间一长就会忘记哪些标签页是有关联的，比如像我就经常遇到已经打开了某个标签页但最后又重复打开的，其实对标签页分组就可以妥善解决这些问题。</p><p><img src="https://www.jifu.io/images/posts/1413974522/df7342dc6a874ba63e1.png" alt=""></p><p>这个很实用的功能同样也是默认隐藏，需要在 Chrome Flags 中搜索「Tab Groups」开启，之后将开启自动分组功能。自动分组功能将根据你的打开新标签页的方式，比如从少数派中打开的新内容页面将会自动添加到一个组中，这时会在标签页前面出现一个「组标记点」。</p><p><img src="https://www.jifu.io/images/posts/1413974522/58089a109692ee602.png" alt=""></p><p>你还可以手动创建新的组或者将当前标签页加入组中，通过拖拽的标签页将起放在「组标记点」后面就可以添加到当前组，而移除则只需要将标签页从组中拖拽出即可，而为了标记的更清楚，点击组的标记点还可以更改颜色，也可以为组进行命名让其更明显。</p><h2 id="开启方式"><a href="#开启方式" class="headerlink" title="开启方式"></a>开启方式</h2><p><code>chrome://flags/#tab-groups</code></p><h1 id="桌面端开启阅读模式"><a href="#桌面端开启阅读模式" class="headerlink" title="桌面端开启阅读模式"></a>桌面端开启阅读模式</h1><p>无论是 Firefox 还是旧版本的 Edge 浏览器，都内置有阅读模式，这些功能并非是多此一举，而是可以极大的提高内容阅读体验，去除广告、无关的框架样式等干扰性元素，内容重新排版之后方便进一步的深入阅读，即便不使用稍后读服务也能做到类似的信息阅读体验。</p><p><img src="https://www.jifu.io/images/posts/1413974522/4f7f0969da3baf0103.png" alt=""></p><p>奇怪的是这个功能在桌面端的 Chrome 中依旧被隐藏在 flag 中，而开启方式是在 Chrome Flags 中找到「Enable Reader Mode 」来开启这个功能，打开之后重启浏览器，在地址栏的最右侧会出现一个新的图标，点击之后就会直接将当前网页转换成阅读模式，不过比起移动端功能丰富的设置项，桌面端的阅读模式要简陋很多，也无法对主题、字体和字号大小进行调整。</p><h1 id="开启方式-1"><a href="#开启方式-1" class="headerlink" title="开启方式"></a>开启方式</h1><p><code>chrome://flags/#enable-reader-mode</code></p><h1 id="让网页内容强制显示为深色主题"><a href="#让网页内容强制显示为深色主题" class="headerlink" title="让网页内容强制显示为深色主题"></a>让网页内容强制显示为深色主题</h1><p>macOS Mojave 开始支持系统深色主题的同时，Safari 也加入了一个新的 API，允许已经加入深色主题的网站跟随系统调整深色主题，只不过目前绝大多数的网站并不支持这一特性，而在 Chrome 中其实也支持类似功能，只不过该选项并非是默认开启同样需要通过在 Chrome flags 中手动开启。</p><p><img src="https://www.jifu.io/images/posts/1413974522/cc69183fe94cdbd6c66.png" alt=""></p><p>在 Chrome Flags 中搜索「Force Dark Mode」就可以看到设置选项，并且提供了相当多的显示效果选择，选择「Enable」重启后就可以看到强制开启后的基本效果，对于没有提供网页深色主题的网站，强制开启可以认为是原先网页配色在色环上对应的反色，所以看上去的展示效果比较一般，并且不同的网站的深色主题展示效果不佳，有些网站甚至完全无法用，只能用来进行一定程度的尝鲜。</p><h2 id="开启方式-2"><a href="#开启方式-2" class="headerlink" title="开启方式"></a>开启方式</h2><p><code>chrome://flags/#enable-force-dark</code></p><h1 id="开启全局媒体播放控制"><a href="#开启全局媒体播放控制" class="headerlink" title="开启全局媒体播放控制"></a>开启全局媒体播放控制</h1><p>播放在线多媒体时，如果需要暂停，快进等操作都要进入到标签页中进行调整，有时候标签页开的多，实在没法立即定位到播放页面就会很麻烦。有一个全局媒体播放控制可以简化这些步骤，这样就不用打开对应的标签页也可进行全局控制。</p><p><img src="https://www.jifu.io/images/posts/1413974522/b49f14d9852579a21a.png" alt=""></p><p>开启方法也很简单，同样是在 Chrome Flags 中搜索「 Global Media Controls 」找到之后选择「Enable」重启浏览器，这时候你打开一个视频播放页面并播放视频，同时在工具栏中就会出现一个多媒体按钮，点击就可以看到一个媒体播放选项卡，无需打开对应标签页就可以控制多媒体内容播放。</p><h2 id="开启方式-3"><a href="#开启方式-3" class="headerlink" title="开启方式"></a>开启方式</h2><p><code>chrome://flags/#global-media-controls</code></p><h1 id="鼠标悬停标签页展示网页预览图"><a href="#鼠标悬停标签页展示网页预览图" class="headerlink" title="鼠标悬停标签页展示网页预览图"></a>鼠标悬停标签页展示网页预览图</h1><p>开的标签页多了之后会逐步挤占标签页的标题文本信息，想要知道里面网页内容就只能切换到该标签页查看，那么如何不切换到当前标签页就能看到到网页里面的大致内容呢？这项早已出现在经典版 Edge 浏览器上的功能在 Chrome 竟然也是隐藏功能，开启方式当然还是在 Chrome Flag —— 搜素「Tab Hover Card Images」选择开启就可以看到效果了。</p><p><img src="https://www.jifu.io/images/posts/1413974522/6ca6786fb81aed7164.png" alt=""></p><p>开启之后当鼠标悬停在标签页时将可以看到网页内容的预览窗口了，不用切换标签页就可以看到内容可以说更为方便一些，不过这项功能对系统性能有一定的要求，如果想要更好的浏览体验可以酌情开启。</p><h2 id="开启方式-4"><a href="#开启方式-4" class="headerlink" title="开启方式"></a>开启方式</h2><p><code>chrome://flags/#tab-hover-card-images</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://www.jifu.io/images/posts/1413974522/223592376156316015.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;相比移动端的 Chrome 浏览器，功能性能更强更全面的桌面端 Chrome 可能是你我每天使用频次最多的桌面软件。多端数据同步、实用的扩展插件都让其成为电脑上的「超级应用」。近乎无限制的桌面平台也让其可以在第一时间运用起新的功能和技术，这也是限制重重的移动端 Chrome 所无法比拟的。&lt;/p&gt;
&lt;p&gt;当然因为桌面端 Chrome 的广泛使用性，新功能的推出和运用反而会更为谨慎。如果想要尝鲜新功能一样是通过 Feature flags —— 当然比起移动端，桌面端的新功能主要针对的键鼠操作，和移动端有相当大的区别。&lt;/p&gt;
&lt;h1 id=&quot;尝鲜新功能，善用-Chrome-flags&quot;&gt;&lt;a href=&quot;#尝鲜新功能，善用-Chrome-flags&quot; class=&quot;headerlink&quot; title=&quot;尝鲜新功能，善用 Chrome flags&quot;&gt;&lt;/a&gt;尝鲜新功能，善用 Chrome flags&lt;/h1&gt;&lt;p&gt;Chrome 之所以被认为是「超级应用」，很大程度上在于起功能增添和更新上像极了操作系统，新功能会首先出现在 Dev 版、然后经过 Beta 测试后，最后推送到稳定通道中。而新开发的功能则被隐藏在 Chrome flags —— 作为新功能的试验田，通过开启特定的 flags 来在稳定版中尝鲜新功能，即可以尝鲜也避免了可能的不稳定风险，下面我们挑选了一些稳定性尚可且比较实用的 flags， 通过开启对应的开关来让 电脑版的 Chrome 变得更好用。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.jifu.io/images/posts/1413974522/62091785b5a850e5581.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注：本文 Chrome 版本为稳定通道 v78，电脑系统为 Windows 10 v1909&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;开启并行下载功能&quot;&gt;&lt;a href=&quot;#开启并行下载功能&quot; class=&quot;headerlink&quot; title=&quot;开启并行下载功能&quot;&gt;&lt;/a&gt;开启并行下载功能&lt;/h1&gt;&lt;p&gt;移动端 Chrome 考虑到带宽和设备性能问题，只允许单进程下载其实并无不妥，而桌面端至今依旧默认单进程下载似乎就有点说不过去了，所以相比移动端，在桌面端开启并行下载功能要更为迫切一些。&lt;/p&gt;
    
    </summary>
    
      <category term="OPS" scheme="http://www.jifu.io/categories/OPS/"/>
    
      <category term="Others" scheme="http://www.jifu.io/categories/OPS/Others/"/>
    
    
      <category term="技巧" scheme="http://www.jifu.io/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Chrome" scheme="http://www.jifu.io/tags/Chrome/"/>
    
      <category term="Chrome flags" scheme="http://www.jifu.io/tags/Chrome-flags/"/>
    
  </entry>
  
  <entry>
    <title>Linux swap分区及作用详解</title>
    <link href="http://www.jifu.io/posts/4024224000/"/>
    <id>http://www.jifu.io/posts/4024224000/</id>
    <published>2019-11-16T03:44:24.000Z</published>
    <updated>2020-08-11T05:17:21.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://www.jifu.io/images/2/20191116165053.png" alt=""></p><p>我们在安装系统的时候已经建立了 swap 分区。swap 分区通常被称为交换分区，这是一块特殊的硬盘空间，即当实际内存不够用的时候，操作系统会从内存中取出一部分暂时不用的数据，放在交换分区中，从而为当前运行的程序腾出足够的内存空间。</p><p>也就是说，当内存不够用时，我们使用 swap 分区来临时顶替。这种“拆东墙，补西墙”的方式应用于几乎所有的操作系统中。</p><p>使用 swap 交换分区，显著的优点是，通过操作系统的调度，应用程序实际可以使用的内存空间将远远超过系统的物理内存。由于硬盘空间的价格远比 RAM 要低，因此这种方式无疑是经济实惠的。当然，频繁地读写硬盘，会显著降低操作系统的运行速率，这也是使用 swap 交换分区最大的限制。</p><blockquote><p>相比较而言，Windows 不会为 swap 单独划分一个分区，而是使用分页文件实现相同的功能，在概念上，Windows 称其为虚拟内存，从某种意义上将，这个叫法更容易理解。因此，初学者将 swap 交换分区理解为虚拟内存是没有任何问题的。</p></blockquote><p>具体使用多大的 swap 分区，取决于物理内存大小和硬盘的容量。一般来讲，swap 分区容量应大于物理内存大小，建议是内存的两倍，但不超过 2GB。但是，有时服务器的访问量确实很大，有可能出现 swap 分区不够用的情况，所以我们需要学习 swap 分区的构建方法。</p><p>建立新的 swap 分区，只需要执行以下几个步骤。</p><ol><li><p>分区：不管是 fdisk 命令还是 parted 命令，都需要先区。</p></li><li><p>格式化：格式化命令稍有不同，使用 mkswap 命令把分区格式化成 swap 分区。</p></li><li><p>使用 swap 分区。</p></li></ol><a id="more"></a><h2 id="分区"><a href="#分区" class="headerlink" title="分区"></a>分区</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># fdisk /dev/sdb</span><span class="token comment" spellcheck="true">#以/dev/sdb分区为例</span>WARNING: DOS-compatible mode is deprecated.It<span class="token string">'s strongly recommended to switch off the mode (command '</span>c<span class="token string">') and change display units to sectors (command '</span>u'<span class="token punctuation">)</span>.Command <span class="token punctuation">(</span>m <span class="token keyword">for</span> help<span class="token punctuation">)</span>: n<span class="token comment" spellcheck="true">#新建</span>Command action e extended p primary partition <span class="token punctuation">(</span>1-4<span class="token punctuation">)</span>P<span class="token comment" spellcheck="true">#主分区</span>Partition number <span class="token punctuation">(</span>1-4<span class="token punctuation">)</span>: 1<span class="token comment" spellcheck="true">#分区编号</span>First cylinder <span class="token punctuation">(</span>1-2610, default 1<span class="token punctuation">)</span>:<span class="token comment" spellcheck="true">#起始柱面</span>Using default value 1Last cylinder, +cylinders or +size<span class="token punctuation">{</span>K, M, G<span class="token punctuation">}</span> <span class="token punctuation">(</span>1-2610, default 2610<span class="token punctuation">)</span>: +500M<span class="token comment" spellcheck="true">#大小</span>Command <span class="token punctuation">(</span>m <span class="token keyword">for</span> help<span class="token punctuation">)</span>: p<span class="token comment" spellcheck="true">#查看一下</span>Disk /dev/sdb: 21.5GB, 21474836480 bytes255 heads, 63 sectors/track, 2610 cylindersUnits <span class="token operator">=</span> cylinders of 16065 *512 <span class="token operator">=</span> 8225280 bytesSector size <span class="token punctuation">(</span>logical/physical<span class="token punctuation">)</span>: 512 bytes / 512 bytesI/O size <span class="token punctuation">(</span>minimum/optimal<span class="token punctuation">)</span>: 512 bytes 1512 bytesDisk identifier: OxOOOOOebdDevice Boot Start End Blocks Id System/dev/sdb1 1 65 522081 83 Linux<span class="token comment" spellcheck="true">#刚分配的分区ID是83，是Linux分区，我们在这里要分配swap分区</span>Command <span class="token punctuation">(</span>m <span class="token keyword">for</span> help<span class="token punctuation">)</span>: t<span class="token comment" spellcheck="true">#修改分区的系统ID</span>Selected partition 1<span class="token comment" spellcheck="true">#只有一个分区，所以不用选择分区了</span>Hex code <span class="token punctuation">(</span>type L to list codes<span class="token punctuation">)</span>: 82<span class="token comment" spellcheck="true">#改为swap分区的ID</span>Changed system <span class="token function">type</span> of partition 1 to 82 <span class="token punctuation">(</span>Linux swap / Solaris<span class="token punctuation">)</span>Command <span class="token punctuation">(</span>m <span class="token keyword">for</span> help<span class="token punctuation">)</span>: p<span class="token comment" spellcheck="true">#再查看一下</span>Disk /dev/sdb: 21.5 GB, 21474836480 bytes255 heads, 63 sectors/track, 2610 cylindersUnits <span class="token operator">=</span> cylinders of 16065 *512 <span class="token operator">=</span> 8225280 bytes Sector size <span class="token punctuation">(</span>logical/physical<span class="token punctuation">)</span>: 512 bytes / 512 bytes I/O size <span class="token punctuation">(</span>minimum/optimal<span class="token punctuation">)</span>: 512 bytes 1512 bytes Disk identifier: OxOOOOOebdDevice Boot Start End Blocks Id System/dev/sdb1 1 65 522081 82 Linux swap / Solaris<span class="token comment" spellcheck="true">#修改过来了</span>Command <span class="token punctuation">(</span>m <span class="token keyword">for</span> help<span class="token punctuation">)</span>: w<span class="token comment" spellcheck="true">#记得保存退出</span>The partition table has been altered<span class="token operator">!</span>Calling ioctl<span class="token punctuation">(</span><span class="token punctuation">)</span> to re-read partition table.Syncing disks.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>仍以 /dev/sdb 分区作为实验对象。不过，如果分区刚刚使用 parted 命令转变为 GPT 分区表，则记得转换回 MBR 分区表，fdisk 命令才能识别，否则干脆新添加一块硬盘做实验。</p><h2 id="格式化"><a href="#格式化" class="headerlink" title="格式化"></a>格式化</h2><p>因为要格式化成 swap 分区，所以格式化命令是 mkswap。命令如下：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mkswap /dev/sdb1</span>Setting up swapspace version 1, size <span class="token operator">=</span> 522076 KiBno label, UUID<span class="token operator">=</span>c3351 dc3-f403-419a-9666-c24615e170fb<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="使用swap分区"><a href="#使用swap分区" class="headerlink" title="使用swap分区"></a>使用swap分区</h2><p>在使用 swap 分区之前，我们先来说说 free 命令。命令如下：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#free</span>total used <span class="token function">free</span> shared buffers cachedMem: 1030796 130792 900004 0 15292 55420-/+ buffers/cache: 60080 970716Swap: 2047992 0 2047992<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>free 命令主要是用来查看内存和 swap 分区的使用情况的，其中：</p><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>total</td><td>是指总数</td></tr><tr><td>used</td><td>是指已经使用的</td></tr><tr><td>free</td><td>是指空闲的</td></tr><tr><td>shared</td><td>是指共享的</td></tr><tr><td>buffers</td><td>是指缓冲内存数</td></tr><tr><td>cached</td><td>是指缓存内存数，单位是KB</td></tr></tbody></table><p>我们需要解释一下 buffers（缓冲）和 cached（缓存）的区别。简单来讲，cached 是给读取数据时加速的，buffers 是给写入数据加速的。cached 是指把读取出来的数据保存在内存中，当再次读取时，不用读取硬盘而直接从内存中读取，加速了数据的读取过程；buffers 是指在写入数据时，先把分散的写入操作保存到内存中，当达到一定程度后再集中写入硬盘，减少了磁盘碎片和硬盘的反复寻道，加速了数据的写入过程。</p><p>我们已经看到，在加载进新的 swap 分区之前，swap 分区的大小是 2000MB，接下来只要加入 swap 分区就可以了，使用命令 swapon。命令格式如下：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># swapon 分区设备文件名</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>例如：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># swapon /dev/sdb1</span>swap分区已加入，我们查看一下。<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#free</span>total used <span class="token function">free</span> shared buffers cachedMem: 1030796 131264 899532 0 15520 55500-/+ buffers/cache: 60244 970552 Swap: 2570064 0 2570064swap 分区的大小变成了 2500MB，加载成功了。如果要取消新加入的 swap 分区，则也很简单，命令如下：<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># swapoff /dev/sdb1</span>如果想让 swap 分区开机之后自动挂载，就需要修改 /etc/fstab 文件，命令如下：<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#vi /etc/fstab</span>UUID<span class="token operator">=</span>c2ca6f57-b15c-43ea-bca0-f239083d8bd2 / ext4 defaults 1 1UUID<span class="token operator">=</span>0b23d315-33a7-48a4-bd37-9248e5c443451 boot ext4 defaults 1 2UUID<span class="token operator">=</span>4021be19-2751-4dd2-98cc-383368c39edb swap swap defaults 0 0tmpfs /dev/shmtmpfs defaults 0 0devpts /dev/ptsdevpts gid<span class="token operator">=</span>5, mode<span class="token operator">=</span>620 0 0sysfs /syssysfs defaults 0 0proc /procproc defaults 0 0/dev/sdb1 swap swapdefaults 0 0<span class="token comment" spellcheck="true">#加入新swap分区的相关内容，这里直接使用分区的设备文件名，也可以使用UUID。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://www.jifu.io/images/2/20191116165053.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;我们在安装系统的时候已经建立了 swap 分区。swap 分区通常被称为交换分区，这是一块特殊的硬盘空间，即当实际内存不够用的时候，操作系统会从内存中取出一部分暂时不用的数据，放在交换分区中，从而为当前运行的程序腾出足够的内存空间。&lt;/p&gt;
&lt;p&gt;也就是说，当内存不够用时，我们使用 swap 分区来临时顶替。这种“拆东墙，补西墙”的方式应用于几乎所有的操作系统中。&lt;/p&gt;
&lt;p&gt;使用 swap 交换分区，显著的优点是，通过操作系统的调度，应用程序实际可以使用的内存空间将远远超过系统的物理内存。由于硬盘空间的价格远比 RAM 要低，因此这种方式无疑是经济实惠的。当然，频繁地读写硬盘，会显著降低操作系统的运行速率，这也是使用 swap 交换分区最大的限制。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;相比较而言，Windows 不会为 swap 单独划分一个分区，而是使用分页文件实现相同的功能，在概念上，Windows 称其为虚拟内存，从某种意义上将，这个叫法更容易理解。因此，初学者将 swap 交换分区理解为虚拟内存是没有任何问题的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;具体使用多大的 swap 分区，取决于物理内存大小和硬盘的容量。一般来讲，swap 分区容量应大于物理内存大小，建议是内存的两倍，但不超过 2GB。但是，有时服务器的访问量确实很大，有可能出现 swap 分区不够用的情况，所以我们需要学习 swap 分区的构建方法。&lt;/p&gt;
&lt;p&gt;建立新的 swap 分区，只需要执行以下几个步骤。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;分区：不管是 fdisk 命令还是 parted 命令，都需要先区。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;格式化：格式化命令稍有不同，使用 mkswap 命令把分区格式化成 swap 分区。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用 swap 分区。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="OPS" scheme="http://www.jifu.io/categories/OPS/"/>
    
      <category term="Linux" scheme="http://www.jifu.io/categories/OPS/Linux/"/>
    
      <category term="System Service" scheme="http://www.jifu.io/categories/OPS/Linux/System-Service/"/>
    
    
      <category term="swap" scheme="http://www.jifu.io/tags/swap/"/>
    
  </entry>
  
  <entry>
    <title>VScdoe error:Could not create temporary directory Permission denied</title>
    <link href="http://www.jifu.io/posts/151598530/"/>
    <id>http://www.jifu.io/posts/151598530/</id>
    <published>2019-10-28T08:42:49.000Z</published>
    <updated>2020-08-11T05:17:21.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://www.jifu.io/images/2/20191028214328.png" alt=""></p><h1 id="Could-not-create-temporary-directory-Permission-denied"><a href="#Could-not-create-temporary-directory-Permission-denied" class="headerlink" title="Could not create temporary directory: Permission denied"></a>Could not create temporary directory: Permission denied</h1><p>This error looks familiar?</p><h1 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h1><p>If you happen to not being able to update VScode anymore after upgrading to macOS is may be due to some permission issues.</p><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><h2 id="If-you-are-using-normal-VScode"><a href="#If-you-are-using-normal-VScode" class="headerlink" title="If you are using normal VScode"></a>If you are using normal VScode</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">chown</span> <span class="token variable">$USER</span> ~/Library/Caches/com.microsoft.VSCode.ShipIt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="If-you-are-using-insiders-version"><a href="#If-you-are-using-insiders-version" class="headerlink" title="If you are using insiders version"></a>If you are using insiders version</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">chown</span> <span class="token variable">$USER</span> ~/Library/Caches/com.microsoft.VSCodeInsiders.ShipIt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>These commands will change the permissions of vscode folders to the current user.</p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://www.jifu.io/images/2/20191028214328.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;Could-not-create-temporary-directory-Permission-denied&quot;&gt;&lt;a href=&quot;#Could-not-create-temporary-directory-Permission-denied&quot; class=&quot;headerlink&quot; title=&quot;Could not create temporary directory: Permission denied&quot;&gt;&lt;/a&gt;Could not create temporary directory: Permission denied&lt;/h1&gt;&lt;p&gt;This error looks familiar?&lt;/p&gt;
&lt;h1 id=&quot;Problem&quot;&gt;&lt;a href=&quot;#Problem&quot; class=&quot;headerlink&quot; title=&quot;Problem&quot;&gt;&lt;/a&gt;Problem&lt;/h1&gt;&lt;p&gt;If you happen to not being able to update VScode anymore after upgrading to macOS is may be due to some permission issues.&lt;/p&gt;
&lt;h1 id=&quot;Solution&quot;&gt;&lt;a href=&quot;#Solution&quot; class=&quot;headerlink&quot; title=&quot;Solution&quot;&gt;&lt;/a&gt;Solution&lt;/h1&gt;&lt;h2 id=&quot;If-you-are-using-normal-VScode&quot;&gt;&lt;a href=&quot;#If-you-are-using-normal-VScode&quot; class=&quot;headerlink&quot; title=&quot;If you are using normal VScode&quot;&gt;&lt;/a&gt;If you are using normal VScode&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;sudo chown $USER ~/Library/Caches/com.microsoft.VSCode.ShipIt
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;If-you-are-using-insiders-version&quot;&gt;&lt;a href=&quot;#If-you-are-using-insiders-version&quot; class=&quot;headerlink&quot; title=&quot;If you are using insiders version&quot;&gt;&lt;/a&gt;If you are using insiders version&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;sudo chown $USER ~/Library/Caches/com.microsoft.VSCodeInsiders.ShipIt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;These commands will change the permissions of vscode folders to the current user.&lt;/p&gt;
    
    </summary>
    
      <category term="OPS" scheme="http://www.jifu.io/categories/OPS/"/>
    
      <category term="Editor" scheme="http://www.jifu.io/categories/OPS/Editor/"/>
    
    
      <category term="vscode" scheme="http://www.jifu.io/tags/vscode/"/>
    
      <category term="error" scheme="http://www.jifu.io/tags/error/"/>
    
      <category term="Permission denied" scheme="http://www.jifu.io/tags/Permission-denied/"/>
    
  </entry>
  
  <entry>
    <title>Mac 时间机器 Time Machine 备份速度太慢的解决方法 (加速备份命令)</title>
    <link href="http://www.jifu.io/posts/4147446761/"/>
    <id>http://www.jifu.io/posts/4147446761/</id>
    <published>2019-10-28T08:28:37.000Z</published>
    <updated>2020-08-11T05:17:21.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://www.jifu.io/images/2/20191028213414.jpg" alt=""></p><p>相信用过一段时间电脑的人，都知道经常备份的重要性了。特别最近很多人需要将 Mac 升级到最新版本的 macOS Catalina，为防意外发生，就更需要在动手前做好备份了。</p><h1 id="macOS-时光机器"><a href="#macOS-时光机器" class="headerlink" title="macOS 时光机器"></a>macOS 时光机器</h1><p>macOS 自带的<strong>「时间机器」(Time Machine)</strong>绝对就是 Mac 上最方便的备份工具了，一来完全免费，可以“无感”地替你默默在后台备份，而且因为它是苹果自家开发的，兼容性也最好，所以推荐大家都使用“时间机器”来备份 Mac 电脑。</p><h1 id="解决时间机器备份速度太慢的问题"><a href="#解决时间机器备份速度太慢的问题" class="headerlink" title="解决时间机器备份速度太慢的问题"></a>解决时间机器备份速度太慢的问题</h1><p>然而部分同学在尝试使用时间机器备份系统资料时，却发现它的首次备份速度非常慢，跟自己的网络和机器配置似乎并不匹配，甚至有时花费超过 48 小时都无法完成，即便接了网线、关掉所有 APP 后，备份速度都没有明显提升。</p><p>其实，<strong>时光机器备份太慢</strong>是由于 macOS 本身对其进行了限流的措施，对硬盘读写的频率和内存使用都做了一定的限制，主要是为了防止在备份期间影响了用户正常使用电脑工作。但如果你正在等它完成备份，再去进行系统升级或其他操作，就比较悲剧了。</p><h1 id="macOS-时光机器备份加速命令"><a href="#macOS-时光机器备份加速命令" class="headerlink" title="macOS 时光机器备份加速命令"></a>macOS 时光机器备份加速命令</h1><p>如果你真的打算让时光机器全力全速工作，那也是有办法的，就是通过命令行，用命令强制关闭系统对时光机器的限流，俗称“解除封印”。打开终端，输入以下命令：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> sysctl debug.lowpri_throttle_enabled<span class="token operator">=</span>0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><a id="more"></a><p>这时你就会发现时光机器的备份速度变快很多很多了！！基本能达到网络和硬盘读写的应有的速度了。等它完成了首次的备份之后，你可以再执行下面的命令，恢复到原本限流的状态，以保证日后使用电脑时不被时光机器备份占去太多的资源导致变卡。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> sysctl debug.lowpri_throttle_enabled<span class="token operator">=</span>1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>当然了，如果你的时光机器备份是保存在 NAS 或路由器上网络存储的，都推荐连接“网线”进行首次备份，比起 WiFi 的速度很稳定性都是要高很多。另外，如果你使用 MacBook 的话，记得还要接通电源再备份才能获得最好的速度哦.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://www.jifu.io/images/2/20191028213414.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;相信用过一段时间电脑的人，都知道经常备份的重要性了。特别最近很多人需要将 Mac 升级到最新版本的 macOS Catalina，为防意外发生，就更需要在动手前做好备份了。&lt;/p&gt;
&lt;h1 id=&quot;macOS-时光机器&quot;&gt;&lt;a href=&quot;#macOS-时光机器&quot; class=&quot;headerlink&quot; title=&quot;macOS 时光机器&quot;&gt;&lt;/a&gt;macOS 时光机器&lt;/h1&gt;&lt;p&gt;macOS 自带的&lt;strong&gt;「时间机器」(Time Machine)&lt;/strong&gt;绝对就是 Mac 上最方便的备份工具了，一来完全免费，可以“无感”地替你默默在后台备份，而且因为它是苹果自家开发的，兼容性也最好，所以推荐大家都使用“时间机器”来备份 Mac 电脑。&lt;/p&gt;
&lt;h1 id=&quot;解决时间机器备份速度太慢的问题&quot;&gt;&lt;a href=&quot;#解决时间机器备份速度太慢的问题&quot; class=&quot;headerlink&quot; title=&quot;解决时间机器备份速度太慢的问题&quot;&gt;&lt;/a&gt;解决时间机器备份速度太慢的问题&lt;/h1&gt;&lt;p&gt;然而部分同学在尝试使用时间机器备份系统资料时，却发现它的首次备份速度非常慢，跟自己的网络和机器配置似乎并不匹配，甚至有时花费超过 48 小时都无法完成，即便接了网线、关掉所有 APP 后，备份速度都没有明显提升。&lt;/p&gt;
&lt;p&gt;其实，&lt;strong&gt;时光机器备份太慢&lt;/strong&gt;是由于 macOS 本身对其进行了限流的措施，对硬盘读写的频率和内存使用都做了一定的限制，主要是为了防止在备份期间影响了用户正常使用电脑工作。但如果你正在等它完成备份，再去进行系统升级或其他操作，就比较悲剧了。&lt;/p&gt;
&lt;h1 id=&quot;macOS-时光机器备份加速命令&quot;&gt;&lt;a href=&quot;#macOS-时光机器备份加速命令&quot; class=&quot;headerlink&quot; title=&quot;macOS 时光机器备份加速命令&quot;&gt;&lt;/a&gt;macOS 时光机器备份加速命令&lt;/h1&gt;&lt;p&gt;如果你真的打算让时光机器全力全速工作，那也是有办法的，就是通过命令行，用命令强制关闭系统对时光机器的限流，俗称“解除封印”。打开终端，输入以下命令：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;sudo sysctl debug.lowpri_throttle_enabled=0
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="OPS" scheme="http://www.jifu.io/categories/OPS/"/>
    
      <category term="MacOS" scheme="http://www.jifu.io/categories/OPS/MacOS/"/>
    
    
      <category term="Mac" scheme="http://www.jifu.io/tags/Mac/"/>
    
      <category term="Time Machine" scheme="http://www.jifu.io/tags/Time-Machine/"/>
    
      <category term="加快备份" scheme="http://www.jifu.io/tags/%E5%8A%A0%E5%BF%AB%E5%A4%87%E4%BB%BD/"/>
    
  </entry>
  
  <entry>
    <title>提高效率！24 个高手常用的 Sketch 技巧合集（附实用快捷键）</title>
    <link href="http://www.jifu.io/posts/1525329016/"/>
    <id>http://www.jifu.io/posts/1525329016/</id>
    <published>2019-09-27T02:49:41.000Z</published>
    <updated>2020-08-11T05:17:21.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://www.jifu.io/images/2/20191028212453.png" alt=""></p><p>Sketch 是一款轻量、易用的矢量设计工具，它为数字设计而生，小巧但功能强大，今天我总结并整理了一些 Sketch 不为人知的快捷操作，希望你可以在实际工作中得以应用。</p><h1 id="形状的描边和填充"><a href="#形状的描边和填充" class="headerlink" title="形状的描边和填充"></a>形状的描边和填充</h1><p><img src="https://www.jifu.io/images/2/20190927145127.jpg" alt=""></p><p>形状的描边快捷键是 B，填充的快捷键是 F，其实就是 Borders 和 Fills 首字母。绘制形状在默认时是带填充和描边的，按一下 B 取消描边，再按一下添加描边，填充也是同理。</p><h1 id="直接吸取颜色"><a href="#直接吸取颜色" class="headerlink" title="直接吸取颜色"></a>直接吸取颜色</h1><p><img src="https://www.jifu.io/images/2/20190927151211.jpg" alt=""></p><p>直接吸色快捷键 Control+C，Sketch 吸管工具可以吸取屏幕上任何地方的色彩。</p><h1 id="拷贝样式"><a href="#拷贝样式" class="headerlink" title="拷贝样式"></a>拷贝样式</h1><p><img src="https://www.jifu.io/images/2/20190927145127.jpg" alt=""></p><p>Command + Alt + C 拷贝样式，Command + Alt + V 粘贴样式。当我们设计中使用相同的样式可以调整一处，其他可以用这个快捷键来操作。样式可以包含填充、描边、颜色、阴影、字体样式等。</p><h1 id="数值框直接进行数学运算"><a href="#数值框直接进行数学运算" class="headerlink" title="数值框直接进行数学运算"></a>数值框直接进行数学运算</h1><p><img src="https://www.jifu.io/images/2/20190927152328.jpg" alt=""></p><p>Sketch 支持直接在输入框内进行加减乘除的数学运算。长宽、坐标和圆角的数值是可以计算的，透明度和色值等是不可以进行计算的。</p><a id="more"></a><h1 id="按住Shift-方向键可以每次移动10个像素"><a href="#按住Shift-方向键可以每次移动10个像素" class="headerlink" title="按住Shift+方向键可以每次移动10个像素"></a>按住Shift+方向键可以每次移动10个像素</h1><p><img src="https://www.jifu.io/images/2/20190927152401.jpg" alt=""></p><p>这个操作在 Photoshop 里面也有，可以增加移动步长，如果你想自定义移动的像素，可以使用 Nudged 插件来定义方向键（Arrow keys）的移动像素个数，也可以定义 Shift + 方向键（Arrow keys）的移动像素个数。</p><p><img src="https://www.jifu.io/images/2/20190927145317.jpg" alt=""></p><h1 id="对齐的特别用法（锁定对齐）"><a href="#对齐的特别用法（锁定对齐）" class="headerlink" title="对齐的特别用法（锁定对齐）"></a>对齐的特别用法（锁定对齐）</h1><p><img src="https://www.jifu.io/images/2/20190927145650.jpg" alt=""></p><p>Sketch 中的对齐有上下左右居中五种对齐方式，单个对象对齐默认是以每个画板为参照物进行上下左右居中对齐，两个对象对齐时大的包含小的会依据大的为参照物进行对齐，当两个对象没有任何关系时可以锁定（Command + Shift + L）一个对象并以它为参照物进行对齐。</p><h1 id="重新定义对象大小"><a href="#重新定义对象大小" class="headerlink" title="重新定义对象大小"></a>重新定义对象大小</h1><p><img src="https://www.jifu.io/images/2/20190927145851.jpg" alt=""></p><p>选中一个对象，按住 Command + 方向键 来改变对象大小。按住 Command + Shift + 方向键，可以每次以加减 10 个像素改变对象大小。选中一个对象，按住 Alt 缩放时，矩形两侧会同时进行缩放。</p><h1 id="快速复制元素"><a href="#快速复制元素" class="headerlink" title="快速复制元素"></a>快速复制元素</h1><p><img src="https://www.jifu.io/images/2/20190927145822.jpg" alt=""></p><p>按住 Alt 键拖拽复制一个相同元素，你可以继续按住 Command + D 复制更多的相同元素。</p><h1 id="组合对象"><a href="#组合对象" class="headerlink" title="组合对象"></a>组合对象</h1><p><img src="https://www.jifu.io/images/2/20190927145749.jpg" alt=""></p><p>选中要组合的多个元素，Command + G 编组。Command + Shift + G 取消编组。</p><h1 id="直接选取和框选"><a href="#直接选取和框选" class="headerlink" title="直接选取和框选"></a>直接选取和框选</h1><p><img src="https://www.jifu.io/images/2/20190927145915.jpg" alt=""></p><p>按住 Command 直接点选需要的对象，按住 Command + Shift 可以多选也可以直接框选。两个图层叠加在一起的时候（底下图层被覆盖），想要选择底下图层？按住 Alt 键，Sketch 会忽略上层而选择下层。</p><h1 id="显示实际100-大小视图"><a href="#显示实际100-大小视图" class="headerlink" title="显示实际100%大小视图"></a>显示实际100%大小视图</h1><p><img src="https://www.jifu.io/images/2/20190927150014.jpg" alt=""></p><p>查看实际大小 100% 视图，快捷键 Command + 0 （数值 0）。</p><h1 id="显示所有画板"><a href="#显示所有画板" class="headerlink" title="显示所有画板"></a>显示所有画板</h1><p><img src="https://www.jifu.io/images/2/20190927150037.jpg" alt=""></p><p>查看所有画板视图，快捷键 Command + 1。</p><h1 id="显示选中的对象"><a href="#显示选中的对象" class="headerlink" title="显示选中的对象"></a>显示选中的对象</h1><p><img src="https://www.jifu.io/images/2/20190927152520.jpg" alt=""></p><p>显示所有选中对象视图，快捷键 Command + 2。</p><h1 id="改变图层上下位置"><a href="#改变图层上下位置" class="headerlink" title="改变图层上下位置"></a>改变图层上下位置</h1><p><img src="https://www.jifu.io/images/2/20190927150151.jpg" alt=""></p><p>选中一个对象，按住 Alt + Command + 方向键，移动对象上下图层的位置，按住 Control + Alt + Command + 方向键，移动到画板的最上层或最下层。</p><h1 id="重命名图层"><a href="#重命名图层" class="headerlink" title="重命名图层"></a>重命名图层</h1><p><img src="https://www.jifu.io/images/2/20190927150224.jpg" alt=""></p><p>选中图层 Command + R 重命名图层。</p><h1 id="隐藏图层和锁定图层"><a href="#隐藏图层和锁定图层" class="headerlink" title="隐藏图层和锁定图层"></a>隐藏图层和锁定图层</h1><p><img src="https://www.jifu.io/images/2/20190927150304.jpg" alt=""></p><p>选中图层 Command + Shift + H 隐藏图层，Command + Shift + L 锁定图层。当界面中元素较多时需要修改，我们就可以锁定背景图层，进行框选需要修改的对象。</p><h1 id="智能提示"><a href="#智能提示" class="headerlink" title="智能提示"></a>智能提示</h1><p><img src="https://www.jifu.io/images/2/20190927150322.jpg" alt=""></p><p>选中一个对象，按住 Alt 键，通过鼠标可以测量与其他对象的像素距离，按下 Alt 键的时候还可以移动对象进行测量和排列；按住 Alt + Command 键可以测量组与组或者跨面板的组与组里面的对象的像素距离。</p><h1 id="数字键快速设置透明度"><a href="#数字键快速设置透明度" class="headerlink" title="数字键快速设置透明度"></a>数字键快速设置透明度</h1><p><img src="https://www.jifu.io/images/2/20190927150355.jpg" alt=""></p><p>1 到 10 不同的数字键分别代表不同透明度比例（1=10% 的透明度，以此类推）。</p><h1 id="圆角半径"><a href="#圆角半径" class="headerlink" title="圆角半径"></a>圆角半径</h1><p><img src="https://www.jifu.io/images/2/20190927152606.jpg" alt=""></p><p>选中对象，点击面板中的圆角 Radius 设置可以通过一组数值（如16、16、0、0 ）依次对应对象上左、上右、下左、下右的每个角的半径值。</p><h1 id="切片工具"><a href="#切片工具" class="headerlink" title="切片工具"></a>切片工具</h1><p><img src="https://www.jifu.io/images/2/20190927152649.jpg" alt=""></p><p>切片工具（快捷键 S）可以导出选区内的内容。选区范围是方形的。在切图标的时候我们可以不用按照实际尺寸进行导出，可以适当增加热区，包含进去进行导出。</p><h1 id="设置线段的中点"><a href="#设置线段的中点" class="headerlink" title="设置线段的中点"></a>设置线段的中点</h1><p><img src="https://www.jifu.io/images/2/20190927150555.jpg" alt=""></p><p>双击绘制完成的 Vector 图层，按住 Shift 键，会出现中点提示。</p><h1 id="点击-Vector-时，想让其以45°角度进行变化？"><a href="#点击-Vector-时，想让其以45°角度进行变化？" class="headerlink" title="点击 Vector 时，想让其以45°角度进行变化？"></a>点击 Vector 时，想让其以45°角度进行变化？</h1><p><img src="https://www.jifu.io/images/2/20190927150630.jpg" alt=""></p><p>按 V 键进入到 Vector 模式，按住 Shift 此时箭头提示会以 45° 变化。</p><h1 id="Symbol分类命名方便查找"><a href="#Symbol分类命名方便查找" class="headerlink" title="Symbol分类命名方便查找"></a>Symbol分类命名方便查找</h1><p><img src="https://www.jifu.io/images/2/20190927150733.jpg" alt=""></p><p>使用 / 可以对 Symbol 进行分类，方便查找。</p><h1 id="用矩形画1px，用内阴影画0-5px"><a href="#用矩形画1px，用内阴影画0-5px" class="headerlink" title="用矩形画1px，用内阴影画0.5px"></a>用矩形画1px，用内阴影画0.5px</h1><p><img src="https://www.jifu.io/images/2/20190927152726.jpg" alt=""></p><p>用矩形工具来画一个 1 像素宽的线条，这样就可以既保证视觉上对齐，数据中也是整数。比 Line 直接画直线会有小数点更方便 。用内阴影画 0.5 px 的线条。</p><h1 id="如何设置Sketch快捷键"><a href="#如何设置Sketch快捷键" class="headerlink" title="如何设置Sketch快捷键"></a>如何设置Sketch快捷键</h1><p><img src="https://www.jifu.io/images/2/20190927151038.jpg" alt=""></p><p>你可以为你经常用的一些功能自定义快捷键。打开 Mac 系统设置 – 键盘 – 快捷键，然后点击 「应用快捷键 」。从下拉菜单里选中 Sketch ，自定义你需要的快捷键。你也可以用同样的方法给你的 Mac 其他应用自定义快捷键。</p><h1 id="快捷键设置"><a href="#快捷键设置" class="headerlink" title="快捷键设置"></a>快捷键设置</h1><p><img src="https://www.jifu.io/images/2/20190927151016.jpg" alt=""></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>在工作中还是需要重视效率，在做任何事之前我们是否有用心的去思考下当前的工作有没有更方便快捷的办法，可能前期会花去很多研究的时间，或者花很多时间研究的方法也不一定管用，但是这是更好提高我们效率的必经之路，发现好的方法分享给团队的成员会更有助于大家的协作。</p><p>当然本文总结的只是很小的一部分，在做产品设计的道路上，我们还需要系统思维、前端思维、批判性思维等帮助我们更好地解决问题。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://www.jifu.io/images/2/20191028212453.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Sketch 是一款轻量、易用的矢量设计工具，它为数字设计而生，小巧但功能强大，今天我总结并整理了一些 Sketch 不为人知的快捷操作，希望你可以在实际工作中得以应用。&lt;/p&gt;
&lt;h1 id=&quot;形状的描边和填充&quot;&gt;&lt;a href=&quot;#形状的描边和填充&quot; class=&quot;headerlink&quot; title=&quot;形状的描边和填充&quot;&gt;&lt;/a&gt;形状的描边和填充&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://www.jifu.io/images/2/20190927145127.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;形状的描边快捷键是 B，填充的快捷键是 F，其实就是 Borders 和 Fills 首字母。绘制形状在默认时是带填充和描边的，按一下 B 取消描边，再按一下添加描边，填充也是同理。&lt;/p&gt;
&lt;h1 id=&quot;直接吸取颜色&quot;&gt;&lt;a href=&quot;#直接吸取颜色&quot; class=&quot;headerlink&quot; title=&quot;直接吸取颜色&quot;&gt;&lt;/a&gt;直接吸取颜色&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://www.jifu.io/images/2/20190927151211.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;直接吸色快捷键 Control+C，Sketch 吸管工具可以吸取屏幕上任何地方的色彩。&lt;/p&gt;
&lt;h1 id=&quot;拷贝样式&quot;&gt;&lt;a href=&quot;#拷贝样式&quot; class=&quot;headerlink&quot; title=&quot;拷贝样式&quot;&gt;&lt;/a&gt;拷贝样式&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://www.jifu.io/images/2/20190927145127.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Command + Alt + C 拷贝样式，Command + Alt + V 粘贴样式。当我们设计中使用相同的样式可以调整一处，其他可以用这个快捷键来操作。样式可以包含填充、描边、颜色、阴影、字体样式等。&lt;/p&gt;
&lt;h1 id=&quot;数值框直接进行数学运算&quot;&gt;&lt;a href=&quot;#数值框直接进行数学运算&quot; class=&quot;headerlink&quot; title=&quot;数值框直接进行数学运算&quot;&gt;&lt;/a&gt;数值框直接进行数学运算&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://www.jifu.io/images/2/20190927152328.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Sketch 支持直接在输入框内进行加减乘除的数学运算。长宽、坐标和圆角的数值是可以计算的，透明度和色值等是不可以进行计算的。&lt;/p&gt;
    
    </summary>
    
      <category term="UI Design" scheme="http://www.jifu.io/categories/UI-Design/"/>
    
    
      <category term="Cheat Sheets" scheme="http://www.jifu.io/tags/Cheat-Sheets/"/>
    
      <category term="Sketch" scheme="http://www.jifu.io/tags/Sketch/"/>
    
      <category term="技巧" scheme="http://www.jifu.io/tags/%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Homebrew：让你从 Mac 切换到 Linux 更轻松</title>
    <link href="http://www.jifu.io/posts/581320548/"/>
    <id>http://www.jifu.io/posts/581320548/</id>
    <published>2019-09-25T12:03:23.000Z</published>
    <updated>2020-09-26T05:57:58.562Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>不管你是想要更舒服地从 Mac 搬到 Linux，还是不满意常规的 Linux 包管理器，都可以试试 Homebrew。</p></blockquote><p><a href="https://brew.sh/" target="_blank" rel="noopener">Homebrew</a> 项目最初是为了给 Mac 用户提供一个非官方的 Linux 式的包管理器。用户很快就爱上了它友好的界面以及帮助性的提示，而且，它已经被移植到 Linux 系统 —— 这看起来像是一个奇怪的命运转折。</p><p>一开始，有两个分开的项目分别针对 macOS 和 Linux （Homebrew 与 Linuxbrew），但是现在是由 Homebrew 核心管理着这两个操作系统。由于我正 <a href="https://opensource.com/article/19/10/why-switch-mac-linux" target="_blank" rel="noopener">从 Mac 切换到 Linux</a>，所以一直在研究我在 macOS 最常用的开源软件在 Linux 表现如何，最终，我很高兴地发现 Homebrew 对 Linux 的支持太赞了！</p><h1 id="为什么要在-Linux-使用-Homebrew-呢-？"><a href="#为什么要在-Linux-使用-Homebrew-呢-？" class="headerlink" title="为什么要在 Linux 使用 Homebrew 呢 ？"></a>为什么要在 Linux 使用 Homebrew 呢 ？</h1><p>长期使用 Linux 的用户对 Homebrew 的第一反应是：“为什么不直接使用……呢”，省略号代表他们喜欢的某个 Linux 包管理器。基于 Debian 的系统早就有了 <code>apt</code>，基于 Fedora 的系统则有 <code>dnf</code> 和 <code>yum</code>，并且像 Flatpak 跟 AppImage 这样的项目，在两种系统上都能流畅运行。我花了不少时间尝试这些技术，不得不说，它们都有其强大之处。</p><p>那我为什么还要 <a href="https://opensource.com/article/20/6/homebrew-mac" target="_blank" rel="noopener">坚持使用 Homebrew</a> 呢？首先，我对它非常熟悉。在为我过去使用的专有软件寻找开源替代品的过程中，我已经学会了许多使用方法，而保持一些熟悉的东西，比如 Homebrew，可以让我专注于一次学习一件事情，而不是被不同系统间的差异搞垮。</p><p>此外，我没有看到哪一个包管理器像 Homebrew 一样，对用户如此友好。正如默认的帮助命令一样，命令井然有序：</p><pre class="line-numbers language-bash"><code class="language-bash">1.  <span class="token variable"><span class="token variable">`</span>$ brew -h<span class="token variable">`</span></span>2.  <span class="token variable"><span class="token variable">`</span>Example usage:<span class="token variable">`</span></span>3.   <span class="token variable"><span class="token variable">`</span>brew search <span class="token punctuation">[</span>TEXT<span class="token operator">|</span>/REGEX/<span class="token punctuation">]</span><span class="token variable">`</span></span>4.   <span class="token variable"><span class="token variable">`</span>brew info <span class="token punctuation">[</span>FORMULA<span class="token punctuation">..</span>.<span class="token punctuation">]</span><span class="token variable">`</span></span>5.   <span class="token variable"><span class="token variable">`</span>brew <span class="token function">install</span> FORMULA<span class="token punctuation">..</span>.<span class="token variable">`</span></span>6.   <span class="token variable"><span class="token variable">`</span>brew update<span class="token variable">`</span></span>7.   <span class="token variable"><span class="token variable">`</span>brew upgrade <span class="token punctuation">[</span>FORMULA<span class="token punctuation">..</span>.<span class="token punctuation">]</span><span class="token variable">`</span></span>8.   <span class="token variable"><span class="token variable">`</span>brew uninstall FORMULA<span class="token punctuation">..</span>.<span class="token variable">`</span></span>9.   <span class="token variable"><span class="token variable">`</span>brew list <span class="token punctuation">[</span>FORMULA<span class="token punctuation">..</span>.<span class="token punctuation">]</span><span class="token variable">`</span></span>11.  <span class="token variable"><span class="token variable">`</span>Troubleshooting:<span class="token variable">`</span></span>12.   <span class="token variable"><span class="token variable">`</span>brew config<span class="token variable">`</span></span>13.   <span class="token variable"><span class="token variable">`</span>brew doctor<span class="token variable">`</span></span>14.   <span class="token variable"><span class="token variable">`</span>brew <span class="token function">install</span> --verbose --debug FORMULA<span class="token variable">`</span></span>16.  <span class="token variable"><span class="token variable">`</span>Contributing:<span class="token variable">`</span></span>17.   <span class="token variable"><span class="token variable">`</span>brew create <span class="token punctuation">[</span>URL <span class="token punctuation">[</span>--no-fetch<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token variable">`</span></span>18.   <span class="token variable"><span class="token variable">`</span>brew edit <span class="token punctuation">[</span>FORMULA<span class="token punctuation">..</span>.<span class="token punctuation">]</span><span class="token variable">`</span></span>20.  <span class="token variable"><span class="token variable">`</span>Further help:<span class="token variable">`</span></span>21.   <span class="token variable"><span class="token variable">`</span>brew commands<span class="token variable">`</span></span>22.   <span class="token variable"><span class="token variable">`</span>brew <span class="token function">help</span> <span class="token punctuation">[</span>COMMAND<span class="token punctuation">]</span><span class="token variable">`</span></span>23.   <span class="token variable"><span class="token variable">`</span><span class="token function">man</span> brew<span class="token variable">`</span></span>24.   <span class="token variable"><span class="token variable">`</span><span class="token operator">&lt;</span>https://docs.brew.sh<span class="token operator">></span><span class="token variable">`</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>过于简短的输出可能会被误解为它功能局限，但是你简单看看每一个子命令，都有很丰富的功能。虽然上面的列表只有短短 23 行，但对高级用户来说，光是子命令 <code>install</code> 就包含整整 79 行的帮助信息：</p><pre class="line-numbers language-bash"><code class="language-bash">1.  <span class="token variable"><span class="token variable">`</span>$ brew --help <span class="token operator">|</span> <span class="token function">wc</span> -l<span class="token variable">`</span></span>2.  <span class="token variable"><span class="token variable">`</span>23<span class="token variable">`</span></span>3.  <span class="token variable"><span class="token variable">`</span>$ brew <span class="token function">install</span> --help <span class="token operator">|</span> <span class="token function">wc</span> -l<span class="token variable">`</span></span>4.  <span class="token variable"><span class="token variable">`</span>79<span class="token variable">`</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>它可以选择忽略或者安装依赖关系，也可以选择用源代码编译以及用什么编译器来编译某个确切的上游 Git 提交，或者选择应用的官方 “灌装” 版。总而言之，Homebrew 即适合新手，也同样能满足老鸟。</p><h1 id="开始在-Linux-使用-Homebrew"><a href="#开始在-Linux-使用-Homebrew" class="headerlink" title="开始在 Linux 使用 Homebrew"></a>开始在 Linux 使用 Homebrew</h1><p>如果你想要试着使用 Homebrew，可以用这个单行脚本在 Mac 或者 Linux 上进行安装：</p><pre class="line-numbers language-bash"><code class="language-bash">1.  `$ /bin/bash -c <span class="token string">"<span class="token variable"><span class="token variable">$(</span>curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh<span class="token variable">)</span></span>"</span>`<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这条命令会立即开始安装 Homebrew。如果你比较谨慎，可以使用 <code>curl</code> 将该文件下载到本地，检查完毕之后再运行。</p><pre class="line-numbers language-bash"><code class="language-bash">1.  <span class="token variable"><span class="token variable">`</span>$ curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh --output homebrew_installer.sh<span class="token variable">`</span></span>2.  `$ <span class="token function">more</span> homebrew_installer.sh <span class="token comment" spellcheck="true"># 审核该脚本，直到你觉得没问题了`</span>3.  <span class="token variable"><span class="token variable">`</span>$ <span class="token function">bash</span> homebrew_installer.sh<span class="token variable">`</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>对 Linux 的安装步骤还包括如何配置点文件，对于 Debian 系统来说是 <code>~/.profile</code>，对于 Fedora 系统是 <code>~/.bash_profile</code>。</p><pre class="line-numbers language-bash"><code class="language-bash">1.  <span class="token variable"><span class="token variable">`</span>$ <span class="token function">test</span> -d /home/linuxbrew/.linuxbrew <span class="token operator">&amp;&amp;</span> <span class="token function">eval</span> <span class="token punctuation">$(</span>/home/linuxbrew/.linuxbrew/bin/brew shellenv<span class="token punctuation">)</span><span class="token variable">`</span></span>2.  `$ <span class="token function">test</span> -r ~/.bash_profile <span class="token operator">&amp;&amp;</span> <span class="token keyword">echo</span> <span class="token string">"eval \<span class="token variable"><span class="token variable">$(</span><span class="token variable">$(</span>brew --prefix<span class="token variable">)</span></span>/bin/brew shellenv)"</span> <span class="token operator">>></span>~/.bash_profile<span class="token variable"><span class="token variable">`</span>3.  <span class="token variable">`</span></span>$ <span class="token keyword">echo</span> <span class="token string">"eval \<span class="token variable"><span class="token variable">$(</span><span class="token variable">$(</span>brew --prefix<span class="token variable">)</span></span>/bin/brew shellenv)"</span> <span class="token operator">>></span>~/.profile`<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>为了确认已经安装好，Homebrew 团队提供一个空的 <code>hello</code> “秘方” 供测试：</p><pre class="line-numbers language-bash"><code class="language-bash">1.  <span class="token variable"><span class="token variable">`</span>$ brew <span class="token function">install</span> hello<span class="token variable">`</span></span>2.  <span class="token variable"><span class="token variable">`</span><span class="token operator">==</span><span class="token operator">></span> Downloading https://linuxbrew.bintray.com/bottles/hello-2.10.x86_64_linux.bottle.tar.gz<span class="token variable">`</span></span>3.  `<span class="token comment" spellcheck="true">######################################################################## 100.0%`</span>4.  <span class="token variable"><span class="token variable">`</span><span class="token operator">==</span><span class="token operator">></span> Pouring hello-2.10.x86_64_linux.bottle.tar.gz<span class="token variable">`</span></span>5.  <span class="token variable"><span class="token variable">`</span>🍺  /home/linuxbrew/.linuxbrew/Cellar/hello/2.10: 52 files, 595.6KB<span class="token variable">`</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>看起来安装毫无问题，让我来试试更多操作。</p><h1 id="命令行工具-Brew"><a href="#命令行工具-Brew" class="headerlink" title="命令行工具 Brew"></a>命令行工具 Brew</h1><p>Homebrew 宣称自己是一款默认只 “安装你需要而 [Linux] 没有的东西”的应用程序。</p><p>你可以用 <code>brew</code> 命令安装任何打包在 Homebrew 中的命令行软件。这些包的定义文件叫做 “秘方formula”，而且它们通过“瓶子bottle”来编译并分享。在 Homebrew 的世界里，还有许多 “啤酒方面” 的术语，但这个包管理器主要目的是让软件便于使用。</p><p>都有些什么样的软件呢？对我这样的技术玩家（既然你已经在读这篇文章，估计你也是）来说最方便的东西。例如，便利的 <code>tree</code> 命令，可以展示目录结构，或者 <code>pyenv</code>，我用它来 <a href="https://opensource.com/article/20/4/pyenv" target="_blank" rel="noopener">在 Mac 管理不同版本 Python</a>。</p><p>你可以用 <code>search</code> 命令查看所有可以安装的“秘方”，在后面加上 <code>wc</code> 命令看看一共有多少：</p><pre class="line-numbers language-bash"><code class="language-bash">1.  `<span class="token comment" spellcheck="true"># -l 选项统计行数`</span>2.  <span class="token variable"><span class="token variable">`</span>$ brew search <span class="token operator">|</span> <span class="token function">wc</span> -l<span class="token variable">`</span></span>3.   <span class="token variable"><span class="token variable">`</span>5087<span class="token variable">`</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>迄今为止，一共有 5000 多个 “秘方”，这囊括了很多软件。需要注意的是：并非所有 “秘方” 都能在 Linux 运行。在 <code>brew search --help</code> 输出中有一节提到可以按软件运行的操作系统来筛选软件。它会在浏览器打开用于每个操作系统的软件仓库。我运行的是 Fedora，所以我会用它来试一试：</p><pre class="line-numbers language-bash"><code class="language-bash">1.  <span class="token variable"><span class="token variable">`</span>$ brew search --fedora tree<span class="token variable">`</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>浏览器打开了网址 <code>https://apps.fedoraproject.org/packages/s/tree</code>，向我展示了所有 Fedora 的可用选项。你也可以通过其它方法进行浏览。“秘方” 被集中整理到由操作系统划分的核心仓库当中（Mac 在 <a href="https://github.com/Homebrew/homebrew-core" target="_blank" rel="noopener">Homebrew Core</a>，Linux 在 <a href="https://github.com/Homebrew/linuxbrew-core" target="_blank" rel="noopener">Linux Core</a>）。同样也可以通过 Homebrew API <a href="https://formulae.brew.sh/formula/" target="_blank" rel="noopener">在网页显示</a>。</p><p>即使有这些选择，我还是通过其它用户的推荐找到很多新工具。我列出一些我最喜欢的工具，你可以在里面找点灵感：</p><ul><li><code>pyenv</code>、<code>rbenv</code> 和 <code>nodenv</code> 用来管理（相应的） Python、Ruby 和 Node.js 版本</li><li><code>imagemagick</code> 用于脚本化编辑图片</li><li><code>pandoc</code> 用于脚本化转换文档格式（我通常将 .docx 文件转成 .md 或者 .html）</li><li><code>hub</code> 为 GitHub 用户提供 <a href="https://opensource.com/article/20/3/github-hub" target="_blank" rel="noopener">更好的 Git 体验</a></li><li><code>tldr</code> 展示了命令工具的使用范例</li></ul><p>想要深入了解 Homebrew，可以去 <a href="https://github.com/tldr-pages/tldr" target="_blank" rel="noopener">trldr 页面</a> 看看，比起应用的 man 页面，它要友好得多。使用 <code>search</code> 命令确认你可以安装：</p><pre class="line-numbers language-bash"><code class="language-bash">1.  <span class="token variable"><span class="token variable">`</span>$ brew search tldr<span class="token variable">`</span></span>2.  <span class="token variable"><span class="token variable">`</span><span class="token operator">==</span><span class="token operator">></span> Formulae<span class="token variable">`</span></span>3.  <span class="token variable"><span class="token variable">`</span>tldr ✔<span class="token variable">`</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>太好了！对勾说明你可以安装。那么继续吧：</p><pre class="line-numbers language-bash"><code class="language-bash">1.  <span class="token variable"><span class="token variable">`</span>$ brew <span class="token function">install</span> tldr<span class="token variable">`</span></span>2.  <span class="token variable"><span class="token variable">`</span><span class="token operator">==</span><span class="token operator">></span> Downloading https://linuxbrew.bintray.com/bottles/tldr-1.3.0_2.x86_64_linux.bottle.1.tar.gz<span class="token variable">`</span></span>3.  `<span class="token comment" spellcheck="true">######################################################################## 100.0%`</span>4.  <span class="token variable"><span class="token variable">`</span><span class="token operator">==</span><span class="token operator">></span> Pouring tldr-1.3.0_2.x86_64_linux.bottle.1.tar.gz<span class="token variable">`</span></span>5.  <span class="token variable"><span class="token variable">`</span>🍺  /home/linuxbrew/.linuxbrew/Cellar/tldr/1.3.0_2: 6 files, 63.2KB<span class="token variable">`</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Homebrew 提供了编译好的二进制文件，所以你不必在本地机器上从源码编译。这能节省很多时间，也不用听 CPU 风扇的噪声。我很欣赏 Homebrew 的另外一点是，你不完全理解每一个选项的含义也不会影响正常使用。若你想自己编译，可以在 <code>brew install</code> 命令后面加上 <code>-s</code> 或者 <code>--build-from-source</code> 标识，这样就能从源码编译 “秘方”（即便已经有一个 “瓶子” 存在）。</p><p>同样，软件底层的复杂性也很有意思。使用 <code>info</code> 可以查看 <code>tldr</code> 软件的依赖管理，“秘方” 的源代码存放在磁盘上的何处，甚至还能查看公开分析。</p><pre class="line-numbers language-bash"><code class="language-bash">1.  <span class="token variable"><span class="token variable">`</span>$ brew info tldr<span class="token variable">`</span></span>2.  <span class="token variable"><span class="token variable">`</span>tldr: stable 1.3.0 <span class="token punctuation">(</span>bottled<span class="token punctuation">)</span>, HEAD<span class="token variable">`</span></span>3.  <span class="token variable"><span class="token variable">`</span>Simplified and community-driven <span class="token function">man</span> pages<span class="token variable">`</span></span>4.  <span class="token variable"><span class="token variable">`</span>https://tldr.sh/<span class="token variable">`</span></span>5.  <span class="token variable"><span class="token variable">`</span>Conflicts with:<span class="token variable">`</span></span>6.   `<span class="token variable"><span class="token variable">`</span>tealdeer <span class="token punctuation">(</span>because both <span class="token function">install</span> <span class="token variable">`</span></span>tldr<span class="token variable"><span class="token variable">`</span> binaries<span class="token punctuation">)</span><span class="token variable">`</span></span><span class="token variable"><span class="token variable">`</span>7.  <span class="token variable">`</span></span>/home/linuxbrew/.linuxbrew/Cellar/tldr/1.3.0_2 <span class="token punctuation">(</span>6 files, 63.2KB<span class="token punctuation">)</span> *<span class="token variable"><span class="token variable">`</span>8.   <span class="token variable">`</span></span>Poured from bottle on 2020-06-08 at 15:56:15<span class="token variable"><span class="token variable">`</span>9.  <span class="token variable">`</span></span>From: https://github.com/Homebrew/linuxbrew-core/blob/master/Formula/tldr.rb<span class="token variable"><span class="token variable">`</span>10.  <span class="token variable">`</span></span><span class="token operator">==</span><span class="token operator">></span> Dependencies<span class="token variable"><span class="token variable">`</span>11.  <span class="token variable">`</span></span>Build: pkg-config ✔<span class="token variable"><span class="token variable">`</span>12.  <span class="token variable">`</span></span>Required: libzip ✔, curl ✔<span class="token variable"><span class="token variable">`</span>13.  <span class="token variable">`</span></span><span class="token operator">==</span><span class="token operator">></span> Options<span class="token variable"><span class="token variable">`</span>14.  <span class="token variable">`</span></span>--HEAD<span class="token variable"><span class="token variable">`</span>15.   <span class="token variable">`</span></span>Install HEAD version<span class="token variable"><span class="token variable">`</span>16.  <span class="token variable">`</span></span><span class="token operator">==</span><span class="token operator">></span> Analytics<span class="token variable"><span class="token variable">`</span>17.  <span class="token variable">`</span></span>install: 197 <span class="token punctuation">(</span>30 days<span class="token punctuation">)</span>, 647 <span class="token punctuation">(</span>90 days<span class="token punctuation">)</span>, 1,546 <span class="token punctuation">(</span>365 days<span class="token punctuation">)</span><span class="token variable"><span class="token variable">`</span>18.  <span class="token variable">`</span></span>install-on-request: 197 <span class="token punctuation">(</span>30 days<span class="token punctuation">)</span>, 646 <span class="token punctuation">(</span>90 days<span class="token punctuation">)</span>, 1,546 <span class="token punctuation">(</span>365 days<span class="token punctuation">)</span><span class="token variable"><span class="token variable">`</span>19.  <span class="token variable">`</span></span>build-error: 0 <span class="token punctuation">(</span>30 days<span class="token punctuation">)</span>`<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="从-Mac-到-Linux-的一点不足"><a href="#从-Mac-到-Linux-的一点不足" class="headerlink" title="从 Mac 到 Linux 的一点不足"></a>从 Mac 到 Linux 的一点不足</h1><p>在 macOS，Homebrew 的 <code>cask</code>（“酒桶”）子命令可以让用户使用命令行安装、管理整个应用软件。不幸的是，<code>cask</code>还不能在任何 Linux 发行版上使用。我在安装一个开源工具时发现了这点：</p><pre class="line-numbers language-bash"><code class="language-bash">1.  <span class="token variable"><span class="token variable">`</span>$ brew cask <span class="token function">install</span> tusk<span class="token variable">`</span></span>2.  <span class="token variable"><span class="token variable">`</span>Error: Installing casks is supported only on macOS<span class="token variable">`</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>我在 <a href="https://discourse.brew.sh/t/add-linux-support-to-existing-cask/5766" target="_blank" rel="noopener">论坛上</a> 问了一下，很快得到其他用户的反馈。总结一下，方案如下：</p><ul><li>复刻 Homebrew 项目，构建这个特性，然后像别人展示其价值</li><li>给该软件写一个 “秘方”，然后从源代码编译</li><li>为该软件创建一个第三方仓库</li></ul><p>最后一个是我最感兴趣的。Homebrew 通过 <a href="https://docs.brew.sh/How-to-Create-and-Maintain-a-Tap" target="_blank" rel="noopener">创建并维护 “水龙头tap”</a> （另一个受啤酒影响的术语）管理第三方仓库。随着你对系统越来越熟悉，并想加入生态系统， “水龙头” 是值得研究的。</p><h1 id="备份-Homebrew-的安装记录"><a href="#备份-Homebrew-的安装记录" class="headerlink" title="备份 Homebrew 的安装记录"></a>备份 Homebrew 的安装记录</h1><p>我最中意的 Homebrew 特性之一就是你可以像其它任何 <a href="https://opensource.com/article/19/3/move-your-dotfiles-version-control" target="_blank" rel="noopener">用版本控制工具来备份点文件</a> 一样备份你的安装记录。为了实现这个目的，Homebrew 提供 <code>bundle</code>（“捆扎”）子命令，它可以控制一个叫 <code>dump</code>（“倾倒”）的子命令生成一个 <code>Brewfile</code>。这个文件包含你目前所有安装的工具列表，可以重复使用。进入你想使用的目录然后运行命令，它会根据你所安装的软件生成 <code>Brewfile</code>：</p><pre class="line-numbers language-bash"><code class="language-bash">1.  `$ <span class="token function">cd</span> ~/Development/dotfiles <span class="token comment" spellcheck="true"># This is my dotfile folder`</span>2.  <span class="token variable"><span class="token variable">`</span>$ brew bundle dump<span class="token variable">`</span></span>3.  <span class="token variable"><span class="token variable">`</span>$ <span class="token function">ls</span> Brewfile<span class="token variable">`</span></span>4.  <span class="token variable"><span class="token variable">`</span>Brewfile<span class="token variable">`</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>当我换了一台机器，想要安装一样的软件时，进入含有 <code>Brewfile</code> 的文件夹，然后重新安装：</p><pre class="line-numbers language-bash"><code class="language-bash">1.  <span class="token variable"><span class="token variable">`</span>$ <span class="token function">ls</span> Brewfile<span class="token variable">`</span></span>2.  <span class="token variable"><span class="token variable">`</span>Brewfile<span class="token variable">`</span></span>3.  <span class="token variable"><span class="token variable">`</span>$ brew bundle<span class="token variable">`</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>它会在我的新机器上安装所有列出的 “秘方”。</p><h2 id="在-Mac-和-Linux-同时管理-Brewfile"><a href="#在-Mac-和-Linux-同时管理-Brewfile" class="headerlink" title="在 Mac 和 Linux 同时管理 Brewfile"></a>在 Mac 和 Linux 同时管理 Brewfile</h2><p><code>Brewfile</code> 非常适合备份你目前的安装记录，但是如果某些在 Mac 上运行的软件无法运行在 Linux 呢？或者刚好相反？我发现不管是 Mac 还是 Linux，如果软件无法在当前操作系统运行，Homebrew 会优雅地忽略那一行。如果它遇到不兼容的请求（比如使用 <code>brew</code> 在 Linux 安装 “酒桶cask” 时），它会选择跳过，继续安装过程：</p><pre class="line-numbers language-bash"><code class="language-bash">1.  <span class="token variable"><span class="token variable">`</span>$ brew bundle --file<span class="token operator">=</span>Brewfile.example<span class="token variable">`</span></span>3.  <span class="token variable"><span class="token variable">`</span>Skipping cask licecap <span class="token punctuation">(</span>on Linux<span class="token punctuation">)</span><span class="token variable">`</span></span>4.  <span class="token variable"><span class="token variable">`</span>Skipping cask macdown <span class="token punctuation">(</span>on Linux<span class="token punctuation">)</span><span class="token variable">`</span></span>5.  <span class="token variable"><span class="token variable">`</span>Installing fish<span class="token variable">`</span></span>6.  <span class="token variable"><span class="token variable">`</span>Homebrew Bundle complete<span class="token operator">!</span> 1 Brewfile dependency now installed.<span class="token variable">`</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>为了保持配置文件的简洁，我在两个操作系统上使用同一份 <code>Brewfile</code>，因为它只安装与操作系统相关的版本，所以我一直没有遇到任何问题。</p><h1 id="使用-Homebrew-管理软件包"><a href="#使用-Homebrew-管理软件包" class="headerlink" title="使用 Homebrew 管理软件包"></a>使用 Homebrew 管理软件包</h1><p>Homebrew 已经成了我必备的命令行工具，由于我很熟悉它，所以在 Linux 上的体验也充满乐趣。Homebrew 让我的工具井然有序，并且时刻保持更新，我愈发欣赏它在实用性与功能上找到的平衡点。我更喜欢将软件包管理的细节保持在用户需要了解的最小程度，大多数人都会从中受益。如果你已经很熟悉 Linux 包管理器了，Homebrew 可能会让你觉得很基础，但稍微深入一点看，就会发现它的高级选项远远超过本文的内容。</p><p>对 Linux 用户来说，他们有很多包管理器可以选择。如果你来自 MacOS，Homebrew 会让你宾至如归。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;不管你是想要更舒服地从 Mac 搬到 Linux，还是不满意常规的 Linux 包管理器，都可以试试 Homebr
      
    
    </summary>
    
      <category term="OPS" scheme="http://www.jifu.io/categories/OPS/"/>
    
      <category term="MacOS" scheme="http://www.jifu.io/categories/OPS/MacOS/"/>
    
    
      <category term="MacOS" scheme="http://www.jifu.io/tags/MacOS/"/>
    
      <category term="Homebrew" scheme="http://www.jifu.io/tags/Homebrew/"/>
    
      <category term="command" scheme="http://www.jifu.io/tags/command/"/>
    
  </entry>
  
  <entry>
    <title>Mac使用SSH登录Google Cloud Platform</title>
    <link href="http://www.jifu.io/posts/3897848060/"/>
    <id>http://www.jifu.io/posts/3897848060/</id>
    <published>2019-09-24T10:01:05.000Z</published>
    <updated>2020-08-11T05:17:21.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://www.jifu.io/images/2/20190924220856.png" alt=""></p><h1 id="启用root账户及密码自动验证"><a href="#启用root账户及密码自动验证" class="headerlink" title="启用root账户及密码自动验证"></a>启用root账户及密码自动验证</h1><h2 id="使用Google-Cloud网页版ssh，切换到root"><a href="#使用Google-Cloud网页版ssh，切换到root" class="headerlink" title="使用Google Cloud网页版ssh，切换到root"></a>使用Google Cloud网页版ssh，切换到root</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> -i<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="编辑ssh配置文件"><a href="#编辑ssh配置文件" class="headerlink" title="编辑ssh配置文件"></a>编辑ssh配置文件</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">vi</span> /etc/ssh/sshd_config<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="修改以下的内容"><a href="#修改以下的内容" class="headerlink" title="修改以下的内容"></a>修改以下的内容</h2><pre class="line-numbers language-bash"><code class="language-bash">PermitRootLogin <span class="token function">yes</span>PasswordAuthentication <span class="token function">yes</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://www.jifu.io/images/2/20190924220447.png" alt=""></p><h2 id="重启ssh"><a href="#重启ssh" class="headerlink" title="重启ssh"></a>重启ssh</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">service</span> sshd restart<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="修改当前账户和root账户的密码"><a href="#修改当前账户和root账户的密码" class="headerlink" title="修改当前账户和root账户的密码"></a>修改当前账户和root账户的密码</h1><h2 id="设置当前账户新密码"><a href="#设置当前账户新密码" class="headerlink" title="设置当前账户新密码"></a>设置当前账户新密码</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">passwd</span> <span class="token variable">${whoami}</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="设置root账户新密码"><a href="#设置root账户新密码" class="headerlink" title="设置root账户新密码"></a>设置root账户新密码</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">passwd</span> root<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://www.jifu.io/images/2/20190924220603.png" alt=""></p><h1 id="使用Mac自带的SSH进行连接"><a href="#使用Mac自带的SSH进行连接" class="headerlink" title="使用Mac自带的SSH进行连接"></a>使用Mac自带的SSH进行连接</h1><h2 id="打开终端，新建远程连接，填写ip地址以及账户名"><a href="#打开终端，新建远程连接，填写ip地址以及账户名" class="headerlink" title="打开终端，新建远程连接，填写ip地址以及账户名"></a>打开终端，<strong><em>新建远程连接</em></strong>，填写ip地址以及账户名</h2><p><img src="https://www.jifu.io/images/2/20190924220629.png" alt=""></p><h2 id="使用刚才修改的密码进行登录"><a href="#使用刚才修改的密码进行登录" class="headerlink" title="使用刚才修改的密码进行登录"></a>使用刚才修改的密码进行登录</h2><p><img src="https://www.jifu.io/images/2/20190924220646.png" alt=""></p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://www.jifu.io/images/2/20190924220856.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;启用root账户及密码自动验证&quot;&gt;&lt;a href=&quot;#启用root账户及密码自动验证&quot; class=&quot;headerlink&quot; title=&quot;启用root账户及密码自动验证&quot;&gt;&lt;/a&gt;启用root账户及密码自动验证&lt;/h1&gt;&lt;h2 id=&quot;使用Google-Cloud网页版ssh，切换到root&quot;&gt;&lt;a href=&quot;#使用Google-Cloud网页版ssh，切换到root&quot; class=&quot;headerlink&quot; title=&quot;使用Google Cloud网页版ssh，切换到root&quot;&gt;&lt;/a&gt;使用Google Cloud网页版ssh，切换到root&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;sudo -i
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;编辑ssh配置文件&quot;&gt;&lt;a href=&quot;#编辑ssh配置文件&quot; class=&quot;headerlink&quot; title=&quot;编辑ssh配置文件&quot;&gt;&lt;/a&gt;编辑ssh配置文件&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;vi /etc/ssh/sshd_config
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;修改以下的内容&quot;&gt;&lt;a href=&quot;#修改以下的内容&quot; class=&quot;headerlink&quot; title=&quot;修改以下的内容&quot;&gt;&lt;/a&gt;修改以下的内容&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;PermitRootLogin yes
PasswordAuthentication yes
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://www.jifu.io/images/2/20190924220447.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;重启ssh&quot;&gt;&lt;a href=&quot;#重启ssh&quot; class=&quot;headerlink&quot; title=&quot;重启ssh&quot;&gt;&lt;/a&gt;重启ssh&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;service sshd restart
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&quot;修改当前账户和root账户的密码&quot;&gt;&lt;a href=&quot;#修改当前账户和root账户的密码&quot; class=&quot;headerlink&quot; title=&quot;修改当前账户和root账户的密码&quot;&gt;&lt;/a&gt;修改当前账户和root账户的密码&lt;/h1&gt;&lt;h2 id=&quot;设置当前账户新密码&quot;&gt;&lt;a href=&quot;#设置当前账户新密码&quot; class=&quot;headerlink&quot; title=&quot;设置当前账户新密码&quot;&gt;&lt;/a&gt;设置当前账户新密码&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;sudo passwd ${whoami}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;设置root账户新密码&quot;&gt;&lt;a href=&quot;#设置root账户新密码&quot; class=&quot;headerlink&quot; title=&quot;设置root账户新密码&quot;&gt;&lt;/a&gt;设置root账户新密码&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;sudo passwd root
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://www.jifu.io/images/2/20190924220603.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;使用Mac自带的SSH进行连接&quot;&gt;&lt;a href=&quot;#使用Mac自带的SSH进行连接&quot; class=&quot;headerlink&quot; title=&quot;使用Mac自带的SSH进行连接&quot;&gt;&lt;/a&gt;使用Mac自带的SSH进行连接&lt;/h1&gt;&lt;h2 id=&quot;打开终端，新建远程连接，填写ip地址以及账户名&quot;&gt;&lt;a href=&quot;#打开终端，新建远程连接，填写ip地址以及账户名&quot; class=&quot;headerlink&quot; title=&quot;打开终端，新建远程连接，填写ip地址以及账户名&quot;&gt;&lt;/a&gt;打开终端，&lt;strong&gt;&lt;em&gt;新建远程连接&lt;/em&gt;&lt;/strong&gt;，填写ip地址以及账户名&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://www.jifu.io/images/2/20190924220629.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;使用刚才修改的密码进行登录&quot;&gt;&lt;a href=&quot;#使用刚才修改的密码进行登录&quot; class=&quot;headerlink&quot; title=&quot;使用刚才修改的密码进行登录&quot;&gt;&lt;/a&gt;使用刚才修改的密码进行登录&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://www.jifu.io/images/2/20190924220646.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="OPS" scheme="http://www.jifu.io/categories/OPS/"/>
    
      <category term="Linux" scheme="http://www.jifu.io/categories/OPS/Linux/"/>
    
    
      <category term="SSH" scheme="http://www.jifu.io/tags/SSH/"/>
    
      <category term="Google Cloud" scheme="http://www.jifu.io/tags/Google-Cloud/"/>
    
  </entry>
  
  <entry>
    <title>WordPress启用memcached动态缓存以及报错解决</title>
    <link href="http://www.jifu.io/posts/1067246247/"/>
    <id>http://www.jifu.io/posts/1067246247/</id>
    <published>2019-09-22T11:22:57.000Z</published>
    <updated>2020-08-11T05:17:21.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://www.jifu.io/images/2/20190922233858.jpg" alt=""></p><h1 id="Memcahced-Memcache"><a href="#Memcahced-Memcache" class="headerlink" title="Memcahced | Memcache"></a>Memcahced | Memcache</h1><p>php有memcached和memcache两个类似组件，百度搜出来的文章，大部分是教你如何安装memcache(d)，却步解释二者的区别。</p><h2 id="memcache"><a href="#memcache" class="headerlink" title="memcache"></a>memcache</h2><p>是 pecl 扩展库版本，原生支持php，出现更早，是老前辈；</p><h2 id="memcached"><a href="#memcached" class="headerlink" title="memcached"></a>memcached</h2><p>是 libmemcached 版本，出现较后，是新一代，因此也更加完善，推荐使用。</p><blockquote><p>Ps：如果想更深入了解，可以搜索下 memcache vs memcached</p></blockquote><p>其实，我们这种小网站的话，二选一即可，这点QPS还不至于纠结。不过一旦选择了，安装的时候就要注意区分，一对一配套安装，别搞的牛头不对马嘴，出现上面那位仁兄的困惑（后文有相关说明）。</p><p>这里，我果断选择了带d的，继续分享。</p><h1 id="部署memcached"><a href="#部署memcached" class="headerlink" title="部署memcached"></a>部署memcached</h1><h2 id="安装memcached"><a href="#安装memcached" class="headerlink" title="安装memcached"></a>安装memcached</h2><blockquote><p>Ps：这里的memcached是指Mencached的服务端，用来处理缓存数据，名字也是容易混淆。</p></blockquote><p>下面2种安装方式任选其一：</p><h3 id="在线安装"><a href="#在线安装" class="headerlink" title="在线安装"></a>在线安装</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># Centos直接使用yum安装即可，其他系统自行搜索安装命令，比如ubuntu</span>yum -y <span class="token function">install</span> memcached<span class="token comment" spellcheck="true"># 启动memcached</span><span class="token function">service</span> memcached start<span class="token comment" spellcheck="true"># 开机启动</span><span class="token function">chkconfig</span> memcached on<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h3><p>相比在线安装，很多时候编译安装更加灵活，非常类似Windows平台的自定义安装或绿色安装，推荐熟悉 Linux 系统的朋友使用：</p><a id="more"></a><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 从官方下载最新源码包</span><span class="token function">wget</span> http://memcached.org/files/memcached-1.4.25.tar.gz<span class="token comment" spellcheck="true">#解压开始编译安装</span><span class="token function">tar</span> xzvf memcached-1.4.15.tar.gz<span class="token function">cd</span> memcached-1.4.15./configure --prefix<span class="token operator">=</span>/usr/local/memcached<span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token function">install</span><span class="token function">cd</span> <span class="token punctuation">..</span><span class="token comment" spellcheck="true">#设置环境</span><span class="token function">ln</span> -s /usr/local/memcached/bin/memcached /usr/bin/memcached<span class="token function">cp</span> scripts/memcached.sysv /etc/init.d/memcached<span class="token comment" spellcheck="true">#改为监听127.0.0.1，并关闭UDP连接方式，若为远程服务调用或不需要的话请跳过此行</span><span class="token function">sed</span> -i <span class="token string">'s/OPTIONS=""/OPTIONS="-l 127.0.0.1 -U 0"/g'</span> /etc/init.d/memcached<span class="token function">sed</span> -i <span class="token string">'s@chown@#chown@'</span> /etc/init.d/memcached<span class="token function">sed</span> -i <span class="token string">'s@/var/run/memcached/memcached.pid@/var/run/memcached.pid@'</span> /etc/init.d/memcached<span class="token comment" spellcheck="true">#启动并设置开机服务</span><span class="token function">chmod</span> +x /etc/init.d/memcached<span class="token function">service</span> memcached start<span class="token function">chkconfig</span> --add memcached<span class="token function">chkconfig</span> memcached on<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>至此memcached的服务端就安装好了。</p><h2 id="集成php-memcached拓展"><a href="#集成php-memcached拓展" class="headerlink" title="集成php-memcached拓展"></a>集成php-memcached拓展</h2><h3 id="先安装libmemcached"><a href="#先安装libmemcached" class="headerlink" title="先安装libmemcached"></a>先安装libmemcached</h3><p>提前分享一个问题，如果直接按照网上的教程安装php-memcached可能会报如下错误：</p><p><code>configure: error: no, sasl.h is not available. Run configure with –disable-memcached-sasl to disable this check</code></p><p>大部分教程会使用 –disable-memcached-sasl 参数来禁用这个功能，作为一个强迫症，我还是从国外的论坛扒到了解决方法，很简单，在编译libmemcached之前，先安装cyrus-sasl-devel即可解决</p><pre class="line-numbers language-bash"><code class="language-bash">yum <span class="token function">install</span> cyrus-sasl-devel<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>接着开始编译安装libmemcached：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">wget</span> https://launchpad.net/libmemcached/1.0/1.0.18/+download/libmemcached-1.0.18.tar.gz<span class="token function">tar</span> xzf libmemcached-1.0.18.tar.gz<span class="token function">cd</span> libmemcached-1.0.18./configure --with-memcached<span class="token operator">=</span>/usr/local/memcached --prefix<span class="token operator">=</span>/usr/local/libmemcached<span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token function">install</span><span class="token function">cd</span> <span class="token punctuation">..</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="安装php-memcached组件"><a href="#安装php-memcached组件" class="headerlink" title="安装php-memcached组件"></a>安装php-memcached组件</h3><p>下载和解压这步，我们要区分下是php7还是之前的版本：</p><p>1、如果当前环境是php7 ：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#从github下载PHP7专用的memcached组件分支</span><span class="token function">wget</span> https://github.com/php-memcached-dev/php-memcached/archive/php7.zip<span class="token comment" spellcheck="true">#解压备用</span>unzip php7.zip<span class="token function">cd</span> php-memcached-php7<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2、如果是旧的的php版本：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#从官方下载php-memcached的最新源码包</span><span class="token function">wget</span> http://pecl.php.net/get/memcached-2.2.0.tgz<span class="token comment" spellcheck="true">#解压和编译</span><span class="token function">tar</span> zxvf memcached-2.2.0.tgz<span class="token function">cd</span> memcached-2.2.0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>接下来开始编译：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#注意已有php的实际路径</span>/usr/local/php/bin/phpize./configure --with-php-config<span class="token operator">=</span>/usr/local/php/bin/php-config<span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>编辑php.ini文件，在最后插入如下参数</p><pre><code>extension=memcached.so</code></pre><p>Ps：如果不知道php.ini在哪个位置 ？ 执行命令：php –ini 即可找到。</p><p>保存后，执行如下命令看看是否加载成功：</p><pre class="line-numbers language-bash"><code class="language-bash">php -m <span class="token operator">|</span> <span class="token function">grep</span> memcached<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果输出memcached则表示成功。</p><p>最后，如果是Nginx就 service php-fpm reload ，如果是Apache就重启Apache完成安装。</p><h3 id="测试缓存"><a href="#测试缓存" class="headerlink" title="测试缓存"></a>测试缓存</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token operator">&lt;</span>?php<span class="token variable">$m</span> <span class="token operator">=</span> new Memcached<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$m</span>-<span class="token operator">></span>addServer<span class="token punctuation">(</span> <span class="token string">'127.0.0.1'</span>, 11211 <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$m</span>-<span class="token operator">></span>set<span class="token punctuation">(</span> <span class="token string">'foo'</span>, 100 <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$m</span>-<span class="token operator">></span>get<span class="token punctuation">(</span> <span class="token string">'foo'</span> <span class="token punctuation">)</span> <span class="token keyword">.</span> <span class="token string">"\n"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>将上述代码保存为 test.php，然后执行 php -f test.php，如果能输出100表示安装成功。</p><h1 id="WordPress缓存"><a href="#WordPress缓存" class="headerlink" title="WordPress缓存"></a>WordPress缓存</h1><p>做完上述所有步骤，系统环境就已经支持memcached缓存了。下面分享如何应用到WordPress</p><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p>访问github项目页面下载插件包：</p><p><a href="https://github.com/tollmanz/wordpress-pecl-memcached-object-cache" target="_blank" rel="noopener">https://github.com/tollmanz/wordpress-pecl-memcached-object-cache</a></p><p>下载并解压得到的 object-cache.php，上传到 wp-content 目录即可开启memcached缓存。</p><p>值得说明的是，这里还有一个大坑等着你来踩：</p><pre><code>WordPress官网上的object-cache.php虽然也号称Memcached 插件，然而它只支持Memcache，不支持新版的，所以不能使用。如果错误地将object-cache.php和Memcached混用的话，则会出现WordPress打不开，前台后台页面一片空白的现象。</code></pre><p>这也就是经常有站长反馈WordPress启用memcached功能后，页面空白的错误原因了。不巧，张戈在测试的时候也踩坑了，所以特别提出来，希望大家了解错误的原因，规避掉！</p><h2 id="查看效果"><a href="#查看效果" class="headerlink" title="查看效果"></a>查看效果</h2><p>做完第2步之后，你可以去网站前台刷新几次，产生缓存，然后从官方下载探针：</p><p><a href="http://pecl.php.net/get/memcache-3.0.8.tgz" target="_blank" rel="noopener">http://pecl.php.net/get/memcache-3.0.8.tgz</a></p><p>解压后，里面有一个memcache.php文件，编辑并找到如下代码：</p><pre class="line-numbers language-bash"><code class="language-bash">define<span class="token punctuation">(</span><span class="token string">'ADMIN_USERNAME'</span>,<span class="token string">'memcache'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    // Admin Usernamedefine<span class="token punctuation">(</span><span class="token string">'ADMIN_PASSWORD'</span>,<span class="token string">'password'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    // Admin Passworddefine<span class="token punctuation">(</span><span class="token string">'DATE_FORMAT'</span>,<span class="token string">'Y/m/d H:i:s'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>define<span class="token punctuation">(</span><span class="token string">'GRAPH_SIZE'</span>,200<span class="token punctuation">)</span><span class="token punctuation">;</span>define<span class="token punctuation">(</span><span class="token string">'MAX_ITEM_DUMP'</span>,50<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$MEMCACHE_SERVERS</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'mymemcache-server1:11211'</span><span class="token punctuation">;</span> // add <span class="token function">more</span> as an array<span class="token variable">$MEMCACHE_SERVERS</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'mymemcache-server2:11211'</span><span class="token punctuation">;</span> // add <span class="token function">more</span> as an array<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改如下：</p><pre class="line-numbers language-bash"><code class="language-bash">define<span class="token punctuation">(</span><span class="token string">'ADMIN_USERNAME'</span>,<span class="token string">'memcache'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    // Admin Username 登录名称，自行修改define<span class="token punctuation">(</span><span class="token string">'ADMIN_PASSWORD'</span>,<span class="token string">'password'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    // Admin Password 登录密码，自行修改define<span class="token punctuation">(</span><span class="token string">'DATE_FORMAT'</span>,<span class="token string">'Y/m/d H:i:s'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>define<span class="token punctuation">(</span><span class="token string">'GRAPH_SIZE'</span>,200<span class="token punctuation">)</span><span class="token punctuation">;</span>define<span class="token punctuation">(</span><span class="token string">'MAX_ITEM_DUMP'</span>,50<span class="token punctuation">)</span><span class="token punctuation">;</span>//下面是定义memcached服务器，一般我们是单机部署，所以注释掉一行，并将服务器地址根据实际修改，比如本文是127.0.0.1<span class="token variable">$MEMCACHE_SERVERS</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'127.0.0.1:11211'</span><span class="token punctuation">;</span> // add <span class="token function">more</span> as an array//<span class="token variable">$MEMCACHE_SERVERS</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'mymemcache-server2:11211'</span><span class="token punctuation">;</span> // add <span class="token function">more</span> as an array<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上传到网站私密目录（临时测试可以放到根目录），然后通过前台访问memcache.php这个文件，输入上面的用户名和密码即可看到memcached状态：</p><p><a href="https://www.jifu.io/images/2/20190922233015.png"></a></p><h2 id="其他设置"><a href="#其他设置" class="headerlink" title="其他设置"></a>其他设置</h2><p>如果发现页面可以打开，但是里面没有Hits数据，说明WordPress并没有成功连接到memcached，这时候我们可以在wp-config.php加入如下参数：</p><pre class="line-numbers language-bash"><code class="language-bash">global <span class="token variable">$memcached_servers</span><span class="token punctuation">;</span><span class="token variable">$memcached_servers</span> <span class="token operator">=</span> array<span class="token punctuation">(</span>    array<span class="token punctuation">(</span>        <span class="token string">'127.0.0.1'</span>, // Memcached server IP address         11211        // Memcached server port    <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>实际的memcached监听IP和端口，你可以通过如下命令查看：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">netstat</span> -nutlp <span class="token operator">|</span> <span class="token function">grep</span> memcache<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="纯静态缓存"><a href="#纯静态缓存" class="headerlink" title="纯静态缓存"></a>纯静态缓存</h1><p>实际上memcached可以缓存动态查询数据，他也可以缓存html内容！因此，memcached也能实现和其他方案一样的html纯净态缓存！</p><p>实现原理和我之前分享的php代码缓存html方案类似，不过后者更好的是将缓存内容放在了内存当中，速度比放硬盘快的绝对不是一点点。</p><p>如何将前台页面html都缓存到memcached中呢？这里，我们需要用到 batcache 这款插件。</p><h2 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h2><p>直接在WordPress后台搜索安装 batcache ，也可以从官方下载插件包：</p><p><a href="https://wordpress.org/plugins/batcache/" target="_blank" rel="noopener">https://wordpress.org/plugins/batcache/</a></p><p>然后解压得到 advanced-cache.php 上传到wp-content即可。</p><h2 id="启用缓存"><a href="#启用缓存" class="headerlink" title="启用缓存"></a>启用缓存</h2><p>在wp-config.php中启用缓存：</p><pre class="line-numbers language-bash"><code class="language-bash">define<span class="token punctuation">(</span><span class="token string">'WP_CACHE'</span>, true<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>不过，插件默认只会对游客缓存，显然也是怕影响到前台登录态。缓存和动态判断一直是矛与盾、鱼和熊掌，看个人抉择吧。</p><h2 id="参数调整"><a href="#参数调整" class="headerlink" title="参数调整"></a>参数调整</h2><pre class="line-numbers language-bash"><code class="language-bash">var <span class="token variable">$max_age</span> <span class="token operator">=</span>  3600<span class="token punctuation">;</span> // Expire batcache items aged this many seconds <span class="token punctuation">(</span>zero to disable batcache<span class="token punctuation">)</span>var <span class="token variable">$remote</span>  <span class="token operator">=</span>    0<span class="token punctuation">;</span> // Zero disables sending buffers to remote datacenters <span class="token punctuation">(</span>req/sec is never sent<span class="token punctuation">)</span>var <span class="token variable">$times</span>   <span class="token operator">=</span>    2<span class="token punctuation">;</span> // Only batcache a page after it is accessed this many times<span class="token punctuation">..</span>. <span class="token punctuation">(</span>two or more<span class="token punctuation">)</span>var <span class="token variable">$seconds</span> <span class="token operator">=</span>  0<span class="token punctuation">;</span> // <span class="token punctuation">..</span>.in this many seconds <span class="token punctuation">(</span>zero to ignore this and use batcache immediately<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>max_age代表缓存过期时间（以秒为单位），times表示访问多少次才创建缓存（2是最小值），seconds表示在多少秒之后才创建缓存（0表示立即）</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://www.jifu.io/images/2/20190922233858.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;Memcahced-Memcache&quot;&gt;&lt;a href=&quot;#Memcahced-Memcache&quot; class=&quot;headerlink&quot; title=&quot;Memcahced | Memcache&quot;&gt;&lt;/a&gt;Memcahced | Memcache&lt;/h1&gt;&lt;p&gt;php有memcached和memcache两个类似组件，百度搜出来的文章，大部分是教你如何安装memcache(d)，却步解释二者的区别。&lt;/p&gt;
&lt;h2 id=&quot;memcache&quot;&gt;&lt;a href=&quot;#memcache&quot; class=&quot;headerlink&quot; title=&quot;memcache&quot;&gt;&lt;/a&gt;memcache&lt;/h2&gt;&lt;p&gt;是 pecl 扩展库版本，原生支持php，出现更早，是老前辈；&lt;/p&gt;
&lt;h2 id=&quot;memcached&quot;&gt;&lt;a href=&quot;#memcached&quot; class=&quot;headerlink&quot; title=&quot;memcached&quot;&gt;&lt;/a&gt;memcached&lt;/h2&gt;&lt;p&gt;是 libmemcached 版本，出现较后，是新一代，因此也更加完善，推荐使用。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Ps：如果想更深入了解，可以搜索下 memcache vs memcached&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;其实，我们这种小网站的话，二选一即可，这点QPS还不至于纠结。不过一旦选择了，安装的时候就要注意区分，一对一配套安装，别搞的牛头不对马嘴，出现上面那位仁兄的困惑（后文有相关说明）。&lt;/p&gt;
&lt;p&gt;这里，我果断选择了带d的，继续分享。&lt;/p&gt;
&lt;h1 id=&quot;部署memcached&quot;&gt;&lt;a href=&quot;#部署memcached&quot; class=&quot;headerlink&quot; title=&quot;部署memcached&quot;&gt;&lt;/a&gt;部署memcached&lt;/h1&gt;&lt;h2 id=&quot;安装memcached&quot;&gt;&lt;a href=&quot;#安装memcached&quot; class=&quot;headerlink&quot; title=&quot;安装memcached&quot;&gt;&lt;/a&gt;安装memcached&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Ps：这里的memcached是指Mencached的服务端，用来处理缓存数据，名字也是容易混淆。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;下面2种安装方式任选其一：&lt;/p&gt;
&lt;h3 id=&quot;在线安装&quot;&gt;&lt;a href=&quot;#在线安装&quot; class=&quot;headerlink&quot; title=&quot;在线安装&quot;&gt;&lt;/a&gt;在线安装&lt;/h3&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;# Centos直接使用yum安装即可，其他系统自行搜索安装命令，比如ubuntu
yum -y install memcached
# 启动memcached
service memcached start
# 开机启动
chkconfig memcached on
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;编译安装&quot;&gt;&lt;a href=&quot;#编译安装&quot; class=&quot;headerlink&quot; title=&quot;编译安装&quot;&gt;&lt;/a&gt;编译安装&lt;/h3&gt;&lt;p&gt;相比在线安装，很多时候编译安装更加灵活，非常类似Windows平台的自定义安装或绿色安装，推荐熟悉 Linux 系统的朋友使用：&lt;/p&gt;
    
    </summary>
    
      <category term="OPS" scheme="http://www.jifu.io/categories/OPS/"/>
    
      <category term="Wordpress" scheme="http://www.jifu.io/categories/OPS/Wordpress/"/>
    
    
      <category term="WordPress" scheme="http://www.jifu.io/tags/WordPress/"/>
    
      <category term="memcached" scheme="http://www.jifu.io/tags/memcached/"/>
    
      <category term="缓存" scheme="http://www.jifu.io/tags/%E7%BC%93%E5%AD%98/"/>
    
  </entry>
  
  <entry>
    <title>Nginx配置跨域请求 Access-Control-Allow-Origin *</title>
    <link href="http://www.jifu.io/posts/3996389515/"/>
    <id>http://www.jifu.io/posts/3996389515/</id>
    <published>2019-09-21T22:16:59.000Z</published>
    <updated>2020-08-11T05:17:21.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://www.jifu.io/images/2/20190921222614.jpeg" alt=""></p><h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>当出现403跨域错误的时候 No ‘Access-Control-Allow-Origin’ header is present on the requested resource，需要给Nginx服务器配置响应的header参数：</p><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>只需要在Nginx的配置文件中配置以下参数：</p><pre class="line-numbers language-bash"><code class="language-bash">location / <span class="token punctuation">{</span>    add_header Access-Control-Allow-Origin *<span class="token punctuation">;</span>    add_header Access-Control-Allow-Methods <span class="token string">'GET, POST, OPTIONS'</span><span class="token punctuation">;</span>    add_header Access-Control-Allow-Headers <span class="token string">'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization'</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$request_method</span> <span class="token operator">=</span> <span class="token string">'OPTIONS'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> 204<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>上面配置代码即可解决问题了，不想深入研究的，看到这里就可以啦=-=</p></blockquote><h1 id="参数解释"><a href="#参数解释" class="headerlink" title="参数解释"></a>参数解释</h1><h2 id="Access-Control-Allow-Origin"><a href="#Access-Control-Allow-Origin" class="headerlink" title="Access-Control-Allow-Origin"></a>Access-Control-Allow-Origin</h2><blockquote><p>服务器默认是不被允许跨域的。给Nginx服务器配置<code>Access-Control-Allow-Origin *</code>后，表示服务器可以接受所有的请求源（Origin）,即接受所有跨域的请求。</p></blockquote><h2 id="Access-Control-Allow-Headers"><a href="#Access-Control-Allow-Headers" class="headerlink" title="Access-Control-Allow-Headers"></a>Access-Control-Allow-Headers</h2><p>是为了防止出现以下错误：</p><p><code>Request header field Content-Type is not allowed by Access-Control-Allow-Headers in preflight response.</code></p><p>这个错误表示当前请求Content-Type的值不被支持。其实是我们发起了”application/json”的类型请求导致的。这里涉及到一个概念：<strong><em>预检请求（preflight request）</em></strong>,请看下面”预检请求”的介绍。</p><h2 id="Access-Control-Allow-Methods"><a href="#Access-Control-Allow-Methods" class="headerlink" title="Access-Control-Allow-Methods"></a>Access-Control-Allow-Methods</h2><p>是为了防止出现以下错误：</p><p><code>Content-Type is not allowed by Access-Control-Allow-Headers in preflight response.</code></p><a id="more"></a><h1 id="OPTIONS"><a href="#OPTIONS" class="headerlink" title="OPTIONS"></a>OPTIONS</h1><p>添加204的返回，是为了处理在发送POST请求时Nginx依然拒绝访问的错误</p><p>发送”预检请求”时，需要用到方法 OPTIONS ,所以服务器需要允许该方法。</p><h1 id="预检请求（preflight-request）"><a href="#预检请求（preflight-request）" class="headerlink" title="预检请求（preflight request）"></a>预检请求（preflight request）</h1><p>其实上面的配置涉及到了一个W3C标准：<strong><em>CROS</em></strong>,全称是跨域资源共享 (Cross-origin resource sharing)，它的提出就是为了解决跨域请求的。</p><blockquote><p>跨域资源共享(CORS)标准新增了一组 HTTP 首部字段，允许服务器声明哪些源站有权限访问哪些资源。另外，规范要求，<strong><em>对那些可能对服务器数据产生副作用的HTTP 请求方法（特别是 GET 以外的 HTTP 请求，或者搭配某些 MIME 类型的 POST 请求）</em></strong>，浏览器必须首先使用 OPTIONS 方法发起一个预检请求（preflight request），从而获知服务端是否允许该跨域请求。服务器确认允许之后，才发起实际的 HTTP 请求。在预检请求的返回中，服务器端也可以通知客户端，是否需要携带身份凭证（包括 Cookies 和 HTTP 认证相关数据）。</p></blockquote><p>其实<strong><em>Content-Type字段的类型为application/json</em></strong>的请求就是上面所说的<strong><em>搭配某些 MIME 类型的 POST 请求</em></strong>,CORS规定，Content-Type不属于以下MIME类型的，都属于预检请求：</p><pre class="line-numbers language-bash"><code class="language-bash">application/x-www-form-urlencodedmultipart/form-datatext/plain<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>所以 application/json的请求 会在正式通信之前，增加一次”预检”请求，这次”预检”请求会带上头部信息 <strong><em>Access-Control-Request-Headers: Content-Type</em></strong>：</p><pre class="line-numbers language-bash"><code class="language-bash">OPTIONS /api/test HTTP/1.1Origin: http://foo.exampleAccess-Control-Request-Method: POSTAccess-Control-Request-Headers: Content-Type<span class="token punctuation">..</span>. 省略了一些<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>服务器回应时，返回的头部信息如果不包含<strong><em>Access-Control-Allow-Headers: Content-Type</em></strong>则表示不接受非默认的的Content-Type。即出现以下错误：</p><p><code>Request header field Content-Type is not allowed by Access-Control-Allow-Headers in preflight response.</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://www.jifu.io/images/2/20190921222614.jpeg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h1&gt;&lt;p&gt;当出现403跨域错误的时候 No ‘Access-Control-Allow-Origin’ header is present on the requested resource，需要给Nginx服务器配置响应的header参数：&lt;/p&gt;
&lt;h1 id=&quot;解决方案&quot;&gt;&lt;a href=&quot;#解决方案&quot; class=&quot;headerlink&quot; title=&quot;解决方案&quot;&gt;&lt;/a&gt;解决方案&lt;/h1&gt;&lt;p&gt;只需要在Nginx的配置文件中配置以下参数：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;location / {
    add_header Access-Control-Allow-Origin *;
    add_header Access-Control-Allow-Methods &amp;#39;GET, POST, OPTIONS&amp;#39;;
    add_header Access-Control-Allow-Headers &amp;#39;DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization&amp;#39;;

    if ($request_method = &amp;#39;OPTIONS&amp;#39;) {
        return 204;
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;上面配置代码即可解决问题了，不想深入研究的，看到这里就可以啦=-=&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;参数解释&quot;&gt;&lt;a href=&quot;#参数解释&quot; class=&quot;headerlink&quot; title=&quot;参数解释&quot;&gt;&lt;/a&gt;参数解释&lt;/h1&gt;&lt;h2 id=&quot;Access-Control-Allow-Origin&quot;&gt;&lt;a href=&quot;#Access-Control-Allow-Origin&quot; class=&quot;headerlink&quot; title=&quot;Access-Control-Allow-Origin&quot;&gt;&lt;/a&gt;Access-Control-Allow-Origin&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;服务器默认是不被允许跨域的。给Nginx服务器配置&lt;code&gt;Access-Control-Allow-Origin *&lt;/code&gt;后，表示服务器可以接受所有的请求源（Origin）,即接受所有跨域的请求。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Access-Control-Allow-Headers&quot;&gt;&lt;a href=&quot;#Access-Control-Allow-Headers&quot; class=&quot;headerlink&quot; title=&quot;Access-Control-Allow-Headers&quot;&gt;&lt;/a&gt;Access-Control-Allow-Headers&lt;/h2&gt;&lt;p&gt;是为了防止出现以下错误：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Request header field Content-Type is not allowed by Access-Control-Allow-Headers in preflight response.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这个错误表示当前请求Content-Type的值不被支持。其实是我们发起了”application/json”的类型请求导致的。这里涉及到一个概念：&lt;strong&gt;&lt;em&gt;预检请求（preflight request）&lt;/em&gt;&lt;/strong&gt;,请看下面”预检请求”的介绍。&lt;/p&gt;
&lt;h2 id=&quot;Access-Control-Allow-Methods&quot;&gt;&lt;a href=&quot;#Access-Control-Allow-Methods&quot; class=&quot;headerlink&quot; title=&quot;Access-Control-Allow-Methods&quot;&gt;&lt;/a&gt;Access-Control-Allow-Methods&lt;/h2&gt;&lt;p&gt;是为了防止出现以下错误：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Content-Type is not allowed by Access-Control-Allow-Headers in preflight response.&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="back-end" scheme="http://www.jifu.io/categories/back-end/"/>
    
      <category term="Middle-ware" scheme="http://www.jifu.io/categories/back-end/Middle-ware/"/>
    
      <category term="Nginx" scheme="http://www.jifu.io/categories/back-end/Middle-ware/Nginx/"/>
    
    
      <category term="Nignx" scheme="http://www.jifu.io/tags/Nignx/"/>
    
      <category term="跨域" scheme="http://www.jifu.io/tags/%E8%B7%A8%E5%9F%9F/"/>
    
  </entry>
  
  <entry>
    <title>linux下测试磁盘的读写IO速度(IO物理测速)</title>
    <link href="http://www.jifu.io/posts/1073812833/"/>
    <id>http://www.jifu.io/posts/1073812833/</id>
    <published>2019-08-25T03:50:00.000Z</published>
    <updated>2020-08-11T05:17:21.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://www.jifu.io/images/2/20190902210133.jpg" alt=""></p><h1 id="hdparm命令"><a href="#hdparm命令" class="headerlink" title="hdparm命令"></a>hdparm命令</h1><p>这是一个是用来获取ATA/IDE硬盘的参数的命令,是由早期Linux IDE驱动的开发和维护人员 Mark Lord开发编写的( hdparm has been written by Mark Lord <a href="mailto:&#x6d;&#x6c;&#111;&#x72;&#100;&#x40;&#x70;&#x6f;&#x62;&#x6f;&#x78;&#x2e;&#99;&#x6f;&#x6d;" target="_blank" rel="noopener">&#x6d;&#x6c;&#111;&#x72;&#100;&#x40;&#x70;&#x6f;&#x62;&#x6f;&#x78;&#x2e;&#99;&#x6f;&#x6d;</a>, the primary developer and maintainer of the (E)IDE driver for Linux, with suggestions from many netfolk).该命令应该也是仅用于Linux系统,对于UNIX系统，ATA/IDE硬盘用的可能比较少，一般大型的系统都是使用磁盘阵列的.</p><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># hdparm -Tt /dev/sda</span>/dev/sda:Timing cached reads: 6676 MB <span class="token keyword">in</span> 2.00 seconds <span class="token operator">=</span> 3340.18 MB/secTiming buffered disk reads: 218 MB <span class="token keyword">in</span> 3.11 seconds <span class="token operator">=</span> 70.11 MB/sec<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到,2秒钟读取了6676MB的缓存,约合3340.18 MB/sec;<br>在3.11秒中读取了218MB磁盘(物理读),读取速度约合70.11 MB/sec</p><h1 id="dd命令"><a href="#dd命令" class="headerlink" title="dd命令"></a>dd命令</h1><p>这不是一个专业的测试工具，不过如果对于测试结果的要求不是很苛刻的话,平时可以使用来对磁盘的读写速度作一个简单的评估.<br>另外由于这是一个免费软件,基本上×NIX系统上都有安装,对于Oracle裸设备的复制迁移,dd工具一般都是首选.</p><h2 id="首先了解两个特殊设备"><a href="#首先了解两个特殊设备" class="headerlink" title="首先了解两个特殊设备"></a>首先了解两个特殊设备</h2><p><code>/dev/null</code> 伪设备，回收站.写该文件不会产生IO<br><code>/dev/zero</code> 伪设备，会产生空字符流，对它不会产生IO</p><h2 id="测试方法"><a href="#测试方法" class="headerlink" title="测试方法"></a>测试方法</h2><h3 id="测试磁盘的IO写速度"><a href="#测试磁盘的IO写速度" class="headerlink" title="测试磁盘的IO写速度"></a>测试磁盘的IO写速度</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">time</span> <span class="token function">dd</span> if<span class="token operator">=</span>/dev/zero of<span class="token operator">=</span>test.dbf bs<span class="token operator">=</span>8k count<span class="token operator">=</span>300000<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果要测试实际速度 还要在末尾加上 oflag=direct测到的才是真实的IO速度</p><h3 id="测试磁盘的IO读速度"><a href="#测试磁盘的IO读速度" class="headerlink" title="测试磁盘的IO读速度"></a>测试磁盘的IO读速度</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">dd</span> if<span class="token operator">=</span>test.dbf bs<span class="token operator">=</span>8k count<span class="token operator">=</span>300000 of<span class="token operator">=</span>/dev/null<span class="token comment" spellcheck="true">#表示 每次写入/读取8k的数据，执行300000次</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>dd命令可以通用，但不够专业，也没有考虑到缓存和物理读的区分，测试的数据也是仅作参考，不能算是权威。</p></blockquote><h2 id="dd命令解释"><a href="#dd命令解释" class="headerlink" title="dd命令解释"></a>dd命令解释</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">dd</span> if<span class="token operator">=</span> of<span class="token operator">=</span> bs<span class="token operator">=</span> skip<span class="token operator">=</span> seek<span class="token operator">=</span> conv<span class="token operator">=</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>一定不要搞混 <strong><em>source</em></strong> 和 <strong><em>target</em></strong>，不然数据会丢失。所以 dd 平时用着顺手就叫它 dd，但是不小心把数据弄没了就该哭着叫它 Data Destroyer 了。</p><a id="more"></a><h3 id="一般它的常用参数有"><a href="#一般它的常用参数有" class="headerlink" title="一般它的常用参数有"></a>一般它的常用参数有</h3><ul><li>bs=n，block size，每次读取 n bytes 写入，可与 count 联用；</li><li>ibs=n，一次读入 bytes 个字节 (default is 512)；</li><li>obs=n，一次性写 n bytes 个字节 (default is 512)；</li><li>bs 可以同时设置上边两个参数；</li><li>cbs=n，一次转换 n 个 bytes，即转换缓冲区大小。；</li><li>count=n， bs 操作的次数，仅拷贝 n 个块，如 dvd: bs=1M count=4430；</li><li>skip=n，指 if 后面的原文件跳过 n bytes 再开始读取；</li><li>seek=n，指 of 后面的目标文件跳过 n bytes 再开始写入；</li></ul><h3 id="测试IO同时读和写的速度"><a href="#测试IO同时读和写的速度" class="headerlink" title="测试IO同时读和写的速度"></a>测试IO同时读和写的速度</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># time dd if=/dev/sda1 of=test.dbf bs=8k</span>13048+1 records <span class="token keyword">in</span>13048+1 records out3.73s real 0.04s user 2.39s system<span class="token comment" spellcheck="true"># du -sm test.dbf</span>500 test.dbf     （同事测试读写速度时生成一个大小500M的 test.dbf文件）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>上面测试的数据量比较小，仅作为参考.</p></blockquote><h1 id="相比两种方法"><a href="#相比两种方法" class="headerlink" title="相比两种方法"></a>相比两种方法</h1><p>前者是linux上专业的测试IDE/ATA磁盘的工具,但是使用范围有局限性;(此试验仅仅使用了测试磁盘IO的参数,对于其他参数及解释参考man手册)<br>后者可以通用,但不够专业,也没有考虑到缓存和物理读的区分，测试的数据也是仅作参考，不能算是权威.</p><p>如果用dd测试，需要加oflag＝direct，测到的才是真实的磁盘io</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://www.jifu.io/images/2/20190902210133.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;hdparm命令&quot;&gt;&lt;a href=&quot;#hdparm命令&quot; class=&quot;headerlink&quot; title=&quot;hdparm命令&quot;&gt;&lt;/a&gt;hdparm命令&lt;/h1&gt;&lt;p&gt;这是一个是用来获取ATA/IDE硬盘的参数的命令,是由早期Linux IDE驱动的开发和维护人员 Mark Lord开发编写的( hdparm has been written by Mark Lord &lt;a href=&quot;mailto:&amp;#x6d;&amp;#x6c;&amp;#111;&amp;#x72;&amp;#100;&amp;#x40;&amp;#x70;&amp;#x6f;&amp;#x62;&amp;#x6f;&amp;#x78;&amp;#x2e;&amp;#99;&amp;#x6f;&amp;#x6d;&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&amp;#x6d;&amp;#x6c;&amp;#111;&amp;#x72;&amp;#100;&amp;#x40;&amp;#x70;&amp;#x6f;&amp;#x62;&amp;#x6f;&amp;#x78;&amp;#x2e;&amp;#99;&amp;#x6f;&amp;#x6d;&lt;/a&gt;, the primary developer and maintainer of the (E)IDE driver for Linux, with suggestions from many netfolk).该命令应该也是仅用于Linux系统,对于UNIX系统，ATA/IDE硬盘用的可能比较少，一般大型的系统都是使用磁盘阵列的.&lt;/p&gt;
&lt;h2 id=&quot;使用方法&quot;&gt;&lt;a href=&quot;#使用方法&quot; class=&quot;headerlink&quot; title=&quot;使用方法&quot;&gt;&lt;/a&gt;使用方法&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;# hdparm -Tt /dev/sda

/dev/sda:
Timing cached reads: 6676 MB in 2.00 seconds = 3340.18 MB/sec
Timing buffered disk reads: 218 MB in 3.11 seconds = 70.11 MB/sec
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以看到,2秒钟读取了6676MB的缓存,约合3340.18 MB/sec;&lt;br&gt;在3.11秒中读取了218MB磁盘(物理读),读取速度约合70.11 MB/sec&lt;/p&gt;
&lt;h1 id=&quot;dd命令&quot;&gt;&lt;a href=&quot;#dd命令&quot; class=&quot;headerlink&quot; title=&quot;dd命令&quot;&gt;&lt;/a&gt;dd命令&lt;/h1&gt;&lt;p&gt;这不是一个专业的测试工具，不过如果对于测试结果的要求不是很苛刻的话,平时可以使用来对磁盘的读写速度作一个简单的评估.&lt;br&gt;另外由于这是一个免费软件,基本上×NIX系统上都有安装,对于Oracle裸设备的复制迁移,dd工具一般都是首选.&lt;/p&gt;
&lt;h2 id=&quot;首先了解两个特殊设备&quot;&gt;&lt;a href=&quot;#首先了解两个特殊设备&quot; class=&quot;headerlink&quot; title=&quot;首先了解两个特殊设备&quot;&gt;&lt;/a&gt;首先了解两个特殊设备&lt;/h2&gt;&lt;p&gt;&lt;code&gt;/dev/null&lt;/code&gt; 伪设备，回收站.写该文件不会产生IO&lt;br&gt;&lt;code&gt;/dev/zero&lt;/code&gt; 伪设备，会产生空字符流，对它不会产生IO&lt;/p&gt;
&lt;h2 id=&quot;测试方法&quot;&gt;&lt;a href=&quot;#测试方法&quot; class=&quot;headerlink&quot; title=&quot;测试方法&quot;&gt;&lt;/a&gt;测试方法&lt;/h2&gt;&lt;h3 id=&quot;测试磁盘的IO写速度&quot;&gt;&lt;a href=&quot;#测试磁盘的IO写速度&quot; class=&quot;headerlink&quot; title=&quot;测试磁盘的IO写速度&quot;&gt;&lt;/a&gt;测试磁盘的IO写速度&lt;/h3&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;time dd if=/dev/zero of=test.dbf bs=8k count=300000
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果要测试实际速度 还要在末尾加上 oflag=direct测到的才是真实的IO速度&lt;/p&gt;
&lt;h3 id=&quot;测试磁盘的IO读速度&quot;&gt;&lt;a href=&quot;#测试磁盘的IO读速度&quot; class=&quot;headerlink&quot; title=&quot;测试磁盘的IO读速度&quot;&gt;&lt;/a&gt;测试磁盘的IO读速度&lt;/h3&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;dd if=test.dbf bs=8k count=300000 of=/dev/null
#表示 每次写入/读取8k的数据，执行300000次
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;dd命令可以通用，但不够专业，也没有考虑到缓存和物理读的区分，测试的数据也是仅作参考，不能算是权威。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;dd命令解释&quot;&gt;&lt;a href=&quot;#dd命令解释&quot; class=&quot;headerlink&quot; title=&quot;dd命令解释&quot;&gt;&lt;/a&gt;dd命令解释&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;dd if= of= bs= skip= seek= conv=
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;一定不要搞混 &lt;strong&gt;&lt;em&gt;source&lt;/em&gt;&lt;/strong&gt; 和 &lt;strong&gt;&lt;em&gt;target&lt;/em&gt;&lt;/strong&gt;，不然数据会丢失。所以 dd 平时用着顺手就叫它 dd，但是不小心把数据弄没了就该哭着叫它 Data Destroyer 了。&lt;/p&gt;
    
    </summary>
    
      <category term="OPS" scheme="http://www.jifu.io/categories/OPS/"/>
    
      <category term="Others" scheme="http://www.jifu.io/categories/OPS/Others/"/>
    
    
      <category term="Linux" scheme="http://www.jifu.io/tags/Linux/"/>
    
      <category term="IO速度" scheme="http://www.jifu.io/tags/IO%E9%80%9F%E5%BA%A6/"/>
    
      <category term="磁盘读写" scheme="http://www.jifu.io/tags/%E7%A3%81%E7%9B%98%E8%AF%BB%E5%86%99/"/>
    
  </entry>
  
  <entry>
    <title>Mac VSCode 禁用GPU加速</title>
    <link href="http://www.jifu.io/posts/3837318570/"/>
    <id>http://www.jifu.io/posts/3837318570/</id>
    <published>2019-08-22T07:02:56.000Z</published>
    <updated>2020-08-11T05:17:21.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://www.jifu.io/images/2/20190822191007.png" alt=""></p><p>某些老型号mac或者黑苹果使用VSCode时非常卡顿，有可能是GPU加速造成的。<br>原理用新的脚本替换vscode执行程序</p><h1 id="cd到VSCode执行程序所在目录"><a href="#cd到VSCode执行程序所在目录" class="headerlink" title="cd到VSCode执行程序所在目录"></a>cd到VSCode执行程序所在目录</h1><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">cd</span> /Applications/Visual\ Studio\ Code.app/Contents/MacOS/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="将Electron-VSCode可以行程序-重名了为Electron-real"><a href="#将Electron-VSCode可以行程序-重名了为Electron-real" class="headerlink" title="将Electron(VSCode可以行程序)重名了为Electron.real"></a>将Electron(VSCode可以行程序)重名了为Electron.real</h1><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">mv</span> Electron Electron.real<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="在该目录新建一个文件名为Electron文本文件（没有后缀），并将下面的内容粘贴到文件里"><a href="#在该目录新建一个文件名为Electron文本文件（没有后缀），并将下面的内容粘贴到文件里" class="headerlink" title="在该目录新建一个文件名为Electron文本文件（没有后缀），并将下面的内容粘贴到文件里"></a>在该目录新建一个文件名为Electron文本文件（没有后缀），并将下面的内容粘贴到文件里</h1><pre class="line-numbers language-bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token function">cd</span> <span class="token string">"/Applications/Visual Studio Code.app/Contents/MacOS"</span><span class="token string">"/Applications/Visual Studio Code.app/Contents/MacOS/Electron.real"</span> --disable-gpu<span class="token string">"<span class="token variable">$@</span>"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="为Electron添加执行权限"><a href="#为Electron添加执行权限" class="headerlink" title="为Electron添加执行权限"></a>为Electron添加执行权限</h1><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">chmod</span> -R a+x Electron<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="大功告成，现在直接打开vscode已经是禁用gpu了"><a href="#大功告成，现在直接打开vscode已经是禁用gpu了" class="headerlink" title="大功告成，现在直接打开vscode已经是禁用gpu了"></a>大功告成，现在直接打开vscode已经是禁用gpu了</h1><p>//可已经将自己创建的Electron文件备份到其他目录<br>//vscode升级后只需要执行第二部将Electron(VSCode可以行程序)重名了为Electron.real<br>//然后在把备份的Electron复制到该目录即可</p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://www.jifu.io/images/2/20190822191007.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;某些老型号mac或者黑苹果使用VSCode时非常卡顿，有可能是GPU加速造成的。&lt;br&gt;原理用新的脚本替换vscode执行程序&lt;/p&gt;
&lt;h1 id=&quot;cd到VSCode执行程序所在目录&quot;&gt;&lt;a href=&quot;#cd到VSCode执行程序所在目录&quot; class=&quot;headerlink&quot; title=&quot;cd到VSCode执行程序所在目录&quot;&gt;&lt;/a&gt;cd到VSCode执行程序所在目录&lt;/h1&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;cd /Applications/Visual\ Studio\ Code.app/Contents/MacOS/
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&quot;将Electron-VSCode可以行程序-重名了为Electron-real&quot;&gt;&lt;a href=&quot;#将Electron-VSCode可以行程序-重名了为Electron-real&quot; class=&quot;headerlink&quot; title=&quot;将Electron(VSCode可以行程序)重名了为Electron.real&quot;&gt;&lt;/a&gt;将Electron(VSCode可以行程序)重名了为Electron.real&lt;/h1&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;mv Electron Electron.real
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&quot;在该目录新建一个文件名为Electron文本文件（没有后缀），并将下面的内容粘贴到文件里&quot;&gt;&lt;a href=&quot;#在该目录新建一个文件名为Electron文本文件（没有后缀），并将下面的内容粘贴到文件里&quot; class=&quot;headerlink&quot; title=&quot;在该目录新建一个文件名为Electron文本文件（没有后缀），并将下面的内容粘贴到文件里&quot;&gt;&lt;/a&gt;在该目录新建一个文件名为Electron文本文件（没有后缀），并将下面的内容粘贴到文件里&lt;/h1&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;#!/bin/bash
cd &amp;quot;/Applications/Visual Studio Code.app/Contents/MacOS&amp;quot;
&amp;quot;/Applications/Visual Studio Code.app/Contents/MacOS/Electron.real&amp;quot; --disable-gpu

&amp;quot;$@&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&quot;为Electron添加执行权限&quot;&gt;&lt;a href=&quot;#为Electron添加执行权限&quot; class=&quot;headerlink&quot; title=&quot;为Electron添加执行权限&quot;&gt;&lt;/a&gt;为Electron添加执行权限&lt;/h1&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;chmod -R a+x Electron
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&quot;大功告成，现在直接打开vscode已经是禁用gpu了&quot;&gt;&lt;a href=&quot;#大功告成，现在直接打开vscode已经是禁用gpu了&quot; class=&quot;headerlink&quot; title=&quot;大功告成，现在直接打开vscode已经是禁用gpu了&quot;&gt;&lt;/a&gt;大功告成，现在直接打开vscode已经是禁用gpu了&lt;/h1&gt;&lt;p&gt;//可已经将自己创建的Electron文件备份到其他目录&lt;br&gt;//vscode升级后只需要执行第二部将Electron(VSCode可以行程序)重名了为Electron.real&lt;br&gt;//然后在把备份的Electron复制到该目录即可&lt;/p&gt;
    
    </summary>
    
      <category term="OPS" scheme="http://www.jifu.io/categories/OPS/"/>
    
      <category term="MacOS" scheme="http://www.jifu.io/categories/OPS/MacOS/"/>
    
    
      <category term="Mac OS" scheme="http://www.jifu.io/tags/Mac-OS/"/>
    
      <category term="VSCode" scheme="http://www.jifu.io/tags/VSCode/"/>
    
      <category term="禁用GPU加速" scheme="http://www.jifu.io/tags/%E7%A6%81%E7%94%A8GPU%E5%8A%A0%E9%80%9F/"/>
    
  </entry>
  
  <entry>
    <title>通过编写 chroot 来认识 chroot 发挥的作用和它带来的好处</title>
    <link href="http://www.jifu.io/posts/3241041753/"/>
    <id>http://www.jifu.io/posts/3241041753/</id>
    <published>2019-08-04T13:01:46.000Z</published>
    <updated>2020-08-11T05:17:21.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://www.jifu.io/images/2/20190805011657.png" alt=""></p><h1 id="什么是-chroot"><a href="#什么是-chroot" class="headerlink" title="什么是 chroot"></a>什么是 chroot</h1><p>chroot，即 change root directory (更改 root 目录)。在 linux 系统中，系统默认的目录结构都是以 <code>/</code>，即是以根 (root) 开始的。而在使用 chroot 之后，系统的目录结构将以指定的位置作为 <code>/</code> 位置。</p><p><img src="https://www.jifu.io/images/2/20190805010320.jpg" alt="Linux 系统的目录结构"></p><h1 id="为何使用-chroot"><a href="#为何使用-chroot" class="headerlink" title="为何使用 chroot"></a>为何使用 chroot</h1><p>在经过 chroot 之后，系统读取到的目录和文件将不在是旧系统根下的而是新根下(即被指定的新的位置)的目录结构和文件，因此它带来的好处大致有以下3个：</p><ol><li><p>增加了系统的安全性，限制了用户的权力；</p><p> 在经过 chroot 之后，在新根下将访问不到旧系统的根目录结构和文件，这样就增强了系统的安全性。这个一般是在登录 (login) 前使用 chroot，以此达到用户不能访问一些特定的文件。</p></li><li><p>建立一个与原系统隔离的系统目录结构，方便用户的开发；</p><p> 使用 chroot 后，系统读取的是新根下的目录和文件，这是一个与原系统根下文件不相关的目录结构。在这个新的环境中，可以用来测试软件的静态编译以及一些与系统不相关的独立开发。</p></li><li><p>切换系统的根目录位置，引导 Linux 系统启动以及急救系统等。<br> chroot 的作用就是切换系统的根位置，而这个作用最为明显的是在系统初始引导磁盘的处理过程中使用，从初始 RAM 磁盘 (initrd) 切换系统的根位置并执行真正的 init。另外，当系统出现一些问题时，我们也可以使用 chroot 来切换到一个临时的系统。</p></li></ol><a id="more"></a><h1 id="chroot-的使用"><a href="#chroot-的使用" class="headerlink" title="chroot 的使用"></a>chroot 的使用</h1><p>为了更好的理解 chroot 发挥的作用，我们将尝试指定一个特定的位置进行根目录切换。但是由于在经过 chroot 之后，系统读取到的 bin/ 等与系统相关目录将不再是旧系统根目录下的，而是切换后新根下的目录结构和文件，因此我们有必要准备一些目录结构以及必要的文件。</p><h2 id="清单-1-准备切换的目录结构"><a href="#清单-1-准备切换的目录结构" class="headerlink" title="清单 1. 准备切换的目录结构"></a>清单 1. 准备切换的目录结构</h2><blockquote><p>Busybox 被称为是嵌入式 Linux 中的瑞士军刀。Busybox 包含了许多有用的命令，如 cat、find 等，但是它的体积却非常的小。</p></blockquote><pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">pwd</span>/home/wstone/Build/work$ tree <span class="token keyword">.</span><span class="token keyword">.</span><span class="token operator">|</span>-- bin<span class="token operator">|</span> <span class="token operator">|</span>-- ash -<span class="token operator">></span> busybox<span class="token operator">|</span> <span class="token operator">|</span>-- <span class="token function">bash</span><span class="token operator">|</span> <span class="token variable"><span class="token variable">`</span>-- busybox<span class="token operator">|</span>-- etc<span class="token variable">`</span></span>-- newhome<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里使用了静态编译后的 busybox 来提供必要的命令，使用静态编译仅是为了避免动态库文件的拷贝。当然我们也可以拷贝旧系统的下的命令到新的目录结构中使用，但是那些命令通常是动态编译的，这就意味着我们不得不拷贝相关的动态库文件到相应的目录结构中。同时这里的 bash 也非真正的 Bourne Again shell，而是一个执行 ash 的 shell 脚本。在清单 2中，展示了位于旧系统中的 chroot 命令的使用。需要注意的是在使用 chroot 时，要求拥有相关的操作权限。</p><h2 id="清单-2-位于系统中的-chroot-的使用"><a href="#清单-2-位于系统中的-chroot-的使用" class="headerlink" title="清单 2. 位于系统中的 chroot 的使用"></a>清单 2. 位于系统中的 chroot 的使用</h2><pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">pwd</span>/home/wstone/Build/work<span class="token comment" spellcheck="true"># chroot .</span><span class="token comment" spellcheck="true"># pwd</span>/<span class="token comment" spellcheck="true"># ls</span>ash: ls: not found<span class="token comment" spellcheck="true"># busybox ls</span>bin      etc      newhome3 directories, 3 files<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们可以看到当前路径(/home/wstone/Build/work/)，在经过 chroot 后转变成了 <code>/</code> 目录，同时从新根下读取了与系统相关的目录结构。使用 ls 命令失败是由于我们创建的测试目录结构中并没有包含命令 ls，但是我们成功的使用了 busybox 中的 ls。以上看到的只是 chroot 的一种使用方式，其实标准的 chroot (Coreutils - GNU core utilities 提供的 chroot)使用方式有2种：</p><h2 id="清单-3-标准-chroot-的2种使用方式"><a href="#清单-3-标准-chroot-的2种使用方式" class="headerlink" title="清单 3. 标准 chroot 的2种使用方式"></a>清单 3. 标准 chroot 的2种使用方式</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>1<span class="token punctuation">]</span> <span class="token function">chroot</span> NEWROOT <span class="token punctuation">[</span>COMMAND<span class="token punctuation">..</span>.<span class="token punctuation">]</span><span class="token punctuation">[</span>2<span class="token punctuation">]</span> <span class="token function">chroot</span> OPTION<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>刚才我们使用的是方式[2]。这将在没有给定环境时，默认执行 <code>/bin/sh</code>，但是当给定环境后，将运行 <code>${SHELL} –i</code>，即与环境相同的可交互的 shell。我们的目录结构中并没有包含sh，显然清单 2中的 chroot 运行了 <code>${SHELL} –i</code>。当然我们也可以在进行切换时指定需要的命令，即使用方式[1]。</p><h2 id="清单-4-chroot-另一种方式的使用"><a href="#清单-4-chroot-另一种方式的使用" class="headerlink" title="清单 4. chroot 另一种方式的使用"></a>清单 4. chroot 另一种方式的使用</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># chroot . /bin/ash</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在清单 4 中，尝试了在经过 chroot 后，执行新目录结构下的 ash shell。不得不说的是，如果新根下的目录结构和文件准备的够充分，那么一个新的简单的 Linux 系统就可以使用了。其实更为常见的是在初始 RAM 磁盘 (initrd)中使用 chroot，以此来执行系统的 init。清单 5 中，展示的是在 Linux 2.4 内核 initrd 中使用 chroot。</p><h2 id="清单-5-在-Linux-2-4-内核-initrd-中使用-chroot-的示例"><a href="#清单-5-在-Linux-2-4-内核-initrd-中使用-chroot-的示例" class="headerlink" title="清单 5. 在 Linux 2.4 内核 initrd 中使用 chroot 的示例"></a>清单 5. 在 Linux 2.4 内核 initrd 中使用 chroot 的示例</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">mount</span> /dev/hda1 /new-root<span class="token function">cd</span> /new-rootpivot_root <span class="token keyword">.</span> old-root<span class="token function">exec</span> <span class="token function">chroot</span> <span class="token keyword">.</span> /sbin/init <span class="token operator">&lt;</span>dev/console <span class="token operator">></span>dev/console 2<span class="token operator">></span><span class="token operator">&amp;</span>1<span class="token function">umount</span> /old-root<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>由于 Linux 内核的升级，initrd 处理机制和格式发生了变化，在 Linux 2.6 内核 initrd 中不能再使用 pivot_root，因此一般也不再使用 chroot，而是选择使用 busybox 提供的 switch_root 或者 klibc 提供的 run-init 进行根目录的切换。(这并不是说不能在 Linux 2.6内核 initrd 中使用 chroot，选择 switch_root 或 run-init 仅是出于习惯和方便的考虑。)但是实质上，它们仅是将 chroot 的功能进行了封装，以此更加方便简单的切换根目录。</p><h2 id="清单-6-在-Linux-2-6-内核-initrd-中-chroot-的使用"><a href="#清单-6-在-Linux-2-6-内核-initrd-中-chroot-的使用" class="headerlink" title="清单 6. 在 Linux 2.6 内核 initrd 中 chroot 的使用"></a>清单 6. 在 Linux 2.6 内核 initrd 中 chroot 的使用</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>1<span class="token punctuation">]</span> <span class="token function">find</span> -xdev / -exec <span class="token function">rm</span> <span class="token string">'{}'</span> '<span class="token punctuation">;</span><span class="token punctuation">[</span>2<span class="token punctuation">]</span> <span class="token function">cd</span> /newmount<span class="token punctuation">;</span> <span class="token function">mount</span> --move <span class="token keyword">.</span> /<span class="token punctuation">;</span> <span class="token function">chroot</span> <span class="token keyword">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>switch_root 和 run-init 完成了类似清单 6中的功能，删除 rootfs 的全部内容以释放空间，以及挂载新的根文件系统并进行切换。在 busybox 和 klibc中也有提供 chroot 命令，只是功能上与 Coreutils (GNU core utilities) 包含的 chroot 有稍许差异。<br>编写一个 chroot</p><p>上面介绍了 chroot 及其使用，但是编写一个简单的 chroot 并不复杂，下面我们就尝试编写chroot 以此来更好的认识 chroot 的处理过程，先编写一个粗略的 chroot 然后再完善它的功能。chroot 的编写涉及了2个函数，chroot() 以及 chdir()，它们都包含在 unistd.h 头文件中。</p><h2 id="清单-7-编写-chroot-涉及的2个函数"><a href="#清单-7-编写-chroot-涉及的2个函数" class="headerlink" title="清单 7. 编写 chroot 涉及的2个函数"></a>清单 7. 编写 chroot 涉及的2个函数</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#include &lt;unistd.h></span>int chroot<span class="token punctuation">(</span>const char *path<span class="token punctuation">)</span><span class="token punctuation">;</span>int chdir<span class="token punctuation">(</span>const char *path<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>chroot() 将切换参数 path 所指位置为根目录 (/)，chdir() 用来将当前的工作目录改变成以参数path 所指的目录。以此我们可以编写一个非常粗略的 <code>chroot</code>。</p><h2 id="清单-8-粗略的-chroot"><a href="#清单-8-粗略的-chroot" class="headerlink" title="清单 8. 粗略的 chroot"></a>清单 8. 粗略的 <code>chroot</code></h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#include &lt;unistd.h></span>int main<span class="token punctuation">(</span>int argc, char *argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    chroot<span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    chdir<span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    char *arrays<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">"ash"</span>,NULL<span class="token punctuation">}</span><span class="token punctuation">;</span>    execvp<span class="token punctuation">(</span><span class="token string">"ash"</span>, arrays<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> 0<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这个粗略的 <code>chroot</code> 仅能切换当前位置为根目录，同时默认执行 ash shell，不包含任何的错误处理及警告。编写并保存代码为 test.c。在清单 9 中，展示了这个粗略 <code>chroot</code> 的使用情况，成功的进行了根目录的切换。</p><h2 id="清单-9-粗略-chroot-的使用"><a href="#清单-9-粗略-chroot-的使用" class="headerlink" title="清单 9. 粗略 chroot 的使用"></a>清单 9. 粗略 <code>chroot</code> 的使用</h2><pre class="line-numbers language-bash"><code class="language-bash">$ gcc -Wall test.c -o <span class="token function">test</span><span class="token comment" spellcheck="true"># ./test</span><span class="token comment" spellcheck="true"># ls</span>ash: ls: not found<span class="token comment" spellcheck="true"># busybox ls</span>bin      etc      newhome  <span class="token function">test</span>     test.c<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>下面给出功能将近完整的 chroot ，加上了一些错误处理并新增了可执行指定命令的功能。当在没有给出 chroot 切换后要执行的命令时，默认执行 <code>/bin/sh</code>，同时检测环境以确认使用何种 shell。</p><h2 id="清单-10-功能完整的-chroot"><a href="#清单-10-功能完整的-chroot" class="headerlink" title="清单 10. 功能完整的 chroot"></a>清单 10. 功能完整的 chroot</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#include &lt;stdio.h></span><span class="token comment" spellcheck="true">#include &lt;unistd.h></span><span class="token comment" spellcheck="true">#include &lt;stdlib.h></span>int main<span class="token punctuation">(</span>int argc, char *argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    if<span class="token punctuation">(</span>argc<span class="token operator">&lt;</span>2<span class="token punctuation">)</span><span class="token punctuation">{</span>        printf<span class="token punctuation">(</span><span class="token string">"Usage: chroot NEWROOT [COMMAND...] \n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> 1<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    printf<span class="token punctuation">(</span><span class="token string">"newroot = %s\n"</span>, argv<span class="token punctuation">[</span>1<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    if<span class="token punctuation">(</span>chroot<span class="token punctuation">(</span>argv<span class="token punctuation">[</span>1<span class="token punctuation">]</span><span class="token punctuation">))</span> <span class="token punctuation">{</span>        perror<span class="token punctuation">(</span><span class="token string">"chroot"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> 1<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    if<span class="token punctuation">(</span>chdir<span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">))</span> <span class="token punctuation">{</span>        perror<span class="token punctuation">(</span><span class="token string">"chdir"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> 1<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    if<span class="token punctuation">(</span>argc <span class="token operator">==</span> 2<span class="token punctuation">)</span> <span class="token punctuation">{</span>        argv<span class="token punctuation">[</span>0<span class="token punctuation">]</span> <span class="token operator">=</span> getenv<span class="token punctuation">(</span><span class="token string">"SHELL"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        if<span class="token punctuation">(</span><span class="token operator">!</span>argv<span class="token punctuation">[</span>0<span class="token punctuation">]</span><span class="token punctuation">)</span>            argv<span class="token punctuation">[</span>0<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>char *<span class="token punctuation">)</span><span class="token string">"/bin/sh"</span><span class="token punctuation">;</span>        argv<span class="token punctuation">[</span>1<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>char *<span class="token punctuation">)</span> <span class="token string">"-i"</span><span class="token punctuation">;</span>        argv<span class="token punctuation">[</span>2<span class="token punctuation">]</span> <span class="token operator">=</span> NULL<span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        argv +<span class="token operator">=</span> 2<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    execvp <span class="token punctuation">(</span>argv<span class="token punctuation">[</span>0<span class="token punctuation">]</span>, argv<span class="token punctuation">)</span><span class="token punctuation">;</span>    printf<span class="token punctuation">(</span><span class="token string">"chroot: cannot run command <span class="token variable"><span class="token variable">`</span>%s<span class="token variable">`</span></span>\n"</span>, *argv<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> 0<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>保存以上代码为 newchroot.c 文件，编译后运行测试其功能。最后要指出的是，本文中的 <code>chroot</code> 并没有使用静态编译。如果有必要(如，在 initrd 中使用 chroot)，chroot 应该使用静态编译，若是使用动态编译，那么要拷贝相关的动态库文件到相应目录结构中。</p><h2 id="清单-11-newchroot-的测试"><a href="#清单-11-newchroot-的测试" class="headerlink" title="清单 11. newchroot 的测试"></a>清单 11. <code>newchroot</code> 的测试</h2><pre class="line-numbers language-bash"><code class="language-bash">$ gcc -Wall newchroot.c -o newchroot<span class="token comment" spellcheck="true"># ./newchroot . /bin/ash</span>newroot <span class="token operator">=</span> <span class="token keyword">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h1><p>在 Linux 系统初始引导的过程中，通常都有使用 chroot。但是 chroot 的好处不仅于此，它还增加了系统的安全性等。而通过本文后半部分对 chroot 的认识，我相信读者可以更好的发挥chroot 的作用。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://www.jifu.io/images/2/20190805011657.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;什么是-chroot&quot;&gt;&lt;a href=&quot;#什么是-chroot&quot; class=&quot;headerlink&quot; title=&quot;什么是 chroot&quot;&gt;&lt;/a&gt;什么是 chroot&lt;/h1&gt;&lt;p&gt;chroot，即 change root directory (更改 root 目录)。在 linux 系统中，系统默认的目录结构都是以 &lt;code&gt;/&lt;/code&gt;，即是以根 (root) 开始的。而在使用 chroot 之后，系统的目录结构将以指定的位置作为 &lt;code&gt;/&lt;/code&gt; 位置。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.jifu.io/images/2/20190805010320.jpg&quot; alt=&quot;Linux 系统的目录结构&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;为何使用-chroot&quot;&gt;&lt;a href=&quot;#为何使用-chroot&quot; class=&quot;headerlink&quot; title=&quot;为何使用 chroot&quot;&gt;&lt;/a&gt;为何使用 chroot&lt;/h1&gt;&lt;p&gt;在经过 chroot 之后，系统读取到的目录和文件将不在是旧系统根下的而是新根下(即被指定的新的位置)的目录结构和文件，因此它带来的好处大致有以下3个：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;增加了系统的安全性，限制了用户的权力；&lt;/p&gt;
&lt;p&gt; 在经过 chroot 之后，在新根下将访问不到旧系统的根目录结构和文件，这样就增强了系统的安全性。这个一般是在登录 (login) 前使用 chroot，以此达到用户不能访问一些特定的文件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;建立一个与原系统隔离的系统目录结构，方便用户的开发；&lt;/p&gt;
&lt;p&gt; 使用 chroot 后，系统读取的是新根下的目录和文件，这是一个与原系统根下文件不相关的目录结构。在这个新的环境中，可以用来测试软件的静态编译以及一些与系统不相关的独立开发。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;切换系统的根目录位置，引导 Linux 系统启动以及急救系统等。&lt;br&gt; chroot 的作用就是切换系统的根位置，而这个作用最为明显的是在系统初始引导磁盘的处理过程中使用，从初始 RAM 磁盘 (initrd) 切换系统的根位置并执行真正的 init。另外，当系统出现一些问题时，我们也可以使用 chroot 来切换到一个临时的系统。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="OPS" scheme="http://www.jifu.io/categories/OPS/"/>
    
      <category term="command" scheme="http://www.jifu.io/categories/OPS/command/"/>
    
    
      <category term="chroot" scheme="http://www.jifu.io/tags/chroot/"/>
    
  </entry>
  
  <entry>
    <title>MySQL 调优/优化的 101 个建议</title>
    <link href="http://www.jifu.io/posts/4284065059/"/>
    <id>http://www.jifu.io/posts/4284065059/</id>
    <published>2019-07-19T08:37:26.000Z</published>
    <updated>2020-08-11T05:17:21.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://www.jifu.io/images/2/20190719204248.png" alt=""></p><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>MySQL是一个强大的开源数据库。随着MySQL上的应用越来越多，MySQL逐渐遇到了瓶颈。这里提供 101 条优化 MySQL 的建议。有些技巧适合特定的安装环境，但是思路是相通的。我已经将它们分成了几类以帮助你理解。</p><h1 id="Mysql-监控"><a href="#Mysql-监控" class="headerlink" title="Mysql 监控"></a>Mysql 监控</h1><h2 id="MySQL服务器硬件和OS（操作系统）调优"><a href="#MySQL服务器硬件和OS（操作系统）调优" class="headerlink" title="MySQL服务器硬件和OS（操作系统）调优"></a>MySQL服务器硬件和OS（操作系统）调优</h2><ol><li><p>有足够的物理内存，能将整个InnoDB文件加载到内存里 —— 如果访问的文件在内存里，而不是在磁盘上，InnoDB会快很多。</p></li><li><p>全力避免 Swap 操作 — 交换（swapping）是从磁盘读取数据，所以会很慢。</p></li><li><p>使用电池供电的RAM（Battery-Backed RAM）。</p></li><li><p>使用一个高级磁盘阵列 — 最好是 RAID10 或者更高。</p></li><li><p>避免使用RAID5 — 和校验需要确保完整性，开销很高。</p></li><li><p>将你的操作系统和数据分开，不仅仅是逻辑上要分开，物理上也要分开 — 操作系统的读写开销会影响数据库的性能。</p></li><li><p>将临时文件和复制日志与数据文件分开 — 后台的写操作影响数据库从磁盘文件的读写操作。</p></li><li><p>更多的磁盘空间等于更高的速度。</p></li><li><p>磁盘速度越快越好。</p></li><li><p>SAS优于SATA。</p></li><li><p>小磁盘的速度比大磁盘的更快，尤其是在 RAID 中。</p></li><li><p>使用电池供电的缓存 RAID（Battery-Backed Cache RAID）控制器。</p></li><li><p>避免使用软磁盘阵列。</p></li><li><p>考虑使用固态IO卡（不是磁盘）来作为数据分区 — 几乎对所有量级数据，这种卡能够支持 2 GBps 的写操作。</p></li><li><p>在 Linux 系统上，设置 swappiness 的值为0 — 没有理由在数据库服务器上缓存文件，这种方式在Web服务器或桌面应用中用的更多。</p></li><li><p>尽可能使用 noatime 和 nodirtime 来挂载文件系统 — 没有必要为每次访问来更新文件的修改时间。</p></li><li><p>使用 XFS 文件系统 — 一个比ext3更快的. 更小的文件系统，拥有更多的日志选项，同时，MySQL在ext3上存在双缓冲区的问题。</p></li><li><p>优化你的 XFS 文件系统日志和缓冲区参数 – -为了获取最大的性能基准。</p></li><li><p>在Linux系统中，使用 NOOP 或 DEADLINE IO 调度器 — CFQ 和 ANTICIPATORY 调度器已经被证明比 NOOP 和 DEADLINE 慢。</p></li><li><p>使用 64 位操作系统 — 有更多的内存能用于寻址和 MySQL 使用。</p></li><li><p>将不用的包和后台程序从服务器上删除 — 减少资源占用。</p></li><li><p>将使用 MySQL 的 host 和 MySQL自身的 host 都配置在一个 host 文件中 — 这样没有 DNS 查找。</p></li><li><p>永远不要强制杀死一个MySQL进程 — 你将损坏数据库，并运行备份。</p></li><li><p>让你的服务器只服务于MySQL — 后台处理程序和其他服务会占用数据库的 CPU 时间。</p></li></ol><a id="more"></a><h1 id="Mysql-配置"><a href="#Mysql-配置" class="headerlink" title="Mysql 配置"></a>Mysql 配置</h1><ol><li><p>使用 innodb_flush_method=O_DIRECT 来避免写的时候出现双缓冲区。</p></li><li><p>避免使用 O_DIRECT 和 EXT3 文件系统 — 这会把所有写入的东西序列化。</p></li><li><p>分配足够 innodb_buffer_pool_size ，来将整个InnoDB 文件加载到内存 — 减少从磁盘上读。</p></li><li><p>不要让 innodb_log_file_size 太大，这样能够更快，也有更多的磁盘空间 — 经常刷新有利降低发生故障时的恢复时间。</p></li><li><p>不要同时使用 innodb_thread_concurrency 和 thread_concurrency 变量 — 这两个值不能兼容。</p></li><li><p>为 max_connections 指定一个小的值 — 太多的连接将耗尽你的RAM，导致整个MySQL服务器被锁定。</p></li><li><p>保持 thread_cache 在一个相对较高的数值，大约是 16 — 防止打开连接时候速度下降。</p></li><li><p>使用 skip-name-resolve — 移除 DNS 查找。</p></li><li><p>如果你的查询重复率比较高，并且你的数据不是经常改变，请使用查询缓存 — 但是，在经常改变的数据上使用查询缓存会对性能有负面影响。</p></li><li><p>增加 temp_table_size — 防止磁盘写。</p></li><li><p>增加 max_heap_table_size — 防止磁盘写。</p></li><li><p>不要将 sort_buffer_size 的值设置的太高 — 可能导致连接很快耗尽所有内存。</p></li><li><p>监控 key_read_requests 和 key_reads，以便确定 key_buffer 的值 — key 的读需求应该比 key_reads 的值更高，否则使用 key_buffer 就没有效率了。</p></li><li><p>设置 innodb_flush_log_at_trx_commit = 0 可以提高性能，但是保持默认值（1）的话，能保证数据的完整性，也能保证复制不会滞后。</p></li><li><p>有一个测试环境，便于测试你的配置，可以经常重启，不会影响生产环境。</p></li></ol><h1 id="Mysql-Schema优化"><a href="#Mysql-Schema优化" class="headerlink" title="Mysql Schema优化"></a>Mysql Schema优化</h1><ol><li><p>保证你的数据库的整洁性。</p></li><li><p>归档老数据 — 删除查询中检索或返回的多余的行</p></li><li><p>在数据上加上索引。</p></li><li><p>不要过度使用索引，评估你的查询。</p></li><li><p>压缩 text 和 blob 数据类型 — 为了节省空间，减少从磁盘读数据。</p></li><li><p>UTF 8 和 UTF16 比 latin1 慢。</p></li><li><p>有节制的使用触发器。</p></li><li><p>保持数据最小量的冗余 — 不要复制没必要的数据.</p></li><li><p>使用链接表，而不是扩展行。</p></li><li><p>注意你的数据类型，尽可能的使用最小的。</p></li><li><p>如果其他数据需要经常需要查询，而 blob/text 不需要，则将 blob/text 数据域其他数据分离。</p></li><li><p>经常检查和优化表。</p></li><li><p>经常做重写 InnoDB 表的优化。</p></li><li><p>有时，增加列时，先删除索引，之后在加上索引会更快。</p></li><li><p>为不同的需求选择不同的存储引擎。</p></li><li><p>日志表或审计表使用ARCHIVE存储引擎 — 写的效率更高。</p></li><li><p>将 session 数据存储在 memcache 中，而不是 MySQL 中 — memcache 可以设置自动过期，防止MySQL对临时数据高成本的读写操作。</p></li><li><p>如果字符串的长度是可变的，则使用VARCHAR代替CHAR — 节约空间，因为CHAR是固定长度，而VARCHAR不是（utf8 不受这个影响）。</p></li><li><p>逐步对 schema 做修改 — 一个小的变化将产生的巨大的影响。</p></li><li><p>在开发环境测试所有 schema 变动，而不是在生产环境的镜像上去做。</p></li><li><p>不要随意改变你的配置文件，这可能产生非常大的影响。</p></li><li><p>有时候，少量的配置会更好。</p></li><li><p>质疑使用通用的MySQL配置文件。</p></li></ol><h1 id="Mysql-查询优化"><a href="#Mysql-查询优化" class="headerlink" title="Mysql 查询优化"></a>Mysql 查询优化</h1><ol><li><p>使用慢查询日志，找出执行慢的查询。</p></li><li><p>使用 EXPLAIN 来决定查询功能是否合适。</p></li><li><p>经常测试你的查询，看是否需要做性能优化 — 性能可能会随着时间的变化而变化。</p></li><li><p>避免在整个表上使用count(*) ，它可能会将整个表锁住。</p></li><li><p>保持查询一致，这样后续类似的查询就能使用查询缓存了。</p></li><li><p>如果合适，用 GROUP BY 代替 DISTINCT。</p></li><li><p>在 WHERE. GROUP BY 和 ORDER BY 的列上加上索引。</p></li><li><p>保证索引简单，不要在同一列上加多个索引。</p></li><li><p>有时，MySQL 会选择错误的索引，这种情况使用 USE INDEX。</p></li><li><p>使用 SQL_MODE=STRICT 来检查问题。</p></li><li><p>索引字段少于5个时，UNION 操作用 LIMIT，而不是 OR。</p></li><li><p>使用 INSERT ON DUPLICATE KEY 或 INSERT IGNORE 来代替 UPDATE，避免 UPDATE 前需要先 SELECT。</p></li><li><p>使用索引字段和 ORDER BY 来代替 MAX。</p></li><li><p>避免使用 ORDER BY RAND()。</p></li><li><p>LIMIT M,N 在特定场景下会降低查询效率，有节制使用。</p></li><li><p>使用 UNION 来代替 WHERE 子句中的子查询。</p></li><li><p>对 UPDATE 来说，使用 SHARE MODE 来防止排他锁。</p></li><li><p>重启 MySQL 时，记得预热数据库，确保将数据加载到内存，提高查询效率。</p></li><li><p>使用 DROP TABLE ，然后再 CREATE TABLE ，而不是 DELETE FROM ，以删除表中所有数据。</p></li><li><p>最小化你要查询的数据，只获取你需要的数据，通常来说不要使用 *。</p></li><li><p>考虑持久连接，而不是多次建立连接，已减少资源的消耗。</p></li><li><p>基准查询，包括服务器的负载，有时一个简单的查询会影响其他的查询。</p></li><li><p>当服务器的负载增加时，使用SHOW PROCESSLIST来查看慢的/有问题的查询。</p></li><li><p>在存有生产环境数据副本的开发环境中，测试所有可疑的查询。</p></li></ol><h1 id="Mysql-备份过程"><a href="#Mysql-备份过程" class="headerlink" title="Mysql 备份过程"></a>Mysql 备份过程</h1><ol><li><p>在二级复制服务器上进行备份。</p></li><li><p>备份过程中停止数据的复制，以防止出现数据依赖和外键约束的不一致。</p></li><li><p>彻底停止MySQL之后，再从数据文件进行备份。</p></li><li><p>如果使用MySQL dump进行备份，请同时备份二进制日志 — 确保复制过程不被中断。</p></li><li><p>不要信任 LVM 快照的备份 — 可能会创建不一致的数据，将来会因此产生问题。</p></li><li><p>为每个表做一个备份，这样更容易实现单表的恢复 — 如果数据与其他表是相互独立的。</p></li><li><p>使用 mysqldump 时，指定 -opt 参数。</p></li><li><p>备份前检测和优化表。</p></li><li><p>临时禁用外键约束，来提高导入的速度。</p></li><li><p>临时禁用唯一性检查，来提高导入的速度。</p></li><li><p>每次备份完后，计算数据库/表数据和索引的大小，监控其增长。</p></li><li><p>使用定时任务（cron）脚本，来监控从库复制的错误和延迟。</p></li><li><p>定期备份数据。</p></li><li><p>定期测试备份的数据。</p></li><li><p>执行MySQL 监控: Monitis Unveils The World’s First Free On-demand MySQL Monitoring。</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://www.jifu.io/images/2/20190719204248.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h1&gt;&lt;p&gt;MySQL是一个强大的开源数据库。随着MySQL上的应用越来越多，MySQL逐渐遇到了瓶颈。这里提供 101 条优化 MySQL 的建议。有些技巧适合特定的安装环境，但是思路是相通的。我已经将它们分成了几类以帮助你理解。&lt;/p&gt;
&lt;h1 id=&quot;Mysql-监控&quot;&gt;&lt;a href=&quot;#Mysql-监控&quot; class=&quot;headerlink&quot; title=&quot;Mysql 监控&quot;&gt;&lt;/a&gt;Mysql 监控&lt;/h1&gt;&lt;h2 id=&quot;MySQL服务器硬件和OS（操作系统）调优&quot;&gt;&lt;a href=&quot;#MySQL服务器硬件和OS（操作系统）调优&quot; class=&quot;headerlink&quot; title=&quot;MySQL服务器硬件和OS（操作系统）调优&quot;&gt;&lt;/a&gt;MySQL服务器硬件和OS（操作系统）调优&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;有足够的物理内存，能将整个InnoDB文件加载到内存里 —— 如果访问的文件在内存里，而不是在磁盘上，InnoDB会快很多。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;全力避免 Swap 操作 — 交换（swapping）是从磁盘读取数据，所以会很慢。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用电池供电的RAM（Battery-Backed RAM）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用一个高级磁盘阵列 — 最好是 RAID10 或者更高。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;避免使用RAID5 — 和校验需要确保完整性，开销很高。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;将你的操作系统和数据分开，不仅仅是逻辑上要分开，物理上也要分开 — 操作系统的读写开销会影响数据库的性能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;将临时文件和复制日志与数据文件分开 — 后台的写操作影响数据库从磁盘文件的读写操作。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;更多的磁盘空间等于更高的速度。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;磁盘速度越快越好。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SAS优于SATA。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;小磁盘的速度比大磁盘的更快，尤其是在 RAID 中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用电池供电的缓存 RAID（Battery-Backed Cache RAID）控制器。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;避免使用软磁盘阵列。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;考虑使用固态IO卡（不是磁盘）来作为数据分区 — 几乎对所有量级数据，这种卡能够支持 2 GBps 的写操作。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在 Linux 系统上，设置 swappiness 的值为0 — 没有理由在数据库服务器上缓存文件，这种方式在Web服务器或桌面应用中用的更多。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;尽可能使用 noatime 和 nodirtime 来挂载文件系统 — 没有必要为每次访问来更新文件的修改时间。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用 XFS 文件系统 — 一个比ext3更快的. 更小的文件系统，拥有更多的日志选项，同时，MySQL在ext3上存在双缓冲区的问题。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;优化你的 XFS 文件系统日志和缓冲区参数 – -为了获取最大的性能基准。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在Linux系统中，使用 NOOP 或 DEADLINE IO 调度器 — CFQ 和 ANTICIPATORY 调度器已经被证明比 NOOP 和 DEADLINE 慢。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用 64 位操作系统 — 有更多的内存能用于寻址和 MySQL 使用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;将不用的包和后台程序从服务器上删除 — 减少资源占用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;将使用 MySQL 的 host 和 MySQL自身的 host 都配置在一个 host 文件中 — 这样没有 DNS 查找。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;永远不要强制杀死一个MySQL进程 — 你将损坏数据库，并运行备份。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;让你的服务器只服务于MySQL — 后台处理程序和其他服务会占用数据库的 CPU 时间。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="back-end" scheme="http://www.jifu.io/categories/back-end/"/>
    
      <category term="Middle-ware" scheme="http://www.jifu.io/categories/back-end/Middle-ware/"/>
    
      <category term="MySQL" scheme="http://www.jifu.io/categories/back-end/Middle-ware/MySQL/"/>
    
    
      <category term="优化" scheme="http://www.jifu.io/tags/%E4%BC%98%E5%8C%96/"/>
    
      <category term="MySQL" scheme="http://www.jifu.io/tags/MySQL/"/>
    
      <category term="调优" scheme="http://www.jifu.io/tags/%E8%B0%83%E4%BC%98/"/>
    
  </entry>
  
  <entry>
    <title>Mac版迅雷优化,删除无用插件</title>
    <link href="http://www.jifu.io/posts/294187676/"/>
    <id>http://www.jifu.io/posts/294187676/</id>
    <published>2019-07-17T12:37:22.000Z</published>
    <updated>2020-08-11T05:17:21.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://www.jifu.io/images/2/20190718005548.jpg" alt=""></p><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>使用最新版Mac迅雷，通过删除无用插件达到优化目的。</p><h1 id="迅雷插件列表"><a href="#迅雷插件列表" class="headerlink" title="迅雷插件列表"></a>迅雷插件列表</h1><table><thead><tr><th>插件名</th><th>功能</th></tr></thead><tbody><tr><td>advertising</td><td>广告</td></tr><tr><td>featuredpage</td><td>主页</td></tr><tr><td>feedback</td><td>反馈</td></tr><tr><td>iOSThunder</td><td>手机迅雷</td></tr><tr><td>activitycenter</td><td>活动中心</td></tr><tr><td>myvip</td><td>会员中心</td></tr><tr><td>softmanager</td><td>软件管家</td></tr><tr><td>viprenew</td><td>会员开通</td></tr><tr><td>viptips</td><td>会员提示</td></tr><tr><td>xlbrowser</td><td>内置浏览器</td></tr><tr><td>xlplayer</td><td>迅雷影音</td></tr><tr><td>livestream</td><td>直播</td></tr><tr><td>bbassistant</td><td>迅雷快鸟</td></tr><tr><td>lixianspace</td><td>离线空间</td></tr><tr><td>viptask</td><td>会员权限</td></tr><tr><td>userlogin</td><td>登陆迅雷账户</td></tr><tr><td>subtitle</td><td>内嵌字幕下载</td></tr><tr><td>browserhelper</td><td>配合浏览器</td></tr><tr><td>xiazaibao</td><td>下载宝</td></tr></tbody></table><h1 id="可选装插件"><a href="#可选装插件" class="headerlink" title="可选装插件"></a>可选装插件</h1><p>针对不同的需求，可以酌情处理以下插件：<br>需使用迅雷快鸟进行宽带提速的，请保留 <strong>bbassistant</strong><br>插件需要使用迅雷离线空间的，请保留 <strong>lixianspace</strong> 插件，不需要的可以删除；<br>需要使用会员权限的，请保留 <strong>viptask</strong> 插件，不需要的可以删除；<br>需要登陆迅雷账户的，请保留 <strong>userlogin</strong> 插件，不需要的可以删除；<br>需要使用内置的字幕下载功能的，请保留 <strong>subtitle</strong> 插件，不需要的可以删除；<br>需要搭配浏览器使用的，请保留 <strong>browserhelper</strong> 插件，不需要的可以删除；<br>下载宝（或玩客云）用户请保留 <strong>xiazaibao</strong> 插件，不需要的可以删除。</p><h1 id="删除插件"><a href="#删除插件" class="headerlink" title="删除插件"></a>删除插件</h1><pre class="line-numbers language-bash"><code class="language-bash">* <span class="token function">rm</span> -rf /Applications/Thunder.app/Contents/PlugIns/<span class="token punctuation">{</span>插件名<span class="token punctuation">}</span>.xlplugin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h1><h2 id="无用插件删除脚本"><a href="#无用插件删除脚本" class="headerlink" title="无用插件删除脚本"></a>无用插件删除脚本</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token function">rm</span> -rf /Applications/Thunder.app/Contents/PlugIns/advertising.xlplugin<span class="token function">rm</span> -rf /Applications/Thunder.app/Contents/PlugIns/featuredpage.xlplugin<span class="token function">rm</span> -rf /Applications/Thunder.app/Contents/PlugIns/activitycenter.xlplugin<span class="token function">rm</span> -rf /Applications/Thunder.app/Contents/PlugIns/iOSThunder.xlplugin<span class="token function">rm</span> -rf /Applications/Thunder.app/Contents/PlugIns/livestream.xlplugin<span class="token function">rm</span> -rf /Applications/Thunder.app/Contents/PlugIns/myvip.xlplugin<span class="token function">rm</span> -rf /Applications/Thunder.app/Contents/PlugIns/softmanager.xlplugin<span class="token function">rm</span> -rf /Applications/Thunder.app/Contents/PlugIns/xiazaibao.xlplugin<span class="token function">rm</span> -rf /Applications/Thunder.app/Contents/PlugIns/xlbrowser.xlplugin<span class="token function">rm</span> -rf /Applications/Thunder.app/Contents/PlugIns/xlplayer.xlplugin<span class="token function">rm</span> -rf /Applications/Thunder.app/Contents/PlugIns/activitycenter.xlplugin<span class="token function">rm</span> -rf /Applications/Thunder.app/Contents/PlugIns/onethingcloud.xlplugin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="选装插件删除脚本"><a href="#选装插件删除脚本" class="headerlink" title="选装插件删除脚本"></a>选装插件删除脚本</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token function">rm</span> -rf /Applications/Thunder.app/Contents/PlugIns/bbassistant.xlplugin<span class="token function">rm</span> -rf /Applications/Thunder.app/Contents/PlugIns/lixianspace.xlplugin<span class="token function">rm</span> -rf /Applications/Thunder.app/Contents/PlugIns/viptask.xlplugin<span class="token function">rm</span> -rf /Applications/Thunder.app/Contents/PlugIns/userlogin.xlplugin<span class="token function">rm</span> -rf /Applications/Thunder.app/Contents/PlugIns/subtitle.xlplugin<span class="token function">rm</span> -rf /Applications/Thunder.app/Contents/PlugIns/browserhelper.xlplugin<span class="token function">rm</span> -rf /Applications/Thunder.app/Contents/PlugIns/xiazaibao.xlplugin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://www.jifu.io/images/2/20190718005548.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h1&gt;&lt;p&gt;使用最新版Mac迅雷，通过删除无用插件达到优化目的。&lt;/p&gt;
&lt;h1 id=&quot;迅雷插件列表&quot;&gt;&lt;a href=&quot;#迅雷插件列表&quot; class=&quot;headerlink&quot; title=&quot;迅雷插件列表&quot;&gt;&lt;/a&gt;迅雷插件列表&lt;/h1&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;插件名&lt;/th&gt;
&lt;th&gt;功能&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;advertising&lt;/td&gt;
&lt;td&gt;广告&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;featuredpage&lt;/td&gt;
&lt;td&gt;主页&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;feedback&lt;/td&gt;
&lt;td&gt;反馈&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;iOSThunder&lt;/td&gt;
&lt;td&gt;手机迅雷&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;activitycenter&lt;/td&gt;
&lt;td&gt;活动中心&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;myvip&lt;/td&gt;
&lt;td&gt;会员中心&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;softmanager&lt;/td&gt;
&lt;td&gt;软件管家&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;viprenew&lt;/td&gt;
&lt;td&gt;会员开通&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;viptips&lt;/td&gt;
&lt;td&gt;会员提示&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;xlbrowser&lt;/td&gt;
&lt;td&gt;内置浏览器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;xlplayer&lt;/td&gt;
&lt;td&gt;迅雷影音&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;livestream&lt;/td&gt;
&lt;td&gt;直播&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bbassistant&lt;/td&gt;
&lt;td&gt;迅雷快鸟&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;lixianspace&lt;/td&gt;
&lt;td&gt;离线空间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;viptask&lt;/td&gt;
&lt;td&gt;会员权限&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;userlogin&lt;/td&gt;
&lt;td&gt;登陆迅雷账户&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;subtitle&lt;/td&gt;
&lt;td&gt;内嵌字幕下载&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;browserhelper&lt;/td&gt;
&lt;td&gt;配合浏览器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;xiazaibao&lt;/td&gt;
&lt;td&gt;下载宝&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&quot;可选装插件&quot;&gt;&lt;a href=&quot;#可选装插件&quot; class=&quot;headerlink&quot; title=&quot;可选装插件&quot;&gt;&lt;/a&gt;可选装插件&lt;/h1&gt;&lt;p&gt;针对不同的需求，可以酌情处理以下插件：&lt;br&gt;需使用迅雷快鸟进行宽带提速的，请保留 &lt;strong&gt;bbassistant&lt;/strong&gt;&lt;br&gt;插件需要使用迅雷离线空间的，请保留 &lt;strong&gt;lixianspace&lt;/strong&gt; 插件，不需要的可以删除；&lt;br&gt;需要使用会员权限的，请保留 &lt;strong&gt;viptask&lt;/strong&gt; 插件，不需要的可以删除；&lt;br&gt;需要登陆迅雷账户的，请保留 &lt;strong&gt;userlogin&lt;/strong&gt; 插件，不需要的可以删除；&lt;br&gt;需要使用内置的字幕下载功能的，请保留 &lt;strong&gt;subtitle&lt;/strong&gt; 插件，不需要的可以删除；&lt;br&gt;需要搭配浏览器使用的，请保留 &lt;strong&gt;browserhelper&lt;/strong&gt; 插件，不需要的可以删除；&lt;br&gt;下载宝（或玩客云）用户请保留 &lt;strong&gt;xiazaibao&lt;/strong&gt; 插件，不需要的可以删除。&lt;/p&gt;
&lt;h1 id=&quot;删除插件&quot;&gt;&lt;a href=&quot;#删除插件&quot; class=&quot;headerlink&quot; title=&quot;删除插件&quot;&gt;&lt;/a&gt;删除插件&lt;/h1&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;* rm -rf /Applications/Thunder.app/Contents/PlugIns/{插件名}.xlplugin
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&quot;脚本&quot;&gt;&lt;a href=&quot;#脚本&quot; class=&quot;headerlink&quot; title=&quot;脚本&quot;&gt;&lt;/a&gt;脚本&lt;/h1&gt;&lt;h2 id=&quot;无用插件删除脚本&quot;&gt;&lt;a href=&quot;#无用插件删除脚本&quot; class=&quot;headerlink&quot; title=&quot;无用插件删除脚本&quot;&gt;&lt;/a&gt;无用插件删除脚本&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;#!/bin/bash
rm -rf /Applications/Thunder.app/Contents/PlugIns/advertising.xlplugin
rm -rf /Applications/Thunder.app/Contents/PlugIns/featuredpage.xlplugin
rm -rf /Applications/Thunder.app/Contents/PlugIns/activitycenter.xlplugin
rm -rf /Applications/Thunder.app/Contents/PlugIns/iOSThunder.xlplugin
rm -rf /Applications/Thunder.app/Contents/PlugIns/livestream.xlplugin
rm -rf /Applications/Thunder.app/Contents/PlugIns/myvip.xlplugin
rm -rf /Applications/Thunder.app/Contents/PlugIns/softmanager.xlplugin
rm -rf /Applications/Thunder.app/Contents/PlugIns/xiazaibao.xlplugin
rm -rf /Applications/Thunder.app/Contents/PlugIns/xlbrowser.xlplugin
rm -rf /Applications/Thunder.app/Contents/PlugIns/xlplayer.xlplugin
rm -rf /Applications/Thunder.app/Contents/PlugIns/activitycenter.xlplugin
rm -rf /Applications/Thunder.app/Contents/PlugIns/onethingcloud.xlplugin
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;选装插件删除脚本&quot;&gt;&lt;a href=&quot;#选装插件删除脚本&quot; class=&quot;headerlink&quot; title=&quot;选装插件删除脚本&quot;&gt;&lt;/a&gt;选装插件删除脚本&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;#!/bin/bash
rm -rf /Applications/Thunder.app/Contents/PlugIns/bbassistant.xlplugin
rm -rf /Applications/Thunder.app/Contents/PlugIns/lixianspace.xlplugin
rm -rf /Applications/Thunder.app/Contents/PlugIns/viptask.xlplugin
rm -rf /Applications/Thunder.app/Contents/PlugIns/userlogin.xlplugin
rm -rf /Applications/Thunder.app/Contents/PlugIns/subtitle.xlplugin
rm -rf /Applications/Thunder.app/Contents/PlugIns/browserhelper.xlplugin
rm -rf /Applications/Thunder.app/Contents/PlugIns/xiazaibao.xlplugin
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="OPS" scheme="http://www.jifu.io/categories/OPS/"/>
    
      <category term="MacOS" scheme="http://www.jifu.io/categories/OPS/MacOS/"/>
    
    
      <category term="Mac OS" scheme="http://www.jifu.io/tags/Mac-OS/"/>
    
      <category term="迅雷" scheme="http://www.jifu.io/tags/%E8%BF%85%E9%9B%B7/"/>
    
      <category term="优化" scheme="http://www.jifu.io/tags/%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>修复破解Mac应用启动时闪退（原因是由于苹果移除了TNT证书）</title>
    <link href="http://www.jifu.io/posts/1623087360/"/>
    <id>http://www.jifu.io/posts/1623087360/</id>
    <published>2019-07-17T11:06:31.000Z</published>
    <updated>2020-08-11T05:17:21.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://www.jifu.io/images/2/20190717231708.jpg" alt=""></p><p><strong>Apple</strong> removed TNT’s certificate, so the app will crash after July 12th. The current solution is to sign it yourself.</p><h1 id="Run-in-Terminal"><a href="#Run-in-Terminal" class="headerlink" title="Run in Terminal"></a>Run in Terminal</h1><pre class="line-numbers language-bash"><code class="language-bash">codesign --force --deep --sign - /Applications/name.app<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://www.jifu.io/images/2/20190717230825.png" alt=""></p><p>Requisite: <strong><em>Xcode</em></strong> or the <strong><em>Apple Command Line Tools</em></strong><br>To install, execute</p><pre class="line-numbers language-bash"><code class="language-bash">xcode-select --install<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>in the terminal emulator of your choice, and the macOS GUI will give you the option to install Xcode (from the Mac App Store) or the CLTs. If you install Xcode, launch it at least once to complete the installation and agree to the license.</p><p><img src="https://www.jifu.io/images/2/20190717231000.jpg" alt=""></p><p>Alternatively, you can use <strong>CodeSigner</strong> to sign some apps.</p><a id="more"></a><h1 id="Installation-instructions"><a href="#Installation-instructions" class="headerlink" title="Installation instructions"></a>Installation instructions</h1><ul><li><p>downloaded CodeSigner, then mount the DMG volume</p></li><li><p>Copy CodeSigner.app from the mounted DMG volume into one of your applications paths; recommended: ~/Applications/Utilities/</p></li><li><p>If you are using macOS Finder or a similar application with Services support as your main file manager, double-click the CodeSigner workflow: a window titled Quick Action Installer will appear asking you if you want to install it; click Install. You can assign a keyboard shortcut to the Quick Action in System Preferences &gt; Keyboard &gt; Shortcuts &gt; Services &gt; Files and Folders &gt; CodeSigner</p></li><li><p>If you also want the ability to manually run CodeSigner in a terminal emulator—example:</p></li><li><p><code>codesigner /Applications/Parallels\ Desktop.app</code></p></li><li><p>—copy the codesigner shell script into your $PATH, e.g. /usr/local/bin/</p></li><li><p>On Mojave please allow CodeSigner to control System Events; this is necessary for GUI prompts to work via AppleScript</p></li></ul><h1 id="What’s-New"><a href="#What’s-New" class="headerlink" title="What’s New"></a>What’s New</h1><p>Version 0.9.3 beta 4:</p><ul><li><p>CodeSigner will now grab an application’s or file’s icon for the notifications</p></li><li><p>Bug fix: account for terminal-notifier display error in case of filenames with leading double-quotes (thanks to roryokane)</p></li><li><p>If codesigner doesn’t execute as a Platypus app, it will search for terminal-notifier only in the default macOS Applications paths, and in installation directories for Homebrew, MacPorts and Fink (thanks to roryokane)</p></li></ul><h1 id="Compatibility"><a href="#Compatibility" class="headerlink" title="Compatibility"></a>Compatibility</h1><p>OS X 10.8 or later, 64-bit processor</p><h1 id="Screenshots"><a href="#Screenshots" class="headerlink" title="Screenshots"></a>Screenshots</h1><p><img src="https://www.jifu.io/images/2/20190717230727.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://www.jifu.io/images/2/20190717231708.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Apple&lt;/strong&gt; removed TNT’s certificate, so the app will crash after July 12th. The current solution is to sign it yourself.&lt;/p&gt;
&lt;h1 id=&quot;Run-in-Terminal&quot;&gt;&lt;a href=&quot;#Run-in-Terminal&quot; class=&quot;headerlink&quot; title=&quot;Run in Terminal&quot;&gt;&lt;/a&gt;Run in Terminal&lt;/h1&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;codesign --force --deep --sign - /Applications/name.app
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://www.jifu.io/images/2/20190717230825.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Requisite: &lt;strong&gt;&lt;em&gt;Xcode&lt;/em&gt;&lt;/strong&gt; or the &lt;strong&gt;&lt;em&gt;Apple Command Line Tools&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;To install, execute&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;xcode-select --install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;in the terminal emulator of your choice, and the macOS GUI will give you the option to install Xcode (from the Mac App Store) or the CLTs. If you install Xcode, launch it at least once to complete the installation and agree to the license.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.jifu.io/images/2/20190717231000.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Alternatively, you can use &lt;strong&gt;CodeSigner&lt;/strong&gt; to sign some apps.&lt;/p&gt;
    
    </summary>
    
      <category term="OPS" scheme="http://www.jifu.io/categories/OPS/"/>
    
      <category term="MacOS" scheme="http://www.jifu.io/categories/OPS/MacOS/"/>
    
    
      <category term="闪退" scheme="http://www.jifu.io/tags/%E9%97%AA%E9%80%80/"/>
    
      <category term="Crashes" scheme="http://www.jifu.io/tags/Crashes/"/>
    
      <category term="TNT’s certificate" scheme="http://www.jifu.io/tags/TNT%E2%80%99s-certificate/"/>
    
  </entry>
  
  <entry>
    <title>深入分析Redis特点及应用场景</title>
    <link href="http://www.jifu.io/posts/2864310564/"/>
    <id>http://www.jifu.io/posts/2864310564/</id>
    <published>2019-07-13T10:08:15.000Z</published>
    <updated>2020-08-11T05:17:21.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://www.jifu.io/images/2/20190713223325.png" alt=""></p><h1 id="Redis的特点"><a href="#Redis的特点" class="headerlink" title="Redis的特点"></a>Redis的特点</h1><p>Redis 与其他 key - value 缓存产品有以下三个特点</p><ul><li>Redis<strong>支持数据的持久化</strong>，可以将内存中的数据保存在磁盘中，重启的时候可以再次加载进行使用。</li><li>Redis不仅仅支持简单的key-value类型的数据，同时还<strong>提供list，set，zset，hash等数据结构的存储</strong>。</li><li>Redis<strong>支持数据的备份</strong>，即master-slave模式的数据备份。</li></ul><h1 id="Redis的优势"><a href="#Redis的优势" class="headerlink" title="Redis的优势"></a>Redis的优势</h1><ul><li><strong>性能极高</strong> – Redis能读的速度是110000次/s,写的速度是81000次/s 。</li><li><strong>丰富的数据类型</strong> – Redis支持二进制案例的 Strings, Lists, Hashes, Sets 及 Ordered Sets 数据类型操作。</li><li><strong>原子</strong> – Redis的所有操作都是原子性的，同时Redis还支持对几个操作全并后的原子性执行。</li><li><strong>丰富的特性</strong> – Redis还支持 publish/subscribe, 通知, key 过期等等特性。</li></ul><h1 id="Redis与其他key-value存储有什么不同？"><a href="#Redis与其他key-value存储有什么不同？" class="headerlink" title="Redis与其他key-value存储有什么不同？"></a>Redis与其他key-value存储有什么不同？</h1><p>Redis有着更为复杂的数据结构并且提供对他们的原子性操作，这是一个不同于其他数据库的进化路径。Redis的数据类型都是基于基本数据结构的同时对程序员透明，无需进行额外的抽象。</p><p>Redis运行在内存中但是可以持久化到磁盘，所以在对不同数据集进行高速读写时需要权衡内存，因为<strong>数据量不能大于硬件内存</strong>。在内存数据库方面的另一个优点是，相比在磁盘上相同的复杂的数据结构，在内存中操作起来非常简单，这样Redis可以做很多内部复杂性很强的事情。同时，在磁盘格式方面他们是紧凑的以追加的方式产生的，因为他们并不需要进行随机访问。</p><a id="more"></a><h1 id="Redis应用场景"><a href="#Redis应用场景" class="headerlink" title="Redis应用场景"></a>Redis应用场景</h1><h2 id="显示最新的项目列表"><a href="#显示最新的项目列表" class="headerlink" title="显示最新的项目列表"></a>显示最新的项目列表</h2><p>下面这个语句常用来显示最新项目，随着数据多了，查询毫无疑问会越来越慢。</p><pre class="line-numbers language-bash"><code class="language-bash">SELECT * FROM foo WHERE <span class="token punctuation">..</span>. ORDER BY <span class="token function">time</span> DESC LIMIT 10<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在Web应用中，“列出最新的回复”之类的查询非常普遍，这通常会带来可扩展性问题。这令人沮丧，因为项目本来就是按这个顺序被创建的，但要输出这个顺序却不得不进行排序操作。</p><p>类似的问题就可以用Redis来解决。比如说，我们的一个Web应用想要列出用户贴出的最新20条评论。在最新的评论边上我们有一个“显示全部”的链接，点击后就可以获得更多的评论。</p><p>我们假设数据库中的每条评论都有一个唯一的递增的ID字段。我们可以使用分页来制作主页和评论页，使用Redis的模板：</p><p>每次新评论发表时，我们会将它的ID添加到一个Redis列表：</p><pre class="line-numbers language-bash"><code class="language-bash">LPUSH latest.comments <span class="token operator">&lt;</span>ID<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>我们将列表裁剪为指定长度，因此Redis只需要保存最新的5000条评论：</p><pre class="line-numbers language-bash"><code class="language-bash">LTRIM latest.comments 0 5000<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>每次我们需要获取最新评论的项目范围时，我们调用一个函数来完成（使用伪代码）：</p><pre class="line-numbers language-bash"><code class="language-bash">FUNCTION get_latest_comments<span class="token punctuation">(</span>start,num_items<span class="token punctuation">)</span>:    id_list <span class="token operator">=</span> redis.lrange<span class="token punctuation">(</span><span class="token string">"latest.comments"</span>,start,start+num_items-1<span class="token punctuation">)</span>    IF id_list.length <span class="token operator">&lt;</span> num_items        id_list <span class="token operator">=</span> SQL_DB<span class="token punctuation">(</span><span class="token string">"SELECT ... ORDER BY time LIMIT ..."</span><span class="token punctuation">)</span>    END    RETURN id_listEND<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里我们做的很简单。在Redis中我们的最新ID使用了常驻缓存，这是一直更新的。但是我们做了限制不能超过5000个ID，因此我们的获取ID函数会一直询问Redis。只有在start/count参数超出了这个范围的时候，才需要去访问数据库。<br>我们的系统不会像传统方式那样“刷新”缓存，Redis实例中的信息永远是一致的。SQL数据库（或是硬盘上的其他类型数据库）只是在用户需要获取“很远”的数据时才会被触发，而主页或第一个评论页是不会麻烦到硬盘上的数据库了。</p><h2 id="删除与过滤"><a href="#删除与过滤" class="headerlink" title="删除与过滤"></a>删除与过滤</h2><p>我们可以使用LREM来删除评论。如果删除操作非常少，另一个选择是直接跳过评论条目的入口，报告说该评论已经不存在。</p><p>有些时候你想要给不同的列表附加上不同的过滤器。如果过滤器的数量受到限制，你可以简单的为每个不同的过滤器使用不同的Redis列表。毕竟每个列表只有5000条项目，但Redis却能够使用非常少的内存来处理几百万条项目。</p><h2 id="排行榜相关"><a href="#排行榜相关" class="headerlink" title="排行榜相关"></a>排行榜相关</h2><p>另一个很普遍的需求是各种数据库的数据并非存储在内存中，因此在按得分排序以及实时更新这些几乎每秒钟都需要更新的功能上数据库的性能不够理想。</p><p>典型的比如那些在线游戏的排行榜，比如一个Facebook的游戏，根据得分你通常想要：</p><ul><li>列出前100名高分选手</li><li>列出某用户当前的全球排名</li></ul><p>这些操作对于Redis来说小菜一碟，即使你有几百万个用户，每分钟都会有几百万个新的得分。</p><p>模式是这样的，每次获得新得分时，我们用这样的代码：</p><pre class="line-numbers language-bash"><code class="language-bash">ZADD leaderboard<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>你可能用userID来取代username，这取决于你是怎么设计的。</p><p>得到前100名高分用户很简单：</p><pre class="line-numbers language-bash"><code class="language-bash">ZREVRANGE leaderboard 0 99<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>用户的全球排名也相似，只需要：</p><pre class="line-numbers language-bash"><code class="language-bash">ZRANK leaderboard<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="按照用户投票和时间排序"><a href="#按照用户投票和时间排序" class="headerlink" title="按照用户投票和时间排序"></a>按照用户投票和时间排序</h2><p>排行榜的一种常见变体模式就像Reddit或Hacker News用的那样，新闻按照类似下面的公式根据得分来排序：score = points / time^alpha</p><p>因此用户的投票会相应的把新闻挖出来，但时间会按照一定的指数将新闻埋下去。下面是我们的模式，当然算法由你决定。</p><p>模式是这样的，开始时先观察那些可能是最新的项目，例如首页上的1000条新闻都是候选者，因此我们先忽视掉其他的，这实现起来很简单。</p><p>每次新的新闻贴上来后，我们将ID添加到列表中，使用LPUSH + LTRIM，确保只取出最新的1000条项目。</p><p>有一项后台任务获取这个列表，并且持续的计算这1000条新闻中每条新闻的最终得分。计算结果由ZADD命令按照新的顺序填充生成列表，老新闻则被清除。这里的关键思路是排序工作是由后台任务来完成的。</p><h2 id="过期项目处理"><a href="#过期项目处理" class="headerlink" title="过期项目处理"></a>过期项目处理</h2><p>另一种常用的项目排序是按照时间排序。我们使用unix时间作为得分即可。</p><p>模式如下：</p><p>每次有新项目添加到我们的非Redis数据库时，我们把它加入到排序集合中。这时我们用的是时间属性，current_time和time_to_live。<br>另一项后台任务使用ZRANGE…SCORES查询排序集合，取出最新的10个项目。如果发现unix时间已经过期，则在数据库中删除条目。</p><h2 id="计数"><a href="#计数" class="headerlink" title="计数"></a>计数</h2><p>Redis是一个很好的计数器，这要感谢INCRBY和其他相似命令。</p><p>我相信你曾许多次想要给数据库加上新的计数器，用来获取统计或显示新信息，但是最后却由于写入敏感而不得不放弃它们。</p><p>好了，现在使用Redis就不需要再担心了。有了原子递增（atomic increment），你可以放心的加上各种计数，用GETSET重置，或者是让它们过期。</p><p>例如这样操作：</p><pre class="line-numbers language-bash"><code class="language-bash">INCR user: EXPIREuser: 60<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>你可以计算出最近用户在页面间停顿不超过60秒的页面浏览量，当计数达到比如20时，就可以显示出某些条幅提示，或是其它你想显示的东西。</p><h2 id="特定时间内的特定项目"><a href="#特定时间内的特定项目" class="headerlink" title="特定时间内的特定项目"></a>特定时间内的特定项目</h2><p>另一项对于其他数据库很难，但Redis做起来却轻而易举的事就是统计在某段特点时间里有多少特定用户访问了某个特定资源。比如我想要知道某些特定的注册用户或IP地址，他们到底有多少访问了某篇文章。</p><p>每次我获得一次新的页面浏览时我只需要这样做：</p><pre class="line-numbers language-bash"><code class="language-bash">SADD page:day1:<span class="token operator">&lt;</span>page_id<span class="token operator">></span> <span class="token operator">&lt;</span>user_id<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>当然你可能想用unix时间替换day1，比如time()-(time()%3600*24)等等。</p><p>想知道特定用户的数量吗？只需要使用</p><pre class="line-numbers language-bash"><code class="language-bash">SCARD page:day1:<span class="token operator">&lt;</span>page_id<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>需要测试某个特定用户是否访问了这个页面？</p><h2 id="实时分析正在发生的情况，用于数据统计与防止垃圾邮件等"><a href="#实时分析正在发生的情况，用于数据统计与防止垃圾邮件等" class="headerlink" title="实时分析正在发生的情况，用于数据统计与防止垃圾邮件等"></a>实时分析正在发生的情况，用于数据统计与防止垃圾邮件等</h2><p>我们只做了几个例子，但如果你研究Redis的命令集，并且组合一下，就能获得大量的实时分析方法，有效而且非常省力。使用Redis原语命令，更容易实施垃圾邮件过滤系统或其他实时跟踪系统。</p><h2 id="Pub-Sub-订阅"><a href="#Pub-Sub-订阅" class="headerlink" title="Pub/Sub 订阅"></a>Pub/Sub 订阅</h2><p>Redis的Pub/Sub非常非常简单，运行稳定并且快速。支持模式匹配，能够实时订阅与取消频道。</p><h2 id="队列"><a href="#队列" class="headerlink" title="队列"></a>队列</h2><p>你应该已经注意到像list push和list pop这样的Redis命令能够很方便的执行队列操作了，但能做的可不止这些：比如Redis还有list pop的变体命令，能够在列表为空时阻塞队列。</p><h2 id="缓存"><a href="#缓存" class="headerlink" title="缓存"></a>缓存</h2><p>Redis的缓存部分值得写一篇新文章，我这里只是简单的说一下。Redis能够替代memcached，让你的缓存从只能存储数据变得能够更新数据，因此你不再需要每次都重新生成数据了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://www.jifu.io/images/2/20190713223325.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;Redis的特点&quot;&gt;&lt;a href=&quot;#Redis的特点&quot; class=&quot;headerlink&quot; title=&quot;Redis的特点&quot;&gt;&lt;/a&gt;Redis的特点&lt;/h1&gt;&lt;p&gt;Redis 与其他 key - value 缓存产品有以下三个特点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Redis&lt;strong&gt;支持数据的持久化&lt;/strong&gt;，可以将内存中的数据保存在磁盘中，重启的时候可以再次加载进行使用。&lt;/li&gt;
&lt;li&gt;Redis不仅仅支持简单的key-value类型的数据，同时还&lt;strong&gt;提供list，set，zset，hash等数据结构的存储&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;Redis&lt;strong&gt;支持数据的备份&lt;/strong&gt;，即master-slave模式的数据备份。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Redis的优势&quot;&gt;&lt;a href=&quot;#Redis的优势&quot; class=&quot;headerlink&quot; title=&quot;Redis的优势&quot;&gt;&lt;/a&gt;Redis的优势&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;性能极高&lt;/strong&gt; – Redis能读的速度是110000次/s,写的速度是81000次/s 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;丰富的数据类型&lt;/strong&gt; – Redis支持二进制案例的 Strings, Lists, Hashes, Sets 及 Ordered Sets 数据类型操作。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;原子&lt;/strong&gt; – Redis的所有操作都是原子性的，同时Redis还支持对几个操作全并后的原子性执行。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;丰富的特性&lt;/strong&gt; – Redis还支持 publish/subscribe, 通知, key 过期等等特性。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Redis与其他key-value存储有什么不同？&quot;&gt;&lt;a href=&quot;#Redis与其他key-value存储有什么不同？&quot; class=&quot;headerlink&quot; title=&quot;Redis与其他key-value存储有什么不同？&quot;&gt;&lt;/a&gt;Redis与其他key-value存储有什么不同？&lt;/h1&gt;&lt;p&gt;Redis有着更为复杂的数据结构并且提供对他们的原子性操作，这是一个不同于其他数据库的进化路径。Redis的数据类型都是基于基本数据结构的同时对程序员透明，无需进行额外的抽象。&lt;/p&gt;
&lt;p&gt;Redis运行在内存中但是可以持久化到磁盘，所以在对不同数据集进行高速读写时需要权衡内存，因为&lt;strong&gt;数据量不能大于硬件内存&lt;/strong&gt;。在内存数据库方面的另一个优点是，相比在磁盘上相同的复杂的数据结构，在内存中操作起来非常简单，这样Redis可以做很多内部复杂性很强的事情。同时，在磁盘格式方面他们是紧凑的以追加的方式产生的，因为他们并不需要进行随机访问。&lt;/p&gt;
    
    </summary>
    
      <category term="back-end" scheme="http://www.jifu.io/categories/back-end/"/>
    
      <category term="Middle-ware" scheme="http://www.jifu.io/categories/back-end/Middle-ware/"/>
    
      <category term="Redis" scheme="http://www.jifu.io/categories/back-end/Middle-ware/Redis/"/>
    
    
      <category term="Redis" scheme="http://www.jifu.io/tags/Redis/"/>
    
      <category term="应用场景" scheme="http://www.jifu.io/tags/%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF/"/>
    
      <category term="分析" scheme="http://www.jifu.io/tags/%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>分库分表 vs NewSQL数据库</title>
    <link href="http://www.jifu.io/posts/2654174479/"/>
    <id>http://www.jifu.io/posts/2654174479/</id>
    <published>2019-07-12T12:06:30.000Z</published>
    <updated>2020-08-11T05:17:21.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://www.jifu.io/images/2/20190713002331.png" alt=""></p><h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>最近与同行科技交流，经常被问到分库分表与分布式数据库如何选择，网上也有很多关于中间件+传统关系数据库（分库分表）与NewSQL分布式数据库的文章，但有些观点与判断是我觉得是偏激的，脱离环境去评价方案好坏其实有失公允。</p><p>本文通过对两种模式关键特性实现原理对比，希望可以尽可能客观、中立的阐明各自真实的优缺点以及适用场景。</p><h1 id="NewSQL数据库先进在哪儿"><a href="#NewSQL数据库先进在哪儿" class="headerlink" title="NewSQL数据库先进在哪儿?"></a>NewSQL数据库先进在哪儿?</h1><p>首先关于“中间件+关系数据库分库分表”算不算NewSQL分布式数据库问题，国外有篇论文pavlo-newsql-sigmodrec，如果根据该文中的分类，Spanner、TiDB、OB算是第一种新架构型，Sharding-Sphere、Mycat、DRDS等中间件方案算是第二种（文中还有第三种云数据库，本文暂不详细介绍）。</p><p>基于中间件（包括SDK和Proxy两种形式）+传统关系数据库（分库分表）模式是不是分布式架构？我觉得是的，因为存储确实也分布式了，也能实现横向扩展。但是不是”伪”分布式数据库？从架构先进性来看，这么说也有一定道理。”伪”主要体现在中间件层与底层DB重复的SQL解析与执行计划生成、存储引擎基于B+Tree等，这在分布式数据库架构中实际上冗余低效的。为了避免引起真伪分布式数据库的口水战，本文中NewSQL数据库特指这种新架构NewSQL数据库。</p><p>NewSQL数据库相比中间件+分库分表的先进在哪儿？画一个简单的架构对比图：</p><p><img src="https://www.jifu.io/images/2/20190713000943.png" alt=""></p><a id="more"></a><ol><li>传统数据库面向磁盘设计，基于内存的存储管理及并发控制，不如NewSQL数据库那般高效利用。</li><li>中间件模式SQL解析、执行计划优化等在中间件与数据库中重复工作，效率相比较低；</li><li>NewSQL数据库的分布式事务相比于XA进行了优化，性能更高；</li><li>新架构NewSQL数据库存储设计即为基于paxos（或Raft）协议的多副本，相比于传统数据库主从模式（半同步转异步后也存在丢数问题），在实现了真正的高可用、高可靠（RTO&lt;30s，RPO=0）</li><li>NewSQL数据库天生支持数据分片，数据的迁移、扩容都是自动化的，大大减轻了DBA的工作，同时对应用透明，无需在SQL指定分库分表键。<br>这些大多也是NewSQL数据库产品主要宣传的点，不过这些看起来很美好的功能是否真的如此？接下来针对以上几点分别阐述下的我的理解。</li></ol><h1 id="分布式事务"><a href="#分布式事务" class="headerlink" title="分布式事务"></a>分布式事务</h1><p><strong>这是把双刃剑</strong></p><h2 id="CAP限制"><a href="#CAP限制" class="headerlink" title="CAP限制"></a>CAP限制</h2><p>想想更早些出现的NoSQL数据库为何不支持分布式事务（最新版的mongoDB等也开始支持了），是缺乏理论与实践支撑吗？并不是，原因是CAP定理依然是分布式数据库头上的颈箍咒，在保证强一致的同时必然会牺牲可用性A或分区容忍性P。<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.jdon.com%2F47671" target="_blank" rel="noopener">为什么大部分NoSQL不提供分布式事务？</a></p><p>那么NewSQL数据库突破CAP定理限制了吗？并没有。NewSQL数据库的鼻主Google Spanner（目前绝大部分分布式数据库都是按照Spanner架构设计的）提供了一致性和大于5个9的可用性，宣称是一个“实际上是CA”的，其真正的含义是<strong>系统处于 CA 状态的概率非常高，由于网络分区导致的服务停用的概率非常小</strong>，究其真正原因是其打造私有全球网保证了不会出现网络中断引发的网络分区，另外就是其高效的运维队伍,这也是cloud spanner的卖点。详细可见CAP提出者Eric Brewer写的《Spanner, TrueTime 和CAP理论》。</p><blockquote><p>推荐一篇关于分布式系统有趣的文章，站在巨人的分布式肩膀上，其中提到：<strong>分布式系统中，您可以知道工作在哪里，或者您可以知道工作何时完成，但您无法同时了解两者；两阶段协议本质上是反可用性协议。</strong></p></blockquote><h2 id="完备性"><a href="#完备性" class="headerlink" title="完备性"></a>完备性</h2><p>两阶段提交协议是否严格支持ACID，各种异常场景是不是都可以覆盖？<br>2PC在commit阶段发送异常，其实跟最大努力一阶段提交类似也会有部分可见问题，严格讲一段时间内并不能保证A原子性和C一致性（待故障恢复后recovery机制可以保证最终的A和C）。完备的分布式事务支持并不是一件简单的事情，需要可以应对网络以及各种硬件包括网卡、磁盘、CPU、内存、电源等各类异常，通过严格的测试。之前跟某友商交流，他们甚至说目前已知的NewSQL在分布式事务支持上都是不完整的，他们都有案例跑不过，圈内人士这么笃定，也说明了<strong>分布式事务的支持完整程度其实是层次不齐的</strong>。</p><p>但分布式事务又是这些NewSQL数据库的一个非常重要的底层机制，跨资源的DML、DDL等都依赖其实现，如果这块的性能、完备性打折扣，上层跨分片SQL执行的正确性会受到很大影响。</p><h2 id="性能"><a href="#性能" class="headerlink" title="性能"></a>性能</h2><p>传统关系数据库也支持分布式事务XA，但为何很少有高并发场景下用呢？ 因为XA的基础两阶段提交协议存在网络开销大，阻塞时间长、死锁等问题，这也导致了其实际上很少大规模用在基于传统关系数据库的OLTP系统中。<br>NewSQL数据库的分布式事务实现也仍然多基于两阶段提交协议，例如google percolator分布式事务模型，<br>采用原子钟+MVCC+ Snapshot Isolation（SI），这种方式通过TSO(Timestamp Oracle)保证了全局一致性，通过MVCC避免了锁，另外通过primary lock和secondary lock将提交的一部分转为异步，相比XA确实提高了分布式事务的性能。</p><blockquote><p>SI是乐观锁，在热点数据场景，可能会大量的提交失败。另外SI的隔离级别与RR并非完全相同，它不会有幻想读，但会有写倾斜。<br>但不管如何优化，相比于1PC，2PC多出来的GID获取、网络开销、prepare日志持久化还是会带来很大的性能损失，尤其是跨节点的数量比较多时会更加显著，例如在银行场景做个批量扣款，一个文件可能上W个账户，这样的场景无论怎么做还是吞吐都不会很高。<br>Spanner给出的分布式事务测试数据</p></blockquote><p><img src="https://www.jifu.io/images/2/20190713001103.png" alt=""></p><p><strong>虽然NewSQL分布式数据库产品都宣传完备支持分布式事务，但这并不是说应用可以完全不用关心数据拆分，这些数据库的最佳实践中仍然会写到，应用的大部分场景尽可能避免分布式事务。</strong></p><p>既然强一致事务付出的性能代价太大，我们可以反思下是否真的需要这种强一致的分布式事务？尤其是在做微服务拆分后，很多系统也不太可能放在一个统一的数据库中。尝试将一致性要求弱化，便是柔性事务，放弃ACID(Atomicity,Consistency, Isolation, Durability)，转投BASE(Basically Available,Soft state,Eventually consistent)，例如Saga、TCC、可靠消息保证最终一致等模型，对于大规模高并发OLTP场景，我个人更建议使用柔性事务而非强一致的分布式事务。关于柔性事务，笔者之前也写过一个技术组件，最近几年也涌现出了一些新的模型与框架（例如阿里刚开源的Fescar），限于篇幅不再赘述，有空再单独写篇文章。</p><blockquote><p><strong>解决分布式事务是否只能用两阶段提交协议？</strong><br>oceanbase1.0中通过updateserver避免分布式事务的思路很有启发性 ，不过2.0版后也变成了2PC。<br>业界分布式事务也并非只有两阶段提交这一解，也有其它方案<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fdbmsmusings.blogspot.com%2F2019%2F01%2Fits-time-to-move-on-from-two-phase.html%3Fm%3D1" target="_blank" rel="noopener">its-time-to-move-on-from-two-phase</a>(如果打不开，国内有翻译版<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.jdon.com%2F51588" target="_blank" rel="noopener">https://www.jdon.com/51588</a>)</p></blockquote><h1 id="HA与异地多活"><a href="#HA与异地多活" class="headerlink" title="HA与异地多活"></a>HA与异地多活</h1><p>主从模式并不是最优的方式，就算是半同步复制，在极端情况下（半同步转异步）也存在丢数问题，目前业界公认更好的方案是基于paxos分布式一致性协议或者其它类paxos如raft方式，Google Spanner、TiDB、cockcoachDB、OB都采用了这种方式，基于Paxos协议的多副本存储，遵循过半写原则，支持自动选主，解决了数据的高可靠，缩短了failover时间，提高了可用性，特别是减少了运维的工作量，这种方案技术上已经很成熟，也是NewSQL数据库底层的标配。<br>当然这种方式其实也可以用在传统关系数据库，阿里、微信团队等也有将MySQL存储改造支持paxos多副本的，MySQL也推出了官方版MySQL Group Cluster，预计不远的未来主从模式可能就成为历史了。</p><blockquote><p>分布式一致性算法本身并不难，但具体在工程实践时，需要考虑很多异常并做很多优化，实现一个生产级可靠成熟的一致性协议并不容易。例如实际使用时必须转化实现为multi-paxos或multi-raft，需要通过batch、异步等方式减少网络、磁盘IO等开销。</p></blockquote><p><strong>需要注意的是很多NewSQL数据库厂商宣传基于paxos或raft协议可以实现【异地多活】，这个实际上是有前提的，那就是异地之间网络延迟不能太高。</strong>以银行“两地三中心”为例，异地之间多相隔数千里，延时达到数十毫秒，如果要多活，那便需异地副本也参与数据库日志过半确认，这样高的延时几乎没有OLTP系统可以接受的。</p><p><strong>数据库层面做异地多活是个美好的愿景，但距离导致的延时目前并没有好的方案。</strong>之前跟蚂蚁团队交流，蚂蚁异地多活的方案是在应用层通过MQ同步双写交易信息，异地DC将交易信息保存在分布式缓存中，一旦发生异地切换，数据库同步中间件会告之数据延迟时间，应用从缓存中读取交易信息，将这段时间内涉及到的业务对象例如用户、账户进行黑名单管理，等数据同步追上之后再将这些业务对象从黑名单中剔除。由于双写的不是所有数据库操作日志而只是交易信息，数据延迟只影响一段时间内数据，这是目前我觉得比较靠谱的异地度多活方案。</p><p>另外有些系统进行了单元化改造，这在paxos选主时也要结合考虑进去，这也是目前很多NewSQL数据库欠缺的功能。</p><h1 id="Scale横向扩展与分片机制"><a href="#Scale横向扩展与分片机制" class="headerlink" title="Scale横向扩展与分片机制"></a>Scale横向扩展与分片机制</h1><p>paxos算法解决了高可用、高可靠问题，并没有解决Scale横向扩展的问题，所以分片是必须支持的。NewSQL数据库都是天生内置分片机制的，而且会根据每个分片的数据负载(磁盘使用率、写入速度等)自动识别热点，然后进行分片的分裂、数据迁移、合并，这些过程应用是无感知的，这省去了DBA的很多运维工作量。以TiDB为例，它将数据切成region，如果region到64M时，数据自动进行迁移。</p><p>分库分表模式下需要应用设计之初就要明确各表的拆分键、拆分方式（range、取模、一致性哈希或者自定义路由表）、路由规则、拆分库表数量、扩容方式等。相比NewSQL数据库，这种模式给应用带来了很大侵入和复杂度，这对大多数系统来说也是一大挑战。</p><blockquote><p>分库分表模式也能做到在线扩容，基本思路是通过异步复制先追加数据，然后设置只读完成路由切换，最后放开写操作，当然这些需要中间件与数据库端配合一起才能完成。</p></blockquote><p><strong>这里有个问题是NewSQL数据库统一的内置分片策略（例如tidb基于range）可能并不是最高效的，因为与领域模型中的划分要素并不一致，这导致的后果是很多交易会产生分布式事务。</strong>举个例子，银行核心业务系统是以客户为维度，也就是说客户表、该客户的账户表、流水表在绝大部分场景下是一起写的，但如果按照各表主键range进行分片，这个交易并不能在一个分片上完成，这在高频OLTP系统中会带来性能问题。</p><h1 id="分布式SQL支持"><a href="#分布式SQL支持" class="headerlink" title="分布式SQL支持"></a>分布式SQL支持</h1><p>常见的单分片SQL，这两者都能很好支持。NewSQL数据库由于定位与目标是一个通用的数据库，所以支持的SQL会更完整，包括跨分片的join、聚合等复杂SQL。中间件模式多面向应用需求设计，不过大部分也支持带拆分键SQL、库表遍历、单库join、聚合、排序、分页等。但对跨库的join以及聚合支持就不够了。</p><p>NewSQL数据库一般并不支持存储过程、视图、外键等功能，而中间件模式底层就是传统关系数据库，这些功能如果只是涉及单库是比较容易支持的。</p><p>NewSQL数据库往往选择兼容MySQL或者PostgreSQL协议，所以SQL支持仅局限于这两种，中间件例如驱动模式往往只需做简单的SQL解析、计算路由、SQL重写，所以可以支持更多种类的数据库SQL。</p><p>SQL支持的差异主要在于分布式SQL执行计划生成器，由于NewSQL数据库具有底层数据的分布、统计信息，因此可以做CBO，生成的执行计划效率更高，而中间件模式下没有这些信息，往往只能基于规则RBO（Rule-Based-Opimization），这也是为什么中间件模式一般并不支持跨库join，因为实现了效率也往往并不高，还不如交给应用去做。</p><blockquote><p>这里也可以看出中间件+分库分表模式的架构风格体现出的是一种妥协、平衡，它是一个面向应用型的设计；而NewSQL数据库则要求更高、“大包大揽”，它是一个通用底层技术软件，因此后者的复杂度、技术门槛也高很多。</p></blockquote><h1 id="存储引擎"><a href="#存储引擎" class="headerlink" title="存储引擎"></a>存储引擎</h1><p>传统关系数据库的存储引擎设计都是面向磁盘的，大多都基于B+树。B+树通过降低树的高度减少随机读、进而减少磁盘寻道次数，提高读的性能，但大量的随机写会导致树的分裂，从而带来随机写，导致写性能下降。NewSQL的底层存储引擎则多采用LSM，相比B+树LSM将对磁盘的随机写变成顺序写，大大提高了写的性能。不过LSM的的读由于需要合并数据性能比B+树差，一般来说LSM更适合应在写大于读的场景。当然这只是单纯数据结构角度的对比，在数据库实际实现时还会通过SSD、缓冲、bloom filter等方式优化读写性能，所以读性能基本不会下降太多。NewSQL数据由于多副本、分布式事务等开销，相比单机关系数据库SQL的响应时间并不占优，但由于集群的弹性扩展，整体QPS提升还是很明显的，这也是NewSQL数据库厂商说分布式数据库更看重的是吞吐，而不是单笔SQL响应时间的原因。</p><h1 id="成熟度与生态"><a href="#成熟度与生态" class="headerlink" title="成熟度与生态"></a>成熟度与生态</h1><p>分布式数据库是个新型通用底层软件，准确的衡量与评价需要一个多维度的测试模型，需包括发展现状、使用情况、社区生态、监控运维、周边配套工具、功能满足度、DBA人才、SQL兼容性、性能测试、高可用测试、在线扩容、分布式事务、隔离级别、在线DDL等等，虽然NewSQL数据库发展经过了一定时间检验，但多集中在互联网以及传统企业非核心交易系统中，目前还处于快速迭代、规模使用不断优化完善的阶段。<br>相比而言，传统关系数据库则经过了多年的发展，通过完整的评测，在成熟度、功能、性能、周边生态、风险把控、相关人才积累等多方面都具有明显优势，同时对已建系统的兼容性也更好。</p><p><strong>对于互联网公司，数据量的增长压力以及追求新技术的基因会更倾向于尝试NewSQL数据库，不用再考虑库表拆分、应用改造、扩容、事务一致性等问题怎么看都是非常吸引人的方案。</strong></p><p><strong>对于传统企业例如银行这种风险意识较高的行业来说，NewSQL数据库则可能在未来一段时间内仍处于探索、审慎试点的阶段。基于中间件+分库分表模式架构简单，技术门槛更低，虽然没有NewSQL数据库功能全面，但大部分场景最核心的诉求也就是拆分后SQL的正确路由，而此功能中间件模式应对还是绰绰有余的，可以说在大多数OLTP场景是够用的。</strong></p><p><em>限于篇幅，其它特性例如在线DDL、数据迁移、运维工具等特性就不在本文展开对比。</em></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>如果看完以上内容，您还不知道选哪种模式，那么结合以下几个问题，先思考下NewSQL数据库解决的点对于自身是不是真正的痛点：</p><ul><li>强一致事务是否必须在数据库层解决？</li><li>数据的增长速度是否不可预估的？</li><li>扩容的频率是否已超出了自身运维能力？</li><li>相比响应时间更看重吞吐？</li><li>是否必须做到对应用完全透明？</li><li>是否有熟悉NewSQL数据库的DBA团队？</li></ul><p>如果以上有2到3个是肯定的，那么你可以考虑用NewSQL数据库了，虽然前期可能需要一定的学习成本，但它是数据库的发展方向，未来收益也会更高，尤其是互联网行业，随着数据量的突飞猛进，分库分表带来的痛苦会与日俱增。当然选择NewSQL数据库你也要做好承担一定风险的准备。</p><p>如果你还未做出抉择，不妨再想想下面几个问题：</p><ul><li>最终一致性是否可以满足实际场景？</li><li>数据未来几年的总量是否可以预估？</li><li>扩容、DDL等操作是否有系统维护窗口？</li><li>对响应时间是否比吞吐更敏感？</li><li>是否需要兼容已有的关系数据库系统？</li><li>是否已有传统数据库DBA人才的积累？</li><li>是否可容忍分库分表对应用的侵入？</li></ul><p>如果这些问题有多数是肯定的，那还是分库分表吧。在软件领域很少有完美的解决方案，NewSQL数据库也不是数据分布式架构的银弹。相比而言分库分表是一个代价更低、风险更小的方案，它最大程度复用传统关系数据库生态，通过中间件也可以满足分库分表后的绝大多数功能，定制化能力更强。<strong>在当前NewSQL数据库还未完全成熟的阶段，分库分表可以说是一个上限低但下限高的方案，尤其传统行业的核心系统，如果你仍然打算把数据库当做一个黑盒产品来用，踏踏实实用好分库分表会被认为是个稳妥的选择。</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://www.jifu.io/images/2/20190713002331.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;p&gt;最近与同行科技交流，经常被问到分库分表与分布式数据库如何选择，网上也有很多关于中间件+传统关系数据库（分库分表）与NewSQL分布式数据库的文章，但有些观点与判断是我觉得是偏激的，脱离环境去评价方案好坏其实有失公允。&lt;/p&gt;
&lt;p&gt;本文通过对两种模式关键特性实现原理对比，希望可以尽可能客观、中立的阐明各自真实的优缺点以及适用场景。&lt;/p&gt;
&lt;h1 id=&quot;NewSQL数据库先进在哪儿&quot;&gt;&lt;a href=&quot;#NewSQL数据库先进在哪儿&quot; class=&quot;headerlink&quot; title=&quot;NewSQL数据库先进在哪儿?&quot;&gt;&lt;/a&gt;NewSQL数据库先进在哪儿?&lt;/h1&gt;&lt;p&gt;首先关于“中间件+关系数据库分库分表”算不算NewSQL分布式数据库问题，国外有篇论文pavlo-newsql-sigmodrec，如果根据该文中的分类，Spanner、TiDB、OB算是第一种新架构型，Sharding-Sphere、Mycat、DRDS等中间件方案算是第二种（文中还有第三种云数据库，本文暂不详细介绍）。&lt;/p&gt;
&lt;p&gt;基于中间件（包括SDK和Proxy两种形式）+传统关系数据库（分库分表）模式是不是分布式架构？我觉得是的，因为存储确实也分布式了，也能实现横向扩展。但是不是”伪”分布式数据库？从架构先进性来看，这么说也有一定道理。”伪”主要体现在中间件层与底层DB重复的SQL解析与执行计划生成、存储引擎基于B+Tree等，这在分布式数据库架构中实际上冗余低效的。为了避免引起真伪分布式数据库的口水战，本文中NewSQL数据库特指这种新架构NewSQL数据库。&lt;/p&gt;
&lt;p&gt;NewSQL数据库相比中间件+分库分表的先进在哪儿？画一个简单的架构对比图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.jifu.io/images/2/20190713000943.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="back-end" scheme="http://www.jifu.io/categories/back-end/"/>
    
      <category term="Middle-ware" scheme="http://www.jifu.io/categories/back-end/Middle-ware/"/>
    
      <category term="MySQL" scheme="http://www.jifu.io/categories/back-end/Middle-ware/MySQL/"/>
    
    
      <category term="数据库" scheme="http://www.jifu.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="NewSQL" scheme="http://www.jifu.io/tags/NewSQL/"/>
    
      <category term="关系型数据库" scheme="http://www.jifu.io/tags/%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>Mac高效使用技巧</title>
    <link href="http://www.jifu.io/posts/3366946474/"/>
    <id>http://www.jifu.io/posts/3366946474/</id>
    <published>2019-07-08T12:19:11.000Z</published>
    <updated>2020-08-11T05:17:21.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://www.jifu.io/images/2/20190709003819.jpg" alt=""></p><h1 id="去格式粘贴"><a href="#去格式粘贴" class="headerlink" title="去格式粘贴"></a>去格式粘贴</h1><p>复制文本内容的时候经常会带格式（字号、颜色、字体，有时候还有看不见的代码），手动调整会很麻烦，</p><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><pre class="line-numbers language-bash"><code class="language-bash">Command+CCommand+V   --<span class="token operator">></span> Command + Shift + option + V<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>通过以上方法就能快速的丢弃原有的格式属性，使其与当前文本格式保持一致</p><p><img src="https://www.jifu.io/images/2/20190709002114.gif" alt=""></p><h1 id="Split-Screen分屏功能"><a href="#Split-Screen分屏功能" class="headerlink" title="Split Screen分屏功能"></a>Split Screen分屏功能</h1><p>这依旧是一条提升生产力的功能，习惯一个屏打开IDEA，另外一个开着Google，对于没有外接显示器来说我们可以使用Mac自带的分屏来实现（有的软件可能不支持）</p><h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><p>左键按住一个程序左上方绿色最大化按钮不动，这时会让你选择当前选中App会出现在哪一边，可以是左边也可以是右边，排好之后再点击另一个App就会出现在另一侧，这样一来，同一屏幕中就同时有了两个App的界面。中间有一条分隔线，拖动分割线可以重新划分左右的区域大小，可以让你的注意力更集中在某一方面。</p><a id="more"></a><p><img src="https://www.jifu.io/images/2/20190709002235.png" alt=""></p><h2 id="Xcode-和模拟器分屏需要在终端实现以下命令"><a href="#Xcode-和模拟器分屏需要在终端实现以下命令" class="headerlink" title="Xcode 和模拟器分屏需要在终端实现以下命令"></a>Xcode 和模拟器分屏需要在终端实现以下命令</h2><pre class="line-numbers language-bash"><code class="language-bash">defaults <span class="token function">write</span> com.apple.iphonesimulator AllowFullscreenMode -bool YES<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://www.jifu.io/images/2/20190709002304.jpg" alt=""></p><h1 id="应用程序“接力”"><a href="#应用程序“接力”" class="headerlink" title="应用程序“接力”"></a>应用程序“接力”</h1><p>例：“电脑上复制，手机上粘贴”的通用剪贴板，是不是很NB</p><p><img src="https://www.jifu.io/images/2/20190709002334.gif" alt=""></p><p><img src="https://www.jifu.io/images/2/20190709002446.gif" alt=""></p><h2 id="条件"><a href="#条件" class="headerlink" title="条件"></a>条件</h2><ol><li>所有设备均使用同一 Apple ID 登录 iCloud</li><li>所有设备均已开启蓝牙</li><li>所有设备均已开启 Wi-Fi</li></ol><h2 id="打开接力"><a href="#打开接力" class="headerlink" title="打开接力"></a>打开接力</h2><p>手机: 设置 –&gt; 通用 –&gt; 接力</p><h2 id="MAC：系统偏好设置-–-gt-通用-–-gt-允许在这台Mac和iClould设备之间使用“接力”"><a href="#MAC：系统偏好设置-–-gt-通用-–-gt-允许在这台Mac和iClould设备之间使用“接力”" class="headerlink" title="MAC：系统偏好设置 –&gt; 通用 –&gt; 允许在这台Mac和iClould设备之间使用“接力”"></a>MAC：系统偏好设置 –&gt; 通用 –&gt; 允许在这台Mac和iClould设备之间使用“接力”</h2><p>打开iClouds<br>手机打开iCloud：设置 –&gt; 头像 –&gt; iCloud<br>电脑打开iCloud：系统偏好设置 –&gt; iCloud</p><p><img src="https://www.jifu.io/images/2/20190709002515.jpg" alt=""></p><h1 id="快捷键切换应用"><a href="#快捷键切换应用" class="headerlink" title="快捷键切换应用"></a>快捷键切换应用</h1><p>这个应该不用说了吧，大家应该都知道</p><pre class="line-numbers language-bash"><code class="language-bash">Command+Tab<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://www.jifu.io/images/2/20190709002544.jpg" alt=""></p><h1 id="使用QQ录屏导出gif图"><a href="#使用QQ录屏导出gif图" class="headerlink" title="使用QQ录屏导出gif图"></a>使用QQ录屏导出gif图</h1><p><img src="https://www.jifu.io/images/2/20190709002603.jpg" alt=""></p><p><img src="https://www.jifu.io/images/2/20190709002619.jpg" alt=""></p><h1 id="显示桌面快捷键（类型Windows中的-Win-D效果）"><a href="#显示桌面快捷键（类型Windows中的-Win-D效果）" class="headerlink" title="显示桌面快捷键（类型Windows中的 Win + D效果）"></a>显示桌面快捷键（类型Windows中的 Win + D效果）</h1><p><img src="https://www.jifu.io/images/2/20190709002652.jpeg" alt=""></p><h1 id="手机投屏两种方式"><a href="#手机投屏两种方式" class="headerlink" title="手机投屏两种方式"></a>手机投屏两种方式</h1><h2 id="QuickTime-Player-系统自带，有线连接"><a href="#QuickTime-Player-系统自带，有线连接" class="headerlink" title="QuickTime Player -  (系统自带，有线连接)"></a>QuickTime Player -  (系统自带，有线连接)</h2><p><img src="https://www.jifu.io/images/2/20190709002711.jpg" alt=""></p><p><img src="https://www.jifu.io/images/2/20190709002741.jpg" alt=""></p><h2 id="AirServer-（第三方，无线连接）破解地址"><a href="#AirServer-（第三方，无线连接）破解地址" class="headerlink" title="AirServer （第三方，无线连接）破解地址"></a>AirServer （第三方，无线连接）<a href="https://www.jianshu.com/p/a02c4df1d3b0" target="_blank" rel="noopener">破解地址</a></h2><p><img src="https://www.jifu.io/images/2/20190709002803.jpg" alt=""></p><p><img src="https://www.jifu.io/images/2/20190709002823.jpg" alt=""></p><h1 id="快速定位到终端（Go2Shell插件）"><a href="#快速定位到终端（Go2Shell插件）" class="headerlink" title="快速定位到终端（Go2Shell插件）"></a>快速定位到终端（Go2Shell插件）</h1><p><img src="https://www.jifu.io/images/2/20190709002840.gif" alt=""></p><p><img src="https://www.jifu.io/images/2/20190709002851.jpg" alt=""></p><p><img src="https://www.jifu.io/images/2/20190709002921.jpg" alt=""></p><p><img src="https://www.jifu.io/images/2/20190709003014.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://www.jifu.io/images/2/20190709003819.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;去格式粘贴&quot;&gt;&lt;a href=&quot;#去格式粘贴&quot; class=&quot;headerlink&quot; title=&quot;去格式粘贴&quot;&gt;&lt;/a&gt;去格式粘贴&lt;/h1&gt;&lt;p&gt;复制文本内容的时候经常会带格式（字号、颜色、字体，有时候还有看不见的代码），手动调整会很麻烦，&lt;/p&gt;
&lt;h2 id=&quot;使用方法&quot;&gt;&lt;a href=&quot;#使用方法&quot; class=&quot;headerlink&quot; title=&quot;使用方法&quot;&gt;&lt;/a&gt;使用方法&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;Command+C
Command+V   --&amp;gt; Command + Shift + option + V
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;通过以上方法就能快速的丢弃原有的格式属性，使其与当前文本格式保持一致&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.jifu.io/images/2/20190709002114.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;Split-Screen分屏功能&quot;&gt;&lt;a href=&quot;#Split-Screen分屏功能&quot; class=&quot;headerlink&quot; title=&quot;Split Screen分屏功能&quot;&gt;&lt;/a&gt;Split Screen分屏功能&lt;/h1&gt;&lt;p&gt;这依旧是一条提升生产力的功能，习惯一个屏打开IDEA，另外一个开着Google，对于没有外接显示器来说我们可以使用Mac自带的分屏来实现（有的软件可能不支持）&lt;/p&gt;
&lt;h2 id=&quot;使用方法-1&quot;&gt;&lt;a href=&quot;#使用方法-1&quot; class=&quot;headerlink&quot; title=&quot;使用方法&quot;&gt;&lt;/a&gt;使用方法&lt;/h2&gt;&lt;p&gt;左键按住一个程序左上方绿色最大化按钮不动，这时会让你选择当前选中App会出现在哪一边，可以是左边也可以是右边，排好之后再点击另一个App就会出现在另一侧，这样一来，同一屏幕中就同时有了两个App的界面。中间有一条分隔线，拖动分割线可以重新划分左右的区域大小，可以让你的注意力更集中在某一方面。&lt;/p&gt;
    
    </summary>
    
      <category term="OPS" scheme="http://www.jifu.io/categories/OPS/"/>
    
      <category term="MacOS" scheme="http://www.jifu.io/categories/OPS/MacOS/"/>
    
    
      <category term="技巧" scheme="http://www.jifu.io/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Mac" scheme="http://www.jifu.io/tags/Mac/"/>
    
      <category term="高效" scheme="http://www.jifu.io/tags/%E9%AB%98%E6%95%88/"/>
    
  </entry>
  
  <entry>
    <title>Axel:命令行下轻量级多线程下载程序</title>
    <link href="http://www.jifu.io/posts/2867836530/"/>
    <id>http://www.jifu.io/posts/2867836530/</id>
    <published>2019-06-10T14:55:18.000Z</published>
    <updated>2020-08-11T05:17:21.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://www.jifu.io/images/2/20190611030404.png" alt=""></p><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>Axel 是一个轻量级下载程序，它和其他加速器一样，对同一个文件建立多个连接，每个连接下载单独的文件片段以更快地完成下载。</p><p>Axel 支持 HTTP、HTTPS、FTP 和 FTPS 协议。它也可以使用多个镜像站点下载单个文件，所以，Axel 可以加速下载高达 40％（大约，我个人认为）。它非常轻量级，因为它没有依赖并且使用非常少的 CPU 和内存。</p><p>Axel 一步到位地将所有数据直接下载到目标文件（LCTT 译注：而不是像其它的下载软件那样下载成多个文件块，然后拼接）。</p><blockquote><p>注意：不支持在单条命令中下载两个文件。</p></blockquote><p>你还可以尝试其他命令行下载管理器/加速器。</p><ul><li>aria2 - 超快速下载程序</li><li>wget - 标准命令行下载程序</li><li>curl - 命令行下载程序</li><li>Linux 下的最好的 4 个命令行下载管理器/加速器</li></ul><h1 id="Axel安装"><a href="#Axel安装" class="headerlink" title="Axel安装"></a>Axel安装</h1><p>大多数发行版（Debian、Ubuntu、Mint、Fedora、suse、openSUSE、Arch Linux、Manjaro、Mageia 等）都有 axel 包，所以我们可以从发行版官方仓库轻松安装。对于 CentOS/RHEL，我们需要启用 EPEL Repository。</p><a id="more"></a><h2 id="在-Debian-Ubuntu-LinuxMint-上安装-Axel"><a href="#在-Debian-Ubuntu-LinuxMint-上安装-Axel" class="headerlink" title="在 Debian/Ubuntu/LinuxMint 上安装 Axel"></a>在 Debian/Ubuntu/LinuxMint 上安装 Axel</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token variable">$sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> axel<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="在-RHEL-CentOS-上安装-Axel"><a href="#在-RHEL-CentOS-上安装-Axel" class="headerlink" title="在 RHEL/CentOS 上安装 Axel"></a>在 RHEL/CentOS 上安装 Axel</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token variable">$sudo</span> yum <span class="token function">install</span> axel<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="在-Fedora-上安装-Axel"><a href="#在-Fedora-上安装-Axel" class="headerlink" title="在 Fedora 上安装 Axel"></a>在 Fedora 上安装 Axel</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token variable">$sudo</span> dnf <span class="token function">install</span> axel<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="在-openSUSE-上安装-Axel"><a href="#在-openSUSE-上安装-Axel" class="headerlink" title="在 openSUSE 上安装 Axel"></a>在 openSUSE 上安装 Axel</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token variable">$sudo</span> zypper <span class="token function">install</span> axel<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="在-Mageia-上安装-Axel"><a href="#在-Mageia-上安装-Axel" class="headerlink" title="在 Mageia 上安装 Axel"></a>在 Mageia 上安装 Axel</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token variable">$sudo</span> urpmi axel<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="在基于-Arch-Linux-的发行版安装-Axel"><a href="#在基于-Arch-Linux-的发行版安装-Axel" class="headerlink" title="在基于 Arch Linux 的发行版安装 Axel"></a>在基于 Arch Linux 的发行版安装 Axel</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token variable">$sudo</span> pacman -S axel<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="下载单个文件"><a href="#下载单个文件" class="headerlink" title="下载单个文件"></a>下载单个文件</h1><p>以下命令将从给定的 URL 下载文件并存储在当前目录中，下载文件时，我们可以看到文件的信息（建立的连接数、下载速度、下载进度、完成下载所花费的时间以及连接完成的时间）。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># axel https://download.owncloud.org/community/owncloud-9.0.0.tar.bz2</span>Initializing download: https://download.owncloud.org/community/owncloud-9.0.0.tar.bz2File size: 22678208 bytesOpening output <span class="token function">file</span> owncloud-9.0.0.tar.bz2Starting download<span class="token punctuation">[</span> 0%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 146.7KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 0%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 267.0KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 0%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 373.9KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 0%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 406.9KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 0%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 487.5KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 1%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 572.6KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 1%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 650.7KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 1%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 649.3KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 1%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 718.1KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 2%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 769.3KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 2%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 838.7KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 2%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 866.0KB/s<span class="token punctuation">]</span>Connection 0 finished<span class="token keyword">.</span><span class="token keyword">.</span><span class="token punctuation">[</span> 99%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span>5721.0KB/s<span class="token punctuation">]</span>Connection 2 finished<span class="token punctuation">[</span> 99%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span>5733.4KB/s<span class="token punctuation">]</span>Connection 1 finished<span class="token punctuation">[</span> 99%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span>5745.4KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span>100%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>Downloaded 21.6 megabytes <span class="token keyword">in</span> 3 seconds. <span class="token punctuation">(</span>5755.94 KB/s<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="用不同的名称保存文件"><a href="#用不同的名称保存文件" class="headerlink" title="用不同的名称保存文件"></a>用不同的名称保存文件</h1><p>要使用其他名称来保存文件，启动下载时可以添加 -o（小写字母）选项和文件名。这里我们使用文件名 owncloud.tar.bz2 来保存文件。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># axel -o cloud.tar.bz2 https://download.owncloud.org/community/owncloud-9.0.0.tar.bz2</span>Initializing download: https://download.owncloud.org/community/owncloud-9.0.0.tar.bz2File size: 22678208 bytesOpening output <span class="token function">file</span> cloud.tar.bz2Starting download<span class="token punctuation">[</span> 0%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 143.0KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 0%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 264.1KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 0%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 309.8KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 0%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 406.3KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 0%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 495.4KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 1%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 586.3KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 1%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 673.1KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 1%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 647.1KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 1%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 721.1KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 2%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 781.3KB/s<span class="token punctuation">]</span>Connection 2 finished<span class="token keyword">.</span><span class="token keyword">.</span>Connection 0 finished<span class="token punctuation">[</span> 98%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span>6221.9KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 98%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span>.Connection 1 finished,,,,,,,,,, ,,,,,,,,,, ,,,,,<span class="token punctuation">..</span><span class="token punctuation">..</span>. <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span>6145.6KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 99%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span>6159.2KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 99%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span>6172.0KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 99%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span>5977.9KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 99%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span>5989.6KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span>100%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>Downloaded 21.6 megabytes <span class="token keyword">in</span> 3 seconds. <span class="token punctuation">(</span>6001.05 KB/s<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="限制下载速度"><a href="#限制下载速度" class="headerlink" title="限制下载速度"></a>限制下载速度</h1><p>默认情况下 axel 以字节/秒为单位设置下载文件的最大速度。当我们的网络连接速度较慢时，可以使用此选项。只需添加 -s 选项，后面跟字节值。这里我们要限速 512 KB/s 下载一个文件。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># axel -s 512000 https://download.owncloud.org/community/owncloud-9.0.0.tar.bz2</span>Initializing download: https://download.owncloud.org/community/owncloud-9.0.0.tar.bz2File size: 22678208 bytesOpening output <span class="token function">file</span> owncloud-9.0.0.tar.bz2Starting download<span class="token punctuation">[</span> 0%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 141.5KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 0%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 266.1KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 0%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 308.0KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 0%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 405.9KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 0%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 496.7KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 1%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 526.4KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 1%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 507.0KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 1%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 505.6KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 1%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 504.8KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 2%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 503.9KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 2%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 503.4KB/s<span class="token punctuation">]</span><span class="token keyword">.</span><span class="token keyword">.</span><span class="token punctuation">[</span> 99%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 497.0KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 99%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 496.9KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span>100%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span>Connection 0 finished,,,,,,,,,, ,,<span class="token punctuation">..</span><span class="token punctuation">..</span>.Connection 1 finishedConnection 3 finished,,,,,,,,,, ,,,,,,,<span class="token punctuation">..</span>. <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>Downloaded 21.6 megabytes <span class="token keyword">in</span> 44 seconds. <span class="token punctuation">(</span>494.54 KB/s<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="限制连接数"><a href="#限制连接数" class="headerlink" title="限制连接数"></a>限制连接数</h1><p>axel 默认建立 4 个连接以从不同的镜像获取文件。此外，我们可以通过使用 -n 选项添加更多的连接，后跟连接数 10 来提高下载速度。保险起见，我们添加了十个连接，但不幸的是，它花了更多时间来下载文件。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># axel -n 10 https://download.owncloud.org/community/owncloud-9.0.0.tar.bz2</span>Initializing download: https://download.owncloud.org/community/owncloud-9.0.0.tar.bz2File size: 22678208 bytesOpening output <span class="token function">file</span> owncloud-9.0.0.tar.bz2Starting download<span class="token punctuation">[</span> 0%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 140.8KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 0%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 265.7KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 0%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 305.4KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 0%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 402.1KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 0%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 496.3KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 1%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 522.1KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 1%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 567.5KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 1%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 640.5KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 1%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 710.8KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 2%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 780.5KB/s<span class="token punctuation">]</span><span class="token keyword">.</span><span class="token keyword">.</span><span class="token punctuation">[</span> 98%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span>7544.9KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 98%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span>7557.9KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 98%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span>7570.4KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 98%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span>7495.3KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 99%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>Connection 2 finished,,,,,,,,,, ,,,,,,,,,, ,,,,,,,,,, ,,,,,,,,,, ,,,,,,<span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span>7311.6KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 99%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span>7318.9KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 99%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>Connection 9 finished,,,,,,,,,, ,,,,,,,,,, ,,,,,,,,,, ,,,,,,,,,, ,,,,,,,,,, <span class="token punctuation">[</span>7331.0KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 99%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>Connection 3 finished,,,,,,,,,, ,,,,,,,,,, ,,,,,,,,,, ,,,,,,,,,, <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span>4300.7KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span>100%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>Downloaded 21.6 megabytes <span class="token keyword">in</span> 5 seconds. <span class="token punctuation">(</span>4109.41 KB/s<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="恢复未完成的下载"><a href="#恢复未完成的下载" class="headerlink" title="恢复未完成的下载"></a>恢复未完成的下载</h1><p>axel 默认具有恢复未完成的下载的行为。Axel 在下载文件时定期更新状态文件（扩展名为 .st）。由于某些原因，下载中途停止了？不用担心，只要使用相同的 axel 命令，它将会检查 file 和 file.st，如果找到，它会从停止处恢复下载。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># axel https://download.owncloud.org/community/owncloud-9.0.0.tar.bz2</span>Initializing download: https://download.owncloud.org/community/owncloud-9.0.0.tar.bz2File size: 22678208 bytesOpening output <span class="token function">file</span> owncloud-9.0.0.tar.bz2Starting download<span class="token punctuation">[</span> 0%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 140.8KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 0%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 265.7KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 0%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 305.4KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 0%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 402.1KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 0%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 496.3KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 1%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 522.1KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 1%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 567.5KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 1%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 640.5KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 1%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 710.8KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 2%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 780.5KB/s<span class="token punctuation">]</span><span class="token keyword">.</span><span class="token keyword">.</span><span class="token punctuation">[</span> 84%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span>7100.7KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 84%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span>7104.3KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 84%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> .^CDownloaded 18.3 megabytes <span class="token keyword">in</span> 2 seconds. <span class="token punctuation">(</span>7009.79 KB/s<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上面的输出清晰地显示了在下载断开时有两个文件 owncloud-9.0.0.tar.bz2 和 owncloud-9.0.0.tar.bz2.st。当重新开始下载时，它会从停止处开始下载。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># ls -lh</span>total 19M-rw------- 1 root root 22M Dec 27 08:33 owncloud-9.0.0.tar.bz2-rw------- 1 root root 44 Dec 27 08:33 owncloud-9.0.0.tar.bz2.st<span class="token comment" spellcheck="true"># axel https://download.owncloud.org/community/owncloud-9.0.0.tar.bz2</span>Initializing download: https://download.owncloud.org/community/owncloud-9.0.0.tar.bz2File size: 22678208 bytesOpening output <span class="token function">file</span> owncloud-9.0.0.tar.bz2State <span class="token function">file</span> found: 19180828 bytes downloaded, 3497380 to go.Starting download,,,,,,,,,, ,,,,,,,,,, ,,,,,,,,,, ,<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>. <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 66.5KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 84%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 186.0KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 85%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 241.7KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 85%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 335.6KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 85%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 351.5KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 85%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 427.1KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 85%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 427.4KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 86%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span> 491.5KB/s<span class="token punctuation">]</span><span class="token keyword">.</span><span class="token keyword">.</span><span class="token punctuation">[</span> 98%<span class="token punctuation">]</span> <span class="token punctuation">..</span>.Connection 0 finished,,,<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>. <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span>2106.6KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 99%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span>2140.5KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 99%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span>2172.4KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 99%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span>2203.2KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span> 99%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">[</span>2236.2KB/s<span class="token punctuation">]</span><span class="token punctuation">[</span>100%<span class="token punctuation">]</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>Downloaded 3415.4 kilobytes <span class="token keyword">in</span> 1 second. <span class="token punctuation">(</span>2264.93 KB/s<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="不显示文件下载进度"><a href="#不显示文件下载进度" class="headerlink" title="不显示文件下载进度"></a>不显示文件下载进度</h1><p>如果你不想要看到文件的下载进度，只要在 axel 命令中加入 -q 选项。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># axel -q https://download.owncloud.org/community/owncloud-9.0.0.tar.bz2</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="替换进度条"><a href="#替换进度条" class="headerlink" title="替换进度条"></a>替换进度条</h1><p>如果你不喜欢默认的进度条，你可以使用 -a 选项来替换进度条。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># axel -a https://download.owncloud.org/community/owncloud-9.0.0.tar.bz2</span>Initializing download: https://download.owncloud.org/community/owncloud-9.0.0.tar.bz2File size: 22678208 bytesOpening output <span class="token function">file</span> owncloud-9.0.0.tar.bz2Starting download<span class="token punctuation">[</span> 66%<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>0 <span class="token punctuation">..</span>.1 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>2 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>.3<span class="token punctuation">]</span> <span class="token punctuation">[</span> 5.8MB/s<span class="token punctuation">]</span> <span class="token punctuation">[</span>00:01<span class="token punctuation">]</span>^CDownloaded 14.3 megabytes <span class="token keyword">in</span> 2 seconds. <span class="token punctuation">(</span>5916.11 KB/s<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们中断了上面的下载，以便在下载文件时能清楚地显示替代进度条状态。一旦文件成功下载后，你可以看到相同的输出，如下所示。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># axel -a https://download.owncloud.org/community/owncloud-9.0.0.tar.bz2</span>File size: 22678208 bytesOpening output <span class="token function">file</span> owncloud-9.0.0.tar.bz2Starting downloadConnection 2 finished <span class="token punctuation">]</span>Connection 1 finished <span class="token punctuation">]</span>Connection 3 finished <span class="token punctuation">]</span>Connection 0 finished <span class="token punctuation">]</span>Downloaded 21.6 megabytes <span class="token keyword">in</span> 4 seconds. <span class="token punctuation">(</span>5062.32 KB/s<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="了解关于-axel-的更多信息"><a href="#了解关于-axel-的更多信息" class="headerlink" title="了解关于 axel 的更多信息"></a>了解关于 axel 的更多信息</h1><p>如果你想要了解更多关于 axel 的选项，只需要进入它的手册。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># man axel</span>或者<span class="token comment" spellcheck="true"># axel --help</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://www.jifu.io/images/2/20190611030404.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h1&gt;&lt;p&gt;Axel 是一个轻量级下载程序，它和其他加速器一样，对同一个文件建立多个连接，每个连接下载单独的文件片段以更快地完成下载。&lt;/p&gt;
&lt;p&gt;Axel 支持 HTTP、HTTPS、FTP 和 FTPS 协议。它也可以使用多个镜像站点下载单个文件，所以，Axel 可以加速下载高达 40％（大约，我个人认为）。它非常轻量级，因为它没有依赖并且使用非常少的 CPU 和内存。&lt;/p&gt;
&lt;p&gt;Axel 一步到位地将所有数据直接下载到目标文件（LCTT 译注：而不是像其它的下载软件那样下载成多个文件块，然后拼接）。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：不支持在单条命令中下载两个文件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;你还可以尝试其他命令行下载管理器/加速器。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;aria2 - 超快速下载程序&lt;/li&gt;
&lt;li&gt;wget - 标准命令行下载程序&lt;/li&gt;
&lt;li&gt;curl - 命令行下载程序&lt;/li&gt;
&lt;li&gt;Linux 下的最好的 4 个命令行下载管理器/加速器&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Axel安装&quot;&gt;&lt;a href=&quot;#Axel安装&quot; class=&quot;headerlink&quot; title=&quot;Axel安装&quot;&gt;&lt;/a&gt;Axel安装&lt;/h1&gt;&lt;p&gt;大多数发行版（Debian、Ubuntu、Mint、Fedora、suse、openSUSE、Arch Linux、Manjaro、Mageia 等）都有 axel 包，所以我们可以从发行版官方仓库轻松安装。对于 CentOS/RHEL，我们需要启用 EPEL Repository。&lt;/p&gt;
    
    </summary>
    
      <category term="OPS" scheme="http://www.jifu.io/categories/OPS/"/>
    
      <category term="Others" scheme="http://www.jifu.io/categories/OPS/Others/"/>
    
    
      <category term="命令行" scheme="http://www.jifu.io/tags/%E5%91%BD%E4%BB%A4%E8%A1%8C/"/>
    
      <category term="Axel" scheme="http://www.jifu.io/tags/Axel/"/>
    
      <category term="多线程" scheme="http://www.jifu.io/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
      <category term="下载" scheme="http://www.jifu.io/tags/%E4%B8%8B%E8%BD%BD/"/>
    
  </entry>
  
</feed>
